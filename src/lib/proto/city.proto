syntax = "proto3";

package ai_poi.city.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/FACorreiaa/loci-proto/proto/city/v1";

// CityService provides city information and management
service CityService {
  // Get all available cities
  rpc GetCities(GetCitiesRequest) returns (GetCitiesResponse);

  // Get specific city details
  rpc GetCity(GetCityRequest) returns (GetCityResponse);

  // Search cities by name or criteria
  rpc SearchCities(SearchCitiesRequest) returns (SearchCitiesResponse);

  // Get city statistics
  rpc GetCityStatistics(GetCityStatisticsRequest) returns (GetCityStatisticsResponse);
}

// Core city entity
message City {
  string id = 1;
  string name = 2;
  string country = 3;
  string country_code = 4; // ISO 3166-1 alpha-2
  string state_province = 5;
  double latitude = 6;
  double longitude = 7;
  string timezone = 8;
  int64 population = 9;
  string currency = 10;
  repeated string languages = 11;
  string description = 12;
  repeated string highlights = 13;
  string climate = 14;
  string best_time_to_visit = 15;
  repeated string top_attractions = 16;
  CityMetadata metadata = 17;
  google.protobuf.Timestamp created_at = 18;
  google.protobuf.Timestamp updated_at = 19;
}

// City metadata
message CityMetadata {
  string image_url = 1;
  repeated string image_gallery = 2;
  string official_website = 3;
  string tourism_website = 4;
  bool is_capital = 5;
  bool is_popular_destination = 6;
  string safety_rating = 7; // "low", "medium", "high"
  double cost_of_living_index = 8;
  string walkability_score = 9; // "low", "medium", "high"
  repeated string transport_options = 10;
}

// City statistics
message CityStatistics {
  string city_id = 1;
  int32 total_pois = 2;
  int32 total_restaurants = 3;
  int32 total_hotels = 4;
  int32 total_attractions = 5;
  int32 user_visits = 6;
  int32 saved_itineraries = 7;
  double average_rating = 8;
  repeated CategoryCount poi_by_category = 9;
  google.protobuf.Timestamp last_updated = 10;
}

// POI count by category
message CategoryCount {
  string category = 1;
  int32 count = 2;
}

// Weather information for cities
message WeatherInfo {
  string city_id = 1;
  string current_condition = 2;
  int32 temperature_celsius = 3;
  int32 humidity = 4;
  string description = 5;
  string forecast_url = 6;
  google.protobuf.Timestamp last_updated = 7;
}

// Request/Response messages
message GetCitiesRequest {
  int32 limit = 1;
  int32 offset = 2;
  bool include_statistics = 3;
  string country_code = 4; // Filter by country
  bool popular_only = 5; // Only popular destinations
  BaseRequest request = 100;
}

message GetCitiesResponse {
  repeated City cities = 1;
  int32 total_count = 2;
  BaseResponse response = 100;
}

message GetCityRequest {
  string city_id = 1;
  bool include_statistics = 2;
  bool include_weather = 3;
  BaseRequest request = 100;
}

message GetCityResponse {
  City city = 1;
  CityStatistics statistics = 2;
  WeatherInfo weather = 3;
  BaseResponse response = 100;
}

message SearchCitiesRequest {
  string query = 1;
  string country_code = 2;
  int32 limit = 3;
  int32 offset = 4;
  bool fuzzy_search = 5; // Enable fuzzy matching
  BaseRequest request = 100;
}

message SearchCitiesResponse {
  repeated CitySearchResult results = 1;
  int32 total_count = 2;
  SearchMetadata metadata = 3;
  BaseResponse response = 100;
}

message CitySearchResult {
  City city = 1;
  double relevance_score = 2;
  string match_reason = 3;
}

message SearchMetadata {
  double query_time_ms = 1;
  string search_method = 2;
  bool fuzzy_matching_used = 3;
}

message GetCityStatisticsRequest {
  string city_id = 1;
  bool include_trends = 2;
  BaseRequest request = 100;
}

message GetCityStatisticsResponse {
  CityStatistics statistics = 1;
  repeated TrendData trends = 2;
  BaseResponse response = 100;
}

message TrendData {
  string metric = 1; // "visits", "pois_added", "itineraries_created"
  repeated DataPoint data_points = 2;
  string period = 3; // "daily", "weekly", "monthly"
}

message DataPoint {
  google.protobuf.Timestamp timestamp = 1;
  double value = 2;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}

message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}
