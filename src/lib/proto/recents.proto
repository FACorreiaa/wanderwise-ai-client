syntax = "proto3";

package ai_poi.recents.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/FACorreiaa/loci-proto/proto/recents/v1";

// RecentsService provides recent user interactions and activity tracking
service RecentsService {
  rpc GetRecentInteractions(GetRecentInteractionsRequest) returns (GetRecentInteractionsResponse);

  // Get recent interactions for a specific city
  rpc GetCityInteractions(GetCityInteractionsRequest) returns (GetCityInteractionsResponse);

  // Record a new user interaction (internal)
  rpc RecordInteraction(RecordInteractionRequest) returns (RecordInteractionResponse);

  // Get user's interaction history with filters
  rpc GetInteractionHistory(GetInteractionHistoryRequest) returns (GetInteractionHistoryResponse);

  // Get frequently visited places
  rpc GetFrequentPlaces(GetFrequentPlacesRequest) returns (GetFrequentPlacesResponse);
}

// Recent interaction entity
message RecentInteraction {
  string id = 1;
  string user_id = 2;
  InteractionType interaction_type = 3;
  string entity_id = 4; // POI ID, City ID, etc.
  string entity_type = 5; // "poi", "city", "itinerary", "search"
  string entity_name = 6;
  string description = 7;
  string city_id = 8;
  string city_name = 9;
  string country = 10;
  InteractionContext context = 11;
  map<string, string> metadata = 12;
  google.protobuf.Timestamp created_at = 13;
}

// Types of interactions
enum InteractionType {
  INTERACTION_TYPE_UNSPECIFIED = 0;
  INTERACTION_TYPE_SEARCH = 1;
  INTERACTION_TYPE_VIEW = 2;
  INTERACTION_TYPE_FAVORITE = 3;
  INTERACTION_TYPE_UNFAVORITE = 4;
  INTERACTION_TYPE_SAVE_ITINERARY = 5;
  INTERACTION_TYPE_CREATE_LIST = 6;
  INTERACTION_TYPE_CHAT = 7;
  INTERACTION_TYPE_DISCOVERY = 8;
  INTERACTION_TYPE_RECOMMENDATION_CLICK = 9;
  INTERACTION_TYPE_BOOKING_ATTEMPT = 10;
}

// Context of the interaction
message InteractionContext {
  string source_page = 1; // "discover", "search", "chat", "recommendations"
  string user_agent = 2;
  string device_type = 3; // "mobile", "tablet", "desktop"
  GeoLocation location = 4;
  string session_id = 5;
  string referrer = 6;
  map<string, string> custom_properties = 7;
}

// Geographic location
message GeoLocation {
  double latitude = 1;
  double longitude = 2;
  string city = 3;
  string country = 4;
  double accuracy = 5; // in meters
}

// City interactions summary
message CityInteractions {
  string city_id = 1;
  string city_name = 2;
  string country = 3;
  string country_code = 4;
  int32 total_interactions = 5;
  int32 searches = 6;
  int32 favorites = 7;
  int32 itineraries_created = 8;
  int32 pois_viewed = 9;
  google.protobuf.Timestamp first_interaction = 10;
  google.protobuf.Timestamp last_interaction = 11;
  repeated string top_categories = 12;
  CityPreferences preferences = 13;
}

// User preferences for a city based on interactions
message CityPreferences {
  repeated string preferred_categories = 1;
  string preferred_price_range = 2;
  double preferred_radius_meters = 3;
  string preferred_time_of_day = 4;
  repeated string avoided_categories = 5;
}

// Frequent place information
message FrequentPlace {
  string place_id = 1;
  string place_name = 2;
  string place_type = 3; // "poi", "city", "area"
  string category = 4;
  double latitude = 5;
  double longitude = 6;
  string city_name = 7;
  int32 visit_count = 8;
  int32 interaction_count = 9;
  google.protobuf.Timestamp first_visit = 10;
  google.protobuf.Timestamp last_visit = 11;
  double visit_frequency_score = 12; // Algorithm-calculated frequency score
  repeated InteractionType interaction_types = 13;
}

// Interaction filters
message InteractionFilter {
  repeated InteractionType interaction_types = 1;
  repeated string entity_types = 2;
  string city_id = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
  string search_query = 6;
  repeated string categories = 7;
}

// Request/Response messages
message GetRecentInteractionsRequest {
  string user_id = 1;
  int32 limit = 2; // Default: 20, Max: 100
  int32 offset = 3;
  InteractionFilter filter = 4;
  bool group_by_city = 5; // Group results by city
  BaseRequest request = 100;
}

message GetRecentInteractionsResponse {
  repeated RecentInteraction interactions = 1;
  int32 total_count = 2;
  repeated CityInteractionSummary city_summaries = 3; // When group_by_city is true
  InteractionAnalytics analytics = 4;
  BaseResponse response = 100;
}

// Summary of interactions by city
message CityInteractionSummary {
  string city_id = 1;
  string city_name = 2;
  string country = 3;
  int32 interaction_count = 4;
  google.protobuf.Timestamp latest_interaction = 5;
  repeated RecentInteraction recent_interactions = 6; // Limited to most recent
}

// Analytics for the interactions
message InteractionAnalytics {
  int32 total_interactions_today = 1;
  int32 total_interactions_this_week = 2;
  int32 unique_cities_visited = 3;
  repeated string top_categories = 4;
  string most_active_time_of_day = 5;
  double average_interactions_per_day = 6;
}

message GetCityInteractionsRequest {
  string user_id = 1;
  string city_name = 2;
  bool include_details = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
  BaseRequest request = 100;
}

message GetCityInteractionsResponse {
  CityInteractions city_interactions = 1;
  repeated RecentInteraction detailed_interactions = 2; // When include_details is true
  CityInsights insights = 3;
  BaseResponse response = 100;
}

// Insights about user behavior in a city
message CityInsights {
  string discovery_pattern = 1; // "explorer", "focused", "returner"
  repeated string suggested_categories = 2;
  repeated string unexplored_areas = 3;
  double engagement_score = 4; // 0-100
  string visit_frequency = 5; // "first_time", "occasional", "frequent"
}

message RecordInteractionRequest {
  string user_id = 1;
  InteractionType interaction_type = 2;
  string entity_id = 3;
  string entity_type = 4;
  string entity_name = 5;
  string city_id = 6;
  InteractionContext context = 7;
  map<string, string> metadata = 8;
  BaseRequest request = 100;
}

message RecordInteractionResponse {
  bool success = 1;
  string interaction_id = 2;
  string message = 3;
  BaseResponse response = 100;
}

message GetInteractionHistoryRequest {
  string user_id = 1;
  InteractionFilter filter = 2;
  int32 limit = 3;
  int32 offset = 4;
  string sort_by = 5; // "date", "frequency", "relevance"
  string sort_order = 6; // "asc", "desc"
  bool include_analytics = 7;
  BaseRequest request = 100;
}

message GetInteractionHistoryResponse {
  repeated RecentInteraction interactions = 1;
  int32 total_count = 2;
  InteractionAnalytics analytics = 3;
  repeated TrendData trends = 4; // Historical trends
  BaseResponse response = 100;
}

// Trend data for interactions over time
message TrendData {
  google.protobuf.Timestamp date = 1;
  int32 interaction_count = 2;
  repeated InteractionTypeCount type_breakdown = 3;
}

message InteractionTypeCount {
  InteractionType type = 1;
  int32 count = 2;
}

message GetFrequentPlacesRequest {
  string user_id = 1;
  int32 limit = 2; // Default: 10
  double min_frequency_score = 3; // Minimum frequency score to include
  string time_range = 4; // "30d", "90d", "1y", "all"
  repeated string place_types = 5; // Filter by place types
  BaseRequest request = 100;
}

message GetFrequentPlacesResponse {
  repeated FrequentPlace places = 1;
  FrequentPlaceInsights insights = 2;
  BaseResponse response = 100;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}

message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}

// Insights about user's frequent places
message FrequentPlaceInsights {
  string travel_pattern = 1; // "local_explorer", "city_hopper", "neighborhood_focused"
  repeated string favorite_categories = 2;
  double exploration_diversity_score = 3; // 0-100, higher = more diverse
  string loyalty_level = 4; // "low", "medium", "high"
  repeated string recommended_new_places = 5;
}
