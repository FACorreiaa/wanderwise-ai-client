/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.user.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: user.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.ai_poi = {};
proto.ai_poi.user = {};
proto.ai_poi.user.v1 = require('./user_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.user.v1.UserServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.user.v1.UserServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetUserProfileRequest,
 *   !proto.ai_poi.user.v1.GetUserProfileResponse>}
 */
const methodDescriptor_UserService_GetUserProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetUserProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetUserProfileRequest,
  proto.ai_poi.user.v1.GetUserProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetUserProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetUserProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetUserProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetUserProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetUserProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getUserProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetUserProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetUserProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetUserProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetUserProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getUserProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetUserProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetUserProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.UpdateUserProfileRequest,
 *   !proto.ai_poi.user.v1.UpdateUserProfileResponse>}
 */
const methodDescriptor_UserService_UpdateUserProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/UpdateUserProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.UpdateUserProfileRequest,
  proto.ai_poi.user.v1.UpdateUserProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.UpdateUserProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.UpdateUserProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.UpdateUserProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.UpdateUserProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.UpdateUserProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.updateUserProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateUserProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateUserProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.UpdateUserProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.UpdateUserProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.updateUserProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateUserProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateUserProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetSearchProfilesRequest,
 *   !proto.ai_poi.user.v1.GetSearchProfilesResponse>}
 */
const methodDescriptor_UserService_GetSearchProfiles = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetSearchProfiles',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetSearchProfilesRequest,
  proto.ai_poi.user.v1.GetSearchProfilesResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetSearchProfilesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetSearchProfilesResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetSearchProfilesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetSearchProfilesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetSearchProfilesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getSearchProfiles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfiles',
      request,
      metadata || {},
      methodDescriptor_UserService_GetSearchProfiles,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetSearchProfilesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetSearchProfilesResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getSearchProfiles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfiles',
      request,
      metadata || {},
      methodDescriptor_UserService_GetSearchProfiles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetSearchProfileRequest,
 *   !proto.ai_poi.user.v1.GetSearchProfileResponse>}
 */
const methodDescriptor_UserService_GetSearchProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetSearchProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetSearchProfileRequest,
  proto.ai_poi.user.v1.GetSearchProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetSearchProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetSearchProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetSearchProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetSearchProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getSearchProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetSearchProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetSearchProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getSearchProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetSearchProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.CreateSearchProfileRequest,
 *   !proto.ai_poi.user.v1.CreateSearchProfileResponse>}
 */
const methodDescriptor_UserService_CreateSearchProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/CreateSearchProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.CreateSearchProfileRequest,
  proto.ai_poi.user.v1.CreateSearchProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.CreateSearchProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.CreateSearchProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.CreateSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.CreateSearchProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.CreateSearchProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.createSearchProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateSearchProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.CreateSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.CreateSearchProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.createSearchProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateSearchProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.UpdateSearchProfileRequest,
 *   !proto.ai_poi.user.v1.UpdateSearchProfileResponse>}
 */
const methodDescriptor_UserService_UpdateSearchProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/UpdateSearchProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.UpdateSearchProfileRequest,
  proto.ai_poi.user.v1.UpdateSearchProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.UpdateSearchProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.UpdateSearchProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.UpdateSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.UpdateSearchProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.UpdateSearchProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.updateSearchProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateSearchProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.UpdateSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.UpdateSearchProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.updateSearchProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateSearchProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.DeleteSearchProfileRequest,
 *   !proto.ai_poi.user.v1.DeleteSearchProfileResponse>}
 */
const methodDescriptor_UserService_DeleteSearchProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/DeleteSearchProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.DeleteSearchProfileRequest,
  proto.ai_poi.user.v1.DeleteSearchProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.DeleteSearchProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.DeleteSearchProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.DeleteSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.DeleteSearchProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.DeleteSearchProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.deleteSearchProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteSearchProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.DeleteSearchProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.DeleteSearchProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.deleteSearchProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteSearchProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteSearchProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetDefaultProfileRequest,
 *   !proto.ai_poi.user.v1.GetDefaultProfileResponse>}
 */
const methodDescriptor_UserService_GetDefaultProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetDefaultProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetDefaultProfileRequest,
  proto.ai_poi.user.v1.GetDefaultProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetDefaultProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetDefaultProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetDefaultProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetDefaultProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetDefaultProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getDefaultProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetDefaultProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetDefaultProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetDefaultProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetDefaultProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getDefaultProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetDefaultProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_GetDefaultProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.SetDefaultProfileRequest,
 *   !proto.ai_poi.user.v1.SetDefaultProfileResponse>}
 */
const methodDescriptor_UserService_SetDefaultProfile = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/SetDefaultProfile',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.SetDefaultProfileRequest,
  proto.ai_poi.user.v1.SetDefaultProfileResponse,
  /**
   * @param {!proto.ai_poi.user.v1.SetDefaultProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.SetDefaultProfileResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.SetDefaultProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.SetDefaultProfileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.SetDefaultProfileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.setDefaultProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/SetDefaultProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_SetDefaultProfile,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.SetDefaultProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.SetDefaultProfileResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.setDefaultProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/SetDefaultProfile',
      request,
      metadata || {},
      methodDescriptor_UserService_SetDefaultProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetInterestsRequest,
 *   !proto.ai_poi.user.v1.GetInterestsResponse>}
 */
const methodDescriptor_UserService_GetInterests = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetInterests',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetInterestsRequest,
  proto.ai_poi.user.v1.GetInterestsResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetInterestsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetInterestsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetInterestsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetInterestsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetInterestsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getInterests =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetInterests',
      request,
      metadata || {},
      methodDescriptor_UserService_GetInterests,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetInterestsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetInterestsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getInterests =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetInterests',
      request,
      metadata || {},
      methodDescriptor_UserService_GetInterests);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.CreateInterestRequest,
 *   !proto.ai_poi.user.v1.CreateInterestResponse>}
 */
const methodDescriptor_UserService_CreateInterest = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/CreateInterest',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.CreateInterestRequest,
  proto.ai_poi.user.v1.CreateInterestResponse,
  /**
   * @param {!proto.ai_poi.user.v1.CreateInterestRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.CreateInterestResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.CreateInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.CreateInterestResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.CreateInterestResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.createInterest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateInterest,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.CreateInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.CreateInterestResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.createInterest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateInterest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.UpdateInterestRequest,
 *   !proto.ai_poi.user.v1.UpdateInterestResponse>}
 */
const methodDescriptor_UserService_UpdateInterest = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/UpdateInterest',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.UpdateInterestRequest,
  proto.ai_poi.user.v1.UpdateInterestResponse,
  /**
   * @param {!proto.ai_poi.user.v1.UpdateInterestRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.UpdateInterestResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.UpdateInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.UpdateInterestResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.UpdateInterestResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.updateInterest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateInterest,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.UpdateInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.UpdateInterestResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.updateInterest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateInterest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.DeleteInterestRequest,
 *   !proto.ai_poi.user.v1.DeleteInterestResponse>}
 */
const methodDescriptor_UserService_DeleteInterest = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/DeleteInterest',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.DeleteInterestRequest,
  proto.ai_poi.user.v1.DeleteInterestResponse,
  /**
   * @param {!proto.ai_poi.user.v1.DeleteInterestRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.DeleteInterestResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.DeleteInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.DeleteInterestResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.DeleteInterestResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.deleteInterest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteInterest,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.DeleteInterestRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.DeleteInterestResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.deleteInterest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteInterest',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteInterest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetTagsRequest,
 *   !proto.ai_poi.user.v1.GetTagsResponse>}
 */
const methodDescriptor_UserService_GetTags = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetTags',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetTagsRequest,
  proto.ai_poi.user.v1.GetTagsResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetTagsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetTagsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetTagsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetTagsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetTagsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getTags =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTags',
      request,
      metadata || {},
      methodDescriptor_UserService_GetTags,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetTagsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetTagsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getTags =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTags',
      request,
      metadata || {},
      methodDescriptor_UserService_GetTags);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.GetTagRequest,
 *   !proto.ai_poi.user.v1.GetTagResponse>}
 */
const methodDescriptor_UserService_GetTag = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/GetTag',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.GetTagRequest,
  proto.ai_poi.user.v1.GetTagResponse,
  /**
   * @param {!proto.ai_poi.user.v1.GetTagRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.GetTagResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.GetTagRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.GetTagResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.GetTagResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.getTag =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTag',
      request,
      metadata || {},
      methodDescriptor_UserService_GetTag,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.GetTagRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.GetTagResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.getTag =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTag',
      request,
      metadata || {},
      methodDescriptor_UserService_GetTag);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.CreateTagRequest,
 *   !proto.ai_poi.user.v1.CreateTagResponse>}
 */
const methodDescriptor_UserService_CreateTag = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/CreateTag',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.CreateTagRequest,
  proto.ai_poi.user.v1.CreateTagResponse,
  /**
   * @param {!proto.ai_poi.user.v1.CreateTagRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.CreateTagResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.CreateTagRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.CreateTagResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.CreateTagResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.createTag =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateTag',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateTag,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.CreateTagRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.CreateTagResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.createTag =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateTag',
      request,
      metadata || {},
      methodDescriptor_UserService_CreateTag);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.UpdateTagRequest,
 *   !proto.ai_poi.user.v1.UpdateTagResponse>}
 */
const methodDescriptor_UserService_UpdateTag = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/UpdateTag',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.UpdateTagRequest,
  proto.ai_poi.user.v1.UpdateTagResponse,
  /**
   * @param {!proto.ai_poi.user.v1.UpdateTagRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.UpdateTagResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.UpdateTagRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.UpdateTagResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.UpdateTagResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.updateTag =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateTag',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateTag,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.UpdateTagRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.UpdateTagResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.updateTag =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateTag',
      request,
      metadata || {},
      methodDescriptor_UserService_UpdateTag);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.user.v1.DeleteTagRequest,
 *   !proto.ai_poi.user.v1.DeleteTagResponse>}
 */
const methodDescriptor_UserService_DeleteTag = new grpc.web.MethodDescriptor(
  '/ai_poi.user.v1.UserService/DeleteTag',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.user.v1.DeleteTagRequest,
  proto.ai_poi.user.v1.DeleteTagResponse,
  /**
   * @param {!proto.ai_poi.user.v1.DeleteTagRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.user.v1.DeleteTagResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.user.v1.DeleteTagRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.user.v1.DeleteTagResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.user.v1.DeleteTagResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.user.v1.UserServiceClient.prototype.deleteTag =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteTag',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteTag,
      callback);
};


/**
 * @param {!proto.ai_poi.user.v1.DeleteTagRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.user.v1.DeleteTagResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.user.v1.UserServicePromiseClient.prototype.deleteTag =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteTag',
      request,
      metadata || {},
      methodDescriptor_UserService_DeleteTag);
};


module.exports = proto.ai_poi.user.v1;

