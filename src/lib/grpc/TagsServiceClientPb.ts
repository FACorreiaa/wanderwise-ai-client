/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.tags.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: tags.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as tags_pb from './tags_pb'; // proto import: "tags.proto"


export class TagsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetTags = new grpcWeb.MethodDescriptor(
    '/ai_poi.tags.v1.TagsService/GetTags',
    grpcWeb.MethodType.UNARY,
    tags_pb.GetTagsRequest,
    tags_pb.GetTagsResponse,
    (request: tags_pb.GetTagsRequest) => {
      return request.serializeBinary();
    },
    tags_pb.GetTagsResponse.deserializeBinary
  );

  getTags(
    request: tags_pb.GetTagsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tags_pb.GetTagsResponse>;

  getTags(
    request: tags_pb.GetTagsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tags_pb.GetTagsResponse) => void): grpcWeb.ClientReadableStream<tags_pb.GetTagsResponse>;

  getTags(
    request: tags_pb.GetTagsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tags_pb.GetTagsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.tags.v1.TagsService/GetTags',
        request,
        metadata || {},
        this.methodDescriptorGetTags,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.tags.v1.TagsService/GetTags',
    request,
    metadata || {},
    this.methodDescriptorGetTags);
  }

  methodDescriptorGetTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.tags.v1.TagsService/GetTag',
    grpcWeb.MethodType.UNARY,
    tags_pb.GetTagRequest,
    tags_pb.GetTagResponse,
    (request: tags_pb.GetTagRequest) => {
      return request.serializeBinary();
    },
    tags_pb.GetTagResponse.deserializeBinary
  );

  getTag(
    request: tags_pb.GetTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tags_pb.GetTagResponse>;

  getTag(
    request: tags_pb.GetTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tags_pb.GetTagResponse) => void): grpcWeb.ClientReadableStream<tags_pb.GetTagResponse>;

  getTag(
    request: tags_pb.GetTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tags_pb.GetTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.tags.v1.TagsService/GetTag',
        request,
        metadata || {},
        this.methodDescriptorGetTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.tags.v1.TagsService/GetTag',
    request,
    metadata || {},
    this.methodDescriptorGetTag);
  }

  methodDescriptorCreateTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.tags.v1.TagsService/CreateTag',
    grpcWeb.MethodType.UNARY,
    tags_pb.CreateTagRequest,
    tags_pb.CreateTagResponse,
    (request: tags_pb.CreateTagRequest) => {
      return request.serializeBinary();
    },
    tags_pb.CreateTagResponse.deserializeBinary
  );

  createTag(
    request: tags_pb.CreateTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tags_pb.CreateTagResponse>;

  createTag(
    request: tags_pb.CreateTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tags_pb.CreateTagResponse) => void): grpcWeb.ClientReadableStream<tags_pb.CreateTagResponse>;

  createTag(
    request: tags_pb.CreateTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tags_pb.CreateTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.tags.v1.TagsService/CreateTag',
        request,
        metadata || {},
        this.methodDescriptorCreateTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.tags.v1.TagsService/CreateTag',
    request,
    metadata || {},
    this.methodDescriptorCreateTag);
  }

  methodDescriptorUpdateTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.tags.v1.TagsService/UpdateTag',
    grpcWeb.MethodType.UNARY,
    tags_pb.UpdateTagRequest,
    tags_pb.UpdateTagResponse,
    (request: tags_pb.UpdateTagRequest) => {
      return request.serializeBinary();
    },
    tags_pb.UpdateTagResponse.deserializeBinary
  );

  updateTag(
    request: tags_pb.UpdateTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tags_pb.UpdateTagResponse>;

  updateTag(
    request: tags_pb.UpdateTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tags_pb.UpdateTagResponse) => void): grpcWeb.ClientReadableStream<tags_pb.UpdateTagResponse>;

  updateTag(
    request: tags_pb.UpdateTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tags_pb.UpdateTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.tags.v1.TagsService/UpdateTag',
        request,
        metadata || {},
        this.methodDescriptorUpdateTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.tags.v1.TagsService/UpdateTag',
    request,
    metadata || {},
    this.methodDescriptorUpdateTag);
  }

  methodDescriptorDeleteTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.tags.v1.TagsService/DeleteTag',
    grpcWeb.MethodType.UNARY,
    tags_pb.DeleteTagRequest,
    tags_pb.DeleteTagResponse,
    (request: tags_pb.DeleteTagRequest) => {
      return request.serializeBinary();
    },
    tags_pb.DeleteTagResponse.deserializeBinary
  );

  deleteTag(
    request: tags_pb.DeleteTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tags_pb.DeleteTagResponse>;

  deleteTag(
    request: tags_pb.DeleteTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tags_pb.DeleteTagResponse) => void): grpcWeb.ClientReadableStream<tags_pb.DeleteTagResponse>;

  deleteTag(
    request: tags_pb.DeleteTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tags_pb.DeleteTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.tags.v1.TagsService/DeleteTag',
        request,
        metadata || {},
        this.methodDescriptorDeleteTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.tags.v1.TagsService/DeleteTag',
    request,
    metadata || {},
    this.methodDescriptorDeleteTag);
  }

}

