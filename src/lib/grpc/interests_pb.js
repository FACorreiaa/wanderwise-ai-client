// source: interests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.ai_poi.interests.v1.BaseRequest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.BaseResponse', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.CreateInterestParams', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.CreateInterestRequest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.CreateInterestResponse', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.GetAllInterestsRequest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.GetAllInterestsResponse', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.Interest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.RemoveInterestRequest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.RemoveInterestResponse', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.UpdateInterestParams', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.UpdateInterestRequest', null, global);
goog.exportSymbol('proto.ai_poi.interests.v1.UpdateInterestResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.Interest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.Interest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.Interest.displayName = 'proto.ai_poi.interests.v1.Interest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.CreateInterestParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.CreateInterestParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.CreateInterestParams.displayName = 'proto.ai_poi.interests.v1.CreateInterestParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.UpdateInterestParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.UpdateInterestParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.UpdateInterestParams.displayName = 'proto.ai_poi.interests.v1.UpdateInterestParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.GetAllInterestsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.GetAllInterestsRequest.displayName = 'proto.ai_poi.interests.v1.GetAllInterestsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.interests.v1.GetAllInterestsResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.interests.v1.GetAllInterestsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.GetAllInterestsResponse.displayName = 'proto.ai_poi.interests.v1.GetAllInterestsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.CreateInterestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.CreateInterestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.CreateInterestRequest.displayName = 'proto.ai_poi.interests.v1.CreateInterestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.CreateInterestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.CreateInterestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.CreateInterestResponse.displayName = 'proto.ai_poi.interests.v1.CreateInterestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.UpdateInterestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.UpdateInterestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.UpdateInterestRequest.displayName = 'proto.ai_poi.interests.v1.UpdateInterestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.UpdateInterestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.UpdateInterestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.UpdateInterestResponse.displayName = 'proto.ai_poi.interests.v1.UpdateInterestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.RemoveInterestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.RemoveInterestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.RemoveInterestRequest.displayName = 'proto.ai_poi.interests.v1.RemoveInterestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.RemoveInterestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.RemoveInterestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.RemoveInterestResponse.displayName = 'proto.ai_poi.interests.v1.RemoveInterestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.BaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.BaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.BaseRequest.displayName = 'proto.ai_poi.interests.v1.BaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.interests.v1.BaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.interests.v1.BaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.interests.v1.BaseResponse.displayName = 'proto.ai_poi.interests.v1.BaseResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.Interest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.Interest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.Interest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.Interest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
active: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
source: jspb.Message.getFieldWithDefault(msg, 5, ""),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.Interest}
 */
proto.ai_poi.interests.v1.Interest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.Interest;
  return proto.ai_poi.interests.v1.Interest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.Interest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.Interest}
 */
proto.ai_poi.interests.v1.Interest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.Interest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.Interest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.Interest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.Interest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.Interest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.Interest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.interests.v1.Interest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.Interest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string source = 5;
 * @return {string}
 */
proto.ai_poi.interests.v1.Interest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.interests.v1.Interest.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
*/
proto.ai_poi.interests.v1.Interest.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.Interest.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.interests.v1.Interest.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
*/
proto.ai_poi.interests.v1.Interest.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.Interest} returns this
 */
proto.ai_poi.interests.v1.Interest.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.Interest.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.CreateInterestParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.CreateInterestParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestParams.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
active: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.CreateInterestParams}
 */
proto.ai_poi.interests.v1.CreateInterestParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.CreateInterestParams;
  return proto.ai_poi.interests.v1.CreateInterestParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.CreateInterestParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.CreateInterestParams}
 */
proto.ai_poi.interests.v1.CreateInterestParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.CreateInterestParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.CreateInterestParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestParams} returns this
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestParams} returns this
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool active = 3;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestParams} returns this
 */
proto.ai_poi.interests.v1.CreateInterestParams.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.UpdateInterestParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.UpdateInterestParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestParams.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
active: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestParams}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.UpdateInterestParams;
  return proto.ai_poi.interests.v1.UpdateInterestParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestParams}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.UpdateInterestParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestParams} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestParams} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool active = 3;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestParams} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestParams.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.GetAllInterestsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
request: (f = msg.getRequest()) && proto.ai_poi.interests.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsRequest}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.GetAllInterestsRequest;
  return proto.ai_poi.interests.v1.GetAllInterestsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsRequest}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.GetAllInterestsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsRequest} returns this
*/
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsRequest} returns this
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.GetAllInterestsRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.GetAllInterestsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
interestsList: jspb.Message.toObjectList(msg.getInterestsList(),
    proto.ai_poi.interests.v1.Interest.toObject, includeInstance),
response: (f = msg.getResponse()) && proto.ai_poi.interests.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.GetAllInterestsResponse;
  return proto.ai_poi.interests.v1.GetAllInterestsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.interests.v1.Interest;
      reader.readMessage(value,proto.ai_poi.interests.v1.Interest.deserializeBinaryFromReader);
      msg.addInterests(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.GetAllInterestsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.GetAllInterestsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ai_poi.interests.v1.Interest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Interest interests = 1;
 * @return {!Array<!proto.ai_poi.interests.v1.Interest>}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.getInterestsList = function() {
  return /** @type{!Array<!proto.ai_poi.interests.v1.Interest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.interests.v1.Interest, 1));
};


/**
 * @param {!Array<!proto.ai_poi.interests.v1.Interest>} value
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse} returns this
*/
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.setInterestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ai_poi.interests.v1.Interest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.interests.v1.Interest}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.addInterests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ai_poi.interests.v1.Interest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse} returns this
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.clearInterestsList = function() {
  return this.setInterestsList([]);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse} returns this
*/
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.GetAllInterestsResponse} returns this
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.GetAllInterestsResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.CreateInterestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.CreateInterestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
interest: (f = msg.getInterest()) && proto.ai_poi.interests.v1.CreateInterestParams.toObject(includeInstance, f),
request: (f = msg.getRequest()) && proto.ai_poi.interests.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.CreateInterestRequest;
  return proto.ai_poi.interests.v1.CreateInterestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.CreateInterestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new proto.ai_poi.interests.v1.CreateInterestParams;
      reader.readMessage(value,proto.ai_poi.interests.v1.CreateInterestParams.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.CreateInterestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.CreateInterestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai_poi.interests.v1.CreateInterestParams.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CreateInterestParams interest = 2;
 * @return {?proto.ai_poi.interests.v1.CreateInterestParams}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.getInterest = function() {
  return /** @type{?proto.ai_poi.interests.v1.CreateInterestParams} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.CreateInterestParams, 2));
};


/**
 * @param {?proto.ai_poi.interests.v1.CreateInterestParams|undefined} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest} returns this
*/
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest} returns this
*/
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.CreateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.CreateInterestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.CreateInterestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
interest: (f = msg.getInterest()) && proto.ai_poi.interests.v1.Interest.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.ai_poi.interests.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.CreateInterestResponse;
  return proto.ai_poi.interests.v1.CreateInterestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.CreateInterestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.ai_poi.interests.v1.Interest;
      reader.readMessage(value,proto.ai_poi.interests.v1.Interest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.CreateInterestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.CreateInterestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.CreateInterestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai_poi.interests.v1.Interest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Interest interest = 3;
 * @return {?proto.ai_poi.interests.v1.Interest}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.getInterest = function() {
  return /** @type{?proto.ai_poi.interests.v1.Interest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.Interest, 3));
};


/**
 * @param {?proto.ai_poi.interests.v1.Interest|undefined} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
*/
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
*/
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.CreateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.CreateInterestResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.UpdateInterestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.UpdateInterestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
interestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
interest: (f = msg.getInterest()) && proto.ai_poi.interests.v1.UpdateInterestParams.toObject(includeInstance, f),
request: (f = msg.getRequest()) && proto.ai_poi.interests.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.UpdateInterestRequest;
  return proto.ai_poi.interests.v1.UpdateInterestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterestId(value);
      break;
    case 3:
      var value = new proto.ai_poi.interests.v1.UpdateInterestParams;
      reader.readMessage(value,proto.ai_poi.interests.v1.UpdateInterestParams.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.UpdateInterestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai_poi.interests.v1.UpdateInterestParams.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string interest_id = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.getInterestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.setInterestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional UpdateInterestParams interest = 3;
 * @return {?proto.ai_poi.interests.v1.UpdateInterestParams}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.getInterest = function() {
  return /** @type{?proto.ai_poi.interests.v1.UpdateInterestParams} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.UpdateInterestParams, 3));
};


/**
 * @param {?proto.ai_poi.interests.v1.UpdateInterestParams|undefined} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
*/
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
*/
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestRequest} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.UpdateInterestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.UpdateInterestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
interest: (f = msg.getInterest()) && proto.ai_poi.interests.v1.Interest.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.ai_poi.interests.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.UpdateInterestResponse;
  return proto.ai_poi.interests.v1.UpdateInterestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.ai_poi.interests.v1.Interest;
      reader.readMessage(value,proto.ai_poi.interests.v1.Interest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.UpdateInterestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.UpdateInterestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai_poi.interests.v1.Interest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Interest interest = 3;
 * @return {?proto.ai_poi.interests.v1.Interest}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.getInterest = function() {
  return /** @type{?proto.ai_poi.interests.v1.Interest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.Interest, 3));
};


/**
 * @param {?proto.ai_poi.interests.v1.Interest|undefined} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
*/
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
*/
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.UpdateInterestResponse} returns this
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.UpdateInterestResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.RemoveInterestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.RemoveInterestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
interestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
request: (f = msg.getRequest()) && proto.ai_poi.interests.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.RemoveInterestRequest;
  return proto.ai_poi.interests.v1.RemoveInterestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.RemoveInterestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterestId(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.RemoveInterestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.RemoveInterestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string interest_id = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.getInterestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.setInterestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest} returns this
*/
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestRequest} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.RemoveInterestRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.RemoveInterestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.RemoveInterestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
response: (f = msg.getResponse()) && proto.ai_poi.interests.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.RemoveInterestResponse;
  return proto.ai_poi.interests.v1.RemoveInterestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.RemoveInterestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 100:
      var value = new proto.ai_poi.interests.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.RemoveInterestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.RemoveInterestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.interests.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.interests.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.interests.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse} returns this
*/
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.interests.v1.RemoveInterestResponse} returns this
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.interests.v1.RemoveInterestResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.BaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.BaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.BaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
downstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.BaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.BaseRequest;
  return proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.BaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.BaseRequest}
 */
proto.ai_poi.interests.v1.BaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.BaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.BaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDownstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
};


/**
 * optional string downstream = 998;
 * @return {string}
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.getDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.BaseRequest} returns this
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.BaseRequest} returns this
 */
proto.ai_poi.interests.v1.BaseRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.interests.v1.BaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.interests.v1.BaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.BaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
upstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, ""),
status: jspb.Message.getFieldWithDefault(msg, 1000, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.BaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.interests.v1.BaseResponse;
  return proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.interests.v1.BaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.interests.v1.BaseResponse}
 */
proto.ai_poi.interests.v1.BaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.interests.v1.BaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.interests.v1.BaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
};


/**
 * optional string upstream = 998;
 * @return {string}
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.getUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.BaseResponse} returns this
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.setUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.BaseResponse} returns this
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};


/**
 * optional string status = 1000;
 * @return {string}
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.interests.v1.BaseResponse} returns this
 */
proto.ai_poi.interests.v1.BaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


goog.object.extend(exports, proto.ai_poi.interests.v1);
