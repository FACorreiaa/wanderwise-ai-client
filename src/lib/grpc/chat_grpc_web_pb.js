/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.chat.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: chat.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.ai_poi = {};
proto.ai_poi.chat = {};
proto.ai_poi.chat.v1 = require('./chat_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.chat.v1.ChatServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.StartChatRequest,
 *   !proto.ai_poi.chat.v1.ChatEvent>}
 */
const methodDescriptor_ChatService_StartChatStream = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/StartChatStream',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.ai_poi.chat.v1.StartChatRequest,
  proto.ai_poi.chat.v1.ChatEvent,
  /**
   * @param {!proto.ai_poi.chat.v1.StartChatRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.ChatEvent.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.StartChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.startChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/StartChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_StartChatStream);
};


/**
 * @param {!proto.ai_poi.chat.v1.StartChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.startChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/StartChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_StartChatStream);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.ContinueChatRequest,
 *   !proto.ai_poi.chat.v1.ChatEvent>}
 */
const methodDescriptor_ChatService_ContinueChatStream = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/ContinueChatStream',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.ai_poi.chat.v1.ContinueChatRequest,
  proto.ai_poi.chat.v1.ChatEvent,
  /**
   * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.ChatEvent.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.continueChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/ContinueChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_ContinueChatStream);
};


/**
 * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.continueChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/ContinueChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_ContinueChatStream);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.FreeChatRequest,
 *   !proto.ai_poi.chat.v1.ChatEvent>}
 */
const methodDescriptor_ChatService_FreeChatStream = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/FreeChatStream',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.ai_poi.chat.v1.FreeChatRequest,
  proto.ai_poi.chat.v1.ChatEvent,
  /**
   * @param {!proto.ai_poi.chat.v1.FreeChatRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.ChatEvent.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.FreeChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.freeChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/FreeChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_FreeChatStream);
};


/**
 * @param {!proto.ai_poi.chat.v1.FreeChatRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.ChatEvent>}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.freeChatStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/FreeChatStream',
      request,
      metadata || {},
      methodDescriptor_ChatService_FreeChatStream);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.GetChatSessionsRequest,
 *   !proto.ai_poi.chat.v1.GetChatSessionsResponse>}
 */
const methodDescriptor_ChatService_GetChatSessions = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/GetChatSessions',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.chat.v1.GetChatSessionsRequest,
  proto.ai_poi.chat.v1.GetChatSessionsResponse,
  /**
   * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.GetChatSessionsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.chat.v1.GetChatSessionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.GetChatSessionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.getChatSessions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetChatSessions',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetChatSessions,
      callback);
};


/**
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.chat.v1.GetChatSessionsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.getChatSessions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetChatSessions',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetChatSessions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.SaveItineraryRequest,
 *   !proto.ai_poi.chat.v1.SaveItineraryResponse>}
 */
const methodDescriptor_ChatService_SaveItinerary = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/SaveItinerary',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.chat.v1.SaveItineraryRequest,
  proto.ai_poi.chat.v1.SaveItineraryResponse,
  /**
   * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.SaveItineraryResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.chat.v1.SaveItineraryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.SaveItineraryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.saveItinerary =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/SaveItinerary',
      request,
      metadata || {},
      methodDescriptor_ChatService_SaveItinerary,
      callback);
};


/**
 * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.chat.v1.SaveItineraryResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.saveItinerary =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/SaveItinerary',
      request,
      metadata || {},
      methodDescriptor_ChatService_SaveItinerary);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.GetSavedItinerariesRequest,
 *   !proto.ai_poi.chat.v1.GetSavedItinerariesResponse>}
 */
const methodDescriptor_ChatService_GetSavedItineraries = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.chat.v1.GetSavedItinerariesRequest,
  proto.ai_poi.chat.v1.GetSavedItinerariesResponse,
  /**
   * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.GetSavedItinerariesResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.chat.v1.GetSavedItinerariesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.GetSavedItinerariesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.getSavedItineraries =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetSavedItineraries,
      callback);
};


/**
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.chat.v1.GetSavedItinerariesResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.getSavedItineraries =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetSavedItineraries);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.RemoveItineraryRequest,
 *   !proto.ai_poi.chat.v1.RemoveItineraryResponse>}
 */
const methodDescriptor_ChatService_RemoveItinerary = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/RemoveItinerary',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.chat.v1.RemoveItineraryRequest,
  proto.ai_poi.chat.v1.RemoveItineraryResponse,
  /**
   * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.RemoveItineraryResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.chat.v1.RemoveItineraryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.RemoveItineraryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.removeItinerary =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/RemoveItinerary',
      request,
      metadata || {},
      methodDescriptor_ChatService_RemoveItinerary,
      callback);
};


/**
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.chat.v1.RemoveItineraryResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.removeItinerary =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/RemoveItinerary',
      request,
      metadata || {},
      methodDescriptor_ChatService_RemoveItinerary);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.chat.v1.GetPOIDetailsRequest,
 *   !proto.ai_poi.chat.v1.GetPOIDetailsResponse>}
 */
const methodDescriptor_ChatService_GetPOIDetails = new grpc.web.MethodDescriptor(
  '/ai_poi.chat.v1.ChatService/GetPOIDetails',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.chat.v1.GetPOIDetailsRequest,
  proto.ai_poi.chat.v1.GetPOIDetailsResponse,
  /**
   * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.chat.v1.GetPOIDetailsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.chat.v1.GetPOIDetailsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.chat.v1.GetPOIDetailsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.chat.v1.ChatServiceClient.prototype.getPOIDetails =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetPOIDetails',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetPOIDetails,
      callback);
};


/**
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.chat.v1.GetPOIDetailsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.chat.v1.ChatServicePromiseClient.prototype.getPOIDetails =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetPOIDetails',
      request,
      metadata || {},
      methodDescriptor_ChatService_GetPOIDetails);
};


module.exports = proto.ai_poi.chat.v1;

