/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.auth.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: auth.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.ai_poi = {};
proto.ai_poi.auth = {};
proto.ai_poi.auth.v1 = require('./auth_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.auth.v1.AuthServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.RegisterRequest,
 *   !proto.ai_poi.auth.v1.RegisterResponse>}
 */
const methodDescriptor_AuthService_Register = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/Register',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.RegisterRequest,
  proto.ai_poi.auth.v1.RegisterResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.RegisterRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.RegisterResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.RegisterResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.RegisterResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.register =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Register',
      request,
      metadata || {},
      methodDescriptor_AuthService_Register,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.RegisterResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.register =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Register',
      request,
      metadata || {},
      methodDescriptor_AuthService_Register);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.LoginRequest,
 *   !proto.ai_poi.auth.v1.LoginResponse>}
 */
const methodDescriptor_AuthService_Login = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/Login',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.LoginRequest,
  proto.ai_poi.auth.v1.LoginResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.LoginRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.LoginResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.LoginRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.LoginResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.LoginResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.login =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Login',
      request,
      metadata || {},
      methodDescriptor_AuthService_Login,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.LoginRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.LoginResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.login =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Login',
      request,
      metadata || {},
      methodDescriptor_AuthService_Login);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.RefreshTokenRequest,
 *   !proto.ai_poi.auth.v1.TokenResponse>}
 */
const methodDescriptor_AuthService_RefreshToken = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/RefreshToken',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.RefreshTokenRequest,
  proto.ai_poi.auth.v1.TokenResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.RefreshTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.TokenResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.RefreshTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.TokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.TokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.refreshToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/RefreshToken',
      request,
      metadata || {},
      methodDescriptor_AuthService_RefreshToken,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.RefreshTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.TokenResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.refreshToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/RefreshToken',
      request,
      metadata || {},
      methodDescriptor_AuthService_RefreshToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.LogoutRequest,
 *   !proto.ai_poi.auth.v1.LogoutResponse>}
 */
const methodDescriptor_AuthService_Logout = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/Logout',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.LogoutRequest,
  proto.ai_poi.auth.v1.LogoutResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.LogoutRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.LogoutResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.LogoutRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.LogoutResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.LogoutResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.logout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Logout',
      request,
      metadata || {},
      methodDescriptor_AuthService_Logout,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.LogoutRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.LogoutResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.logout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/Logout',
      request,
      metadata || {},
      methodDescriptor_AuthService_Logout);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.ValidateSessionRequest,
 *   !proto.ai_poi.auth.v1.ValidateSessionResponse>}
 */
const methodDescriptor_AuthService_ValidateSession = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/ValidateSession',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.ValidateSessionRequest,
  proto.ai_poi.auth.v1.ValidateSessionResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.ValidateSessionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.ValidateSessionResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.ValidateSessionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.ValidateSessionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.ValidateSessionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.validateSession =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/ValidateSession',
      request,
      metadata || {},
      methodDescriptor_AuthService_ValidateSession,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.ValidateSessionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.ValidateSessionResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.validateSession =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/ValidateSession',
      request,
      metadata || {},
      methodDescriptor_AuthService_ValidateSession);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.UpdatePasswordRequest,
 *   !proto.ai_poi.auth.v1.UpdatePasswordResponse>}
 */
const methodDescriptor_AuthService_UpdatePassword = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/UpdatePassword',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.UpdatePasswordRequest,
  proto.ai_poi.auth.v1.UpdatePasswordResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.UpdatePasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.UpdatePasswordResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.UpdatePasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.UpdatePasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.UpdatePasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.updatePassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/UpdatePassword',
      request,
      metadata || {},
      methodDescriptor_AuthService_UpdatePassword,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.UpdatePasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.UpdatePasswordResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.updatePassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/UpdatePassword',
      request,
      metadata || {},
      methodDescriptor_AuthService_UpdatePassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.GoogleLoginRequest,
 *   !proto.ai_poi.auth.v1.GoogleLoginResponse>}
 */
const methodDescriptor_AuthService_GoogleLogin = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/GoogleLogin',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.GoogleLoginRequest,
  proto.ai_poi.auth.v1.GoogleLoginResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.GoogleLoginRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.GoogleLoginResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.GoogleLoginRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.GoogleLoginResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.GoogleLoginResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.googleLogin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/GoogleLogin',
      request,
      metadata || {},
      methodDescriptor_AuthService_GoogleLogin,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.GoogleLoginRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.GoogleLoginResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.googleLogin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/GoogleLogin',
      request,
      metadata || {},
      methodDescriptor_AuthService_GoogleLogin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.auth.v1.GoogleCallbackRequest,
 *   !proto.ai_poi.auth.v1.LoginResponse>}
 */
const methodDescriptor_AuthService_GoogleCallback = new grpc.web.MethodDescriptor(
  '/ai_poi.auth.v1.AuthService/GoogleCallback',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.auth.v1.GoogleCallbackRequest,
  proto.ai_poi.auth.v1.LoginResponse,
  /**
   * @param {!proto.ai_poi.auth.v1.GoogleCallbackRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.auth.v1.LoginResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.auth.v1.GoogleCallbackRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.auth.v1.LoginResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.auth.v1.LoginResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.auth.v1.AuthServiceClient.prototype.googleCallback =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/GoogleCallback',
      request,
      metadata || {},
      methodDescriptor_AuthService_GoogleCallback,
      callback);
};


/**
 * @param {!proto.ai_poi.auth.v1.GoogleCallbackRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.auth.v1.LoginResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.auth.v1.AuthServicePromiseClient.prototype.googleCallback =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.auth.v1.AuthService/GoogleCallback',
      request,
      metadata || {},
      methodDescriptor_AuthService_GoogleCallback);
};


module.exports = proto.ai_poi.auth.v1;

