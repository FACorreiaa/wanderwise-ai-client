// source: city.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.ai_poi.city.v1.BaseRequest', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.BaseResponse', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.CategoryCount', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.City', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.CityMetadata', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.CitySearchResult', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.CityStatistics', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.DataPoint', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCitiesRequest', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCitiesResponse', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCityRequest', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCityResponse', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCityStatisticsRequest', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.GetCityStatisticsResponse', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.SearchCitiesRequest', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.SearchCitiesResponse', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.SearchMetadata', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.TrendData', null, global);
goog.exportSymbol('proto.ai_poi.city.v1.WeatherInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.City = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.City.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.City, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.City.displayName = 'proto.ai_poi.city.v1.City';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.CityMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.CityMetadata.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.CityMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.CityMetadata.displayName = 'proto.ai_poi.city.v1.CityMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.CityStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.CityStatistics.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.CityStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.CityStatistics.displayName = 'proto.ai_poi.city.v1.CityStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.CategoryCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.CategoryCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.CategoryCount.displayName = 'proto.ai_poi.city.v1.CategoryCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.WeatherInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.WeatherInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.WeatherInfo.displayName = 'proto.ai_poi.city.v1.WeatherInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCitiesRequest.displayName = 'proto.ai_poi.city.v1.GetCitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.GetCitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCitiesResponse.displayName = 'proto.ai_poi.city.v1.GetCitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCityRequest.displayName = 'proto.ai_poi.city.v1.GetCityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCityResponse.displayName = 'proto.ai_poi.city.v1.GetCityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.SearchCitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.SearchCitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.SearchCitiesRequest.displayName = 'proto.ai_poi.city.v1.SearchCitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.SearchCitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.SearchCitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.SearchCitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.SearchCitiesResponse.displayName = 'proto.ai_poi.city.v1.SearchCitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.CitySearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.CitySearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.CitySearchResult.displayName = 'proto.ai_poi.city.v1.CitySearchResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.SearchMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.SearchMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.SearchMetadata.displayName = 'proto.ai_poi.city.v1.SearchMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCityStatisticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCityStatisticsRequest.displayName = 'proto.ai_poi.city.v1.GetCityStatisticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.GetCityStatisticsResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.GetCityStatisticsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.GetCityStatisticsResponse.displayName = 'proto.ai_poi.city.v1.GetCityStatisticsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.TrendData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.city.v1.TrendData.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.city.v1.TrendData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.TrendData.displayName = 'proto.ai_poi.city.v1.TrendData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.DataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.city.v1.DataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.DataPoint.displayName = 'proto.ai_poi.city.v1.DataPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.BaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.city.v1.BaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.BaseRequest.displayName = 'proto.ai_poi.city.v1.BaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.city.v1.BaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.city.v1.BaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.city.v1.BaseResponse.displayName = 'proto.ai_poi.city.v1.BaseResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.City.repeatedFields_ = [11,13,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.City.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.City.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.City} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.City.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
country: jspb.Message.getFieldWithDefault(msg, 3, ""),
countryCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
stateProvince: jspb.Message.getFieldWithDefault(msg, 5, ""),
latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
timezone: jspb.Message.getFieldWithDefault(msg, 8, ""),
population: jspb.Message.getFieldWithDefault(msg, 9, 0),
currency: jspb.Message.getFieldWithDefault(msg, 10, ""),
languagesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
description: jspb.Message.getFieldWithDefault(msg, 12, ""),
highlightsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
climate: jspb.Message.getFieldWithDefault(msg, 14, ""),
bestTimeToVisit: jspb.Message.getFieldWithDefault(msg, 15, ""),
topAttractionsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
metadata: (f = msg.getMetadata()) && proto.ai_poi.city.v1.CityMetadata.toObject(includeInstance, f),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.City}
 */
proto.ai_poi.city.v1.City.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.City;
  return proto.ai_poi.city.v1.City.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.City} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.City}
 */
proto.ai_poi.city.v1.City.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateProvince(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPopulation(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguages(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addHighlights(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setClimate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBestTimeToVisit(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addTopAttractions(value);
      break;
    case 17:
      var value = new proto.ai_poi.city.v1.CityMetadata;
      reader.readMessage(value,proto.ai_poi.city.v1.CityMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 18:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.City.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.City.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.City} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.City.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStateProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPopulation();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getHighlightsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getClimate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBestTimeToVisit();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTopAttractionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.ai_poi.city.v1.CityMetadata.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country_code = 4;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state_province = 5;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getStateProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setStateProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double latitude = 6;
 * @return {number}
 */
proto.ai_poi.city.v1.City.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double longitude = 7;
 * @return {number}
 */
proto.ai_poi.city.v1.City.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string timezone = 8;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 population = 9;
 * @return {number}
 */
proto.ai_poi.city.v1.City.prototype.getPopulation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setPopulation = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string currency = 10;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string languages = 11;
 * @return {!Array<string>}
 */
proto.ai_poi.city.v1.City.prototype.getLanguagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setLanguagesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.addLanguages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string highlights = 13;
 * @return {!Array<string>}
 */
proto.ai_poi.city.v1.City.prototype.getHighlightsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setHighlightsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.addHighlights = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearHighlightsList = function() {
  return this.setHighlightsList([]);
};


/**
 * optional string climate = 14;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getClimate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setClimate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string best_time_to_visit = 15;
 * @return {string}
 */
proto.ai_poi.city.v1.City.prototype.getBestTimeToVisit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setBestTimeToVisit = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated string top_attractions = 16;
 * @return {!Array<string>}
 */
proto.ai_poi.city.v1.City.prototype.getTopAttractionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.setTopAttractionsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.addTopAttractions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearTopAttractionsList = function() {
  return this.setTopAttractionsList([]);
};


/**
 * optional CityMetadata metadata = 17;
 * @return {?proto.ai_poi.city.v1.CityMetadata}
 */
proto.ai_poi.city.v1.City.prototype.getMetadata = function() {
  return /** @type{?proto.ai_poi.city.v1.CityMetadata} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.CityMetadata, 17));
};


/**
 * @param {?proto.ai_poi.city.v1.CityMetadata|undefined} value
 * @return {!proto.ai_poi.city.v1.City} returns this
*/
proto.ai_poi.city.v1.City.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.City.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.city.v1.City.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.city.v1.City} returns this
*/
proto.ai_poi.city.v1.City.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.City.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.city.v1.City.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.city.v1.City} returns this
*/
proto.ai_poi.city.v1.City.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.City} returns this
 */
proto.ai_poi.city.v1.City.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.City.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.CityMetadata.repeatedFields_ = [2,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.CityMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.CityMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CityMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
imageUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
imageGalleryList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
officialWebsite: jspb.Message.getFieldWithDefault(msg, 3, ""),
tourismWebsite: jspb.Message.getFieldWithDefault(msg, 4, ""),
isCapital: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
isPopularDestination: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
safetyRating: jspb.Message.getFieldWithDefault(msg, 7, ""),
costOfLivingIndex: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
walkabilityScore: jspb.Message.getFieldWithDefault(msg, 9, ""),
transportOptionsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.CityMetadata}
 */
proto.ai_poi.city.v1.CityMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.CityMetadata;
  return proto.ai_poi.city.v1.CityMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.CityMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.CityMetadata}
 */
proto.ai_poi.city.v1.CityMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageGallery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfficialWebsite(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTourismWebsite(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCapital(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPopularDestination(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSafetyRating(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCostOfLivingIndex(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalkabilityScore(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransportOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.CityMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.CityMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CityMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImageGalleryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOfficialWebsite();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTourismWebsite();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsCapital();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsPopularDestination();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSafetyRating();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCostOfLivingIndex();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getWalkabilityScore();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTransportOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional string image_url = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string image_gallery = 2;
 * @return {!Array<string>}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getImageGalleryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setImageGalleryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.addImageGallery = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.clearImageGalleryList = function() {
  return this.setImageGalleryList([]);
};


/**
 * optional string official_website = 3;
 * @return {string}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getOfficialWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setOfficialWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tourism_website = 4;
 * @return {string}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getTourismWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setTourismWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_capital = 5;
 * @return {boolean}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getIsCapital = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setIsCapital = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_popular_destination = 6;
 * @return {boolean}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getIsPopularDestination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setIsPopularDestination = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string safety_rating = 7;
 * @return {string}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getSafetyRating = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setSafetyRating = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double cost_of_living_index = 8;
 * @return {number}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getCostOfLivingIndex = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setCostOfLivingIndex = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string walkability_score = 9;
 * @return {string}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getWalkabilityScore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setWalkabilityScore = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string transport_options = 10;
 * @return {!Array<string>}
 */
proto.ai_poi.city.v1.CityMetadata.prototype.getTransportOptionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.setTransportOptionsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.addTransportOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.CityMetadata} returns this
 */
proto.ai_poi.city.v1.CityMetadata.prototype.clearTransportOptionsList = function() {
  return this.setTransportOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.CityStatistics.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.CityStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.CityStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CityStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
cityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
totalPois: jspb.Message.getFieldWithDefault(msg, 2, 0),
totalRestaurants: jspb.Message.getFieldWithDefault(msg, 3, 0),
totalHotels: jspb.Message.getFieldWithDefault(msg, 4, 0),
totalAttractions: jspb.Message.getFieldWithDefault(msg, 5, 0),
userVisits: jspb.Message.getFieldWithDefault(msg, 6, 0),
savedItineraries: jspb.Message.getFieldWithDefault(msg, 7, 0),
averageRating: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
poiByCategoryList: jspb.Message.toObjectList(msg.getPoiByCategoryList(),
    proto.ai_poi.city.v1.CategoryCount.toObject, includeInstance),
lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.CityStatistics}
 */
proto.ai_poi.city.v1.CityStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.CityStatistics;
  return proto.ai_poi.city.v1.CityStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.CityStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.CityStatistics}
 */
proto.ai_poi.city.v1.CityStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPois(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRestaurants(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalHotels(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalAttractions(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserVisits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSavedItineraries(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageRating(value);
      break;
    case 9:
      var value = new proto.ai_poi.city.v1.CategoryCount;
      reader.readMessage(value,proto.ai_poi.city.v1.CategoryCount.deserializeBinaryFromReader);
      msg.addPoiByCategory(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.CityStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.CityStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CityStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalPois();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalRestaurants();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotalHotels();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalAttractions();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserVisits();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSavedItineraries();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAverageRating();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPoiByCategoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ai_poi.city.v1.CategoryCount.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string city_id = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getCityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setCityId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 total_pois = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getTotalPois = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setTotalPois = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_restaurants = 3;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getTotalRestaurants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setTotalRestaurants = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 total_hotels = 4;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getTotalHotels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setTotalHotels = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 total_attractions = 5;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getTotalAttractions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setTotalAttractions = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 user_visits = 6;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getUserVisits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setUserVisits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 saved_itineraries = 7;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getSavedItineraries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setSavedItineraries = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double average_rating = 8;
 * @return {number}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getAverageRating = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.setAverageRating = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * repeated CategoryCount poi_by_category = 9;
 * @return {!Array<!proto.ai_poi.city.v1.CategoryCount>}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getPoiByCategoryList = function() {
  return /** @type{!Array<!proto.ai_poi.city.v1.CategoryCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.city.v1.CategoryCount, 9));
};


/**
 * @param {!Array<!proto.ai_poi.city.v1.CategoryCount>} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
*/
proto.ai_poi.city.v1.CityStatistics.prototype.setPoiByCategoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ai_poi.city.v1.CategoryCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.CategoryCount}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.addPoiByCategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ai_poi.city.v1.CategoryCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.clearPoiByCategoryList = function() {
  return this.setPoiByCategoryList([]);
};


/**
 * optional google.protobuf.Timestamp last_updated = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
*/
proto.ai_poi.city.v1.CityStatistics.prototype.setLastUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.CityStatistics} returns this
 */
proto.ai_poi.city.v1.CityStatistics.prototype.clearLastUpdated = function() {
  return this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.CityStatistics.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.CategoryCount.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.CategoryCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.CategoryCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CategoryCount.toObject = function(includeInstance, msg) {
  var f, obj = {
category: jspb.Message.getFieldWithDefault(msg, 1, ""),
count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.CategoryCount}
 */
proto.ai_poi.city.v1.CategoryCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.CategoryCount;
  return proto.ai_poi.city.v1.CategoryCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.CategoryCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.CategoryCount}
 */
proto.ai_poi.city.v1.CategoryCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.CategoryCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.CategoryCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.CategoryCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CategoryCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string category = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.CategoryCount.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CategoryCount} returns this
 */
proto.ai_poi.city.v1.CategoryCount.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.CategoryCount.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CategoryCount} returns this
 */
proto.ai_poi.city.v1.CategoryCount.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.WeatherInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.WeatherInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.WeatherInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
cityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
currentCondition: jspb.Message.getFieldWithDefault(msg, 2, ""),
temperatureCelsius: jspb.Message.getFieldWithDefault(msg, 3, 0),
humidity: jspb.Message.getFieldWithDefault(msg, 4, 0),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
forecastUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.WeatherInfo}
 */
proto.ai_poi.city.v1.WeatherInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.WeatherInfo;
  return proto.ai_poi.city.v1.WeatherInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.WeatherInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.WeatherInfo}
 */
proto.ai_poi.city.v1.WeatherInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentCondition(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemperatureCelsius(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHumidity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setForecastUrl(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.WeatherInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.WeatherInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.WeatherInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrentCondition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTemperatureCelsius();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHumidity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getForecastUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string city_id = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getCityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setCityId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string current_condition = 2;
 * @return {string}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getCurrentCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setCurrentCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 temperature_celsius = 3;
 * @return {number}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getTemperatureCelsius = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setTemperatureCelsius = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 humidity = 4;
 * @return {number}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getHumidity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setHumidity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string forecast_url = 6;
 * @return {string}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getForecastUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.setForecastUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp last_updated = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
*/
proto.ai_poi.city.v1.WeatherInfo.prototype.setLastUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.WeatherInfo} returns this
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.clearLastUpdated = function() {
  return this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.WeatherInfo.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
includeStatistics: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
countryCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
popularOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
request: (f = msg.getRequest()) && proto.ai_poi.city.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest}
 */
proto.ai_poi.city.v1.GetCitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCitiesRequest;
  return proto.ai_poi.city.v1.GetCitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest}
 */
proto.ai_poi.city.v1.GetCitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeStatistics(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPopularOnly(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIncludeStatistics();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPopularOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool include_statistics = 3;
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getIncludeStatistics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setIncludeStatistics = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string country_code = 4;
 * @return {string}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool popular_only = 5;
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getPopularOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setPopularOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
*/
proto.ai_poi.city.v1.GetCitiesRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCitiesRequest} returns this
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCitiesRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.GetCitiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
citiesList: jspb.Message.toObjectList(msg.getCitiesList(),
    proto.ai_poi.city.v1.City.toObject, includeInstance),
totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
response: (f = msg.getResponse()) && proto.ai_poi.city.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse}
 */
proto.ai_poi.city.v1.GetCitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCitiesResponse;
  return proto.ai_poi.city.v1.GetCitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse}
 */
proto.ai_poi.city.v1.GetCitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.city.v1.City;
      reader.readMessage(value,proto.ai_poi.city.v1.City.deserializeBinaryFromReader);
      msg.addCities(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ai_poi.city.v1.City.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated City cities = 1;
 * @return {!Array<!proto.ai_poi.city.v1.City>}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.getCitiesList = function() {
  return /** @type{!Array<!proto.ai_poi.city.v1.City>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.city.v1.City, 1));
};


/**
 * @param {!Array<!proto.ai_poi.city.v1.City>} value
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse} returns this
*/
proto.ai_poi.city.v1.GetCitiesResponse.prototype.setCitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ai_poi.city.v1.City=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.City}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.addCities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ai_poi.city.v1.City, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse} returns this
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.clearCitiesList = function() {
  return this.setCitiesList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse} returns this
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse} returns this
*/
proto.ai_poi.city.v1.GetCitiesResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCitiesResponse} returns this
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCitiesResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
cityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
includeStatistics: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
includeWeather: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
request: (f = msg.getRequest()) && proto.ai_poi.city.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCityRequest}
 */
proto.ai_poi.city.v1.GetCityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCityRequest;
  return proto.ai_poi.city.v1.GetCityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCityRequest}
 */
proto.ai_poi.city.v1.GetCityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeStatistics(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeWeather(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeStatistics();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludeWeather();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string city_id = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.getCityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.GetCityRequest} returns this
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.setCityId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_statistics = 2;
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.getIncludeStatistics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.GetCityRequest} returns this
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.setIncludeStatistics = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool include_weather = 3;
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.getIncludeWeather = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.GetCityRequest} returns this
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.setIncludeWeather = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityRequest} returns this
*/
proto.ai_poi.city.v1.GetCityRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityRequest} returns this
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
city: (f = msg.getCity()) && proto.ai_poi.city.v1.City.toObject(includeInstance, f),
statistics: (f = msg.getStatistics()) && proto.ai_poi.city.v1.CityStatistics.toObject(includeInstance, f),
weather: (f = msg.getWeather()) && proto.ai_poi.city.v1.WeatherInfo.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.ai_poi.city.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCityResponse}
 */
proto.ai_poi.city.v1.GetCityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCityResponse;
  return proto.ai_poi.city.v1.GetCityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCityResponse}
 */
proto.ai_poi.city.v1.GetCityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.city.v1.City;
      reader.readMessage(value,proto.ai_poi.city.v1.City.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    case 2:
      var value = new proto.ai_poi.city.v1.CityStatistics;
      reader.readMessage(value,proto.ai_poi.city.v1.CityStatistics.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 3:
      var value = new proto.ai_poi.city.v1.WeatherInfo;
      reader.readMessage(value,proto.ai_poi.city.v1.WeatherInfo.deserializeBinaryFromReader);
      msg.setWeather(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai_poi.city.v1.City.serializeBinaryToWriter
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai_poi.city.v1.CityStatistics.serializeBinaryToWriter
    );
  }
  f = message.getWeather();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai_poi.city.v1.WeatherInfo.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional City city = 1;
 * @return {?proto.ai_poi.city.v1.City}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.getCity = function() {
  return /** @type{?proto.ai_poi.city.v1.City} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.City, 1));
};


/**
 * @param {?proto.ai_poi.city.v1.City|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
*/
proto.ai_poi.city.v1.GetCityResponse.prototype.setCity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.clearCity = function() {
  return this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.hasCity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CityStatistics statistics = 2;
 * @return {?proto.ai_poi.city.v1.CityStatistics}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.getStatistics = function() {
  return /** @type{?proto.ai_poi.city.v1.CityStatistics} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.CityStatistics, 2));
};


/**
 * @param {?proto.ai_poi.city.v1.CityStatistics|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
*/
proto.ai_poi.city.v1.GetCityResponse.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WeatherInfo weather = 3;
 * @return {?proto.ai_poi.city.v1.WeatherInfo}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.getWeather = function() {
  return /** @type{?proto.ai_poi.city.v1.WeatherInfo} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.WeatherInfo, 3));
};


/**
 * @param {?proto.ai_poi.city.v1.WeatherInfo|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
*/
proto.ai_poi.city.v1.GetCityResponse.prototype.setWeather = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.clearWeather = function() {
  return this.setWeather(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.hasWeather = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
*/
proto.ai_poi.city.v1.GetCityResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityResponse} returns this
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.SearchCitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchCitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
query: jspb.Message.getFieldWithDefault(msg, 1, ""),
countryCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
fuzzySearch: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
request: (f = msg.getRequest()) && proto.ai_poi.city.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.SearchCitiesRequest;
  return proto.ai_poi.city.v1.SearchCitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFuzzySearch(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.SearchCitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchCitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFuzzySearch();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country_code = 2;
 * @return {string}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool fuzzy_search = 5;
 * @return {boolean}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getFuzzySearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setFuzzySearch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
*/
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.SearchCitiesRequest} returns this
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.SearchCitiesRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.SearchCitiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.SearchCitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.SearchCitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchCitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.ai_poi.city.v1.CitySearchResult.toObject, includeInstance),
totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
metadata: (f = msg.getMetadata()) && proto.ai_poi.city.v1.SearchMetadata.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.ai_poi.city.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.SearchCitiesResponse;
  return proto.ai_poi.city.v1.SearchCitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.SearchCitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.city.v1.CitySearchResult;
      reader.readMessage(value,proto.ai_poi.city.v1.CitySearchResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 3:
      var value = new proto.ai_poi.city.v1.SearchMetadata;
      reader.readMessage(value,proto.ai_poi.city.v1.SearchMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.SearchCitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.SearchCitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchCitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ai_poi.city.v1.CitySearchResult.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai_poi.city.v1.SearchMetadata.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CitySearchResult results = 1;
 * @return {!Array<!proto.ai_poi.city.v1.CitySearchResult>}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.ai_poi.city.v1.CitySearchResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.city.v1.CitySearchResult, 1));
};


/**
 * @param {!Array<!proto.ai_poi.city.v1.CitySearchResult>} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
*/
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ai_poi.city.v1.CitySearchResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.CitySearchResult}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ai_poi.city.v1.CitySearchResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SearchMetadata metadata = 3;
 * @return {?proto.ai_poi.city.v1.SearchMetadata}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.getMetadata = function() {
  return /** @type{?proto.ai_poi.city.v1.SearchMetadata} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.SearchMetadata, 3));
};


/**
 * @param {?proto.ai_poi.city.v1.SearchMetadata|undefined} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
*/
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
*/
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.SearchCitiesResponse} returns this
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.SearchCitiesResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.CitySearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.CitySearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CitySearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
city: (f = msg.getCity()) && proto.ai_poi.city.v1.City.toObject(includeInstance, f),
relevanceScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
matchReason: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.CitySearchResult}
 */
proto.ai_poi.city.v1.CitySearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.CitySearchResult;
  return proto.ai_poi.city.v1.CitySearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.CitySearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.CitySearchResult}
 */
proto.ai_poi.city.v1.CitySearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.city.v1.City;
      reader.readMessage(value,proto.ai_poi.city.v1.City.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRelevanceScore(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.CitySearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.CitySearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.CitySearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai_poi.city.v1.City.serializeBinaryToWriter
    );
  }
  f = message.getRelevanceScore();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMatchReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional City city = 1;
 * @return {?proto.ai_poi.city.v1.City}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.getCity = function() {
  return /** @type{?proto.ai_poi.city.v1.City} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.City, 1));
};


/**
 * @param {?proto.ai_poi.city.v1.City|undefined} value
 * @return {!proto.ai_poi.city.v1.CitySearchResult} returns this
*/
proto.ai_poi.city.v1.CitySearchResult.prototype.setCity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.CitySearchResult} returns this
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.clearCity = function() {
  return this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.hasCity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double relevance_score = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.getRelevanceScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.CitySearchResult} returns this
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.setRelevanceScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string match_reason = 3;
 * @return {string}
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.getMatchReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.CitySearchResult} returns this
 */
proto.ai_poi.city.v1.CitySearchResult.prototype.setMatchReason = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.SearchMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.SearchMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
queryTimeMs: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
searchMethod: jspb.Message.getFieldWithDefault(msg, 2, ""),
fuzzyMatchingUsed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.SearchMetadata}
 */
proto.ai_poi.city.v1.SearchMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.SearchMetadata;
  return proto.ai_poi.city.v1.SearchMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.SearchMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.SearchMetadata}
 */
proto.ai_poi.city.v1.SearchMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQueryTimeMs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchMethod(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFuzzyMatchingUsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.SearchMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.SearchMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.SearchMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryTimeMs();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getSearchMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFuzzyMatchingUsed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional double query_time_ms = 1;
 * @return {number}
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.getQueryTimeMs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.SearchMetadata} returns this
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.setQueryTimeMs = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string search_method = 2;
 * @return {string}
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.getSearchMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.SearchMetadata} returns this
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.setSearchMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool fuzzy_matching_used = 3;
 * @return {boolean}
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.getFuzzyMatchingUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.SearchMetadata} returns this
 */
proto.ai_poi.city.v1.SearchMetadata.prototype.setFuzzyMatchingUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCityStatisticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
cityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
includeTrends: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
request: (f = msg.getRequest()) && proto.ai_poi.city.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCityStatisticsRequest;
  return proto.ai_poi.city.v1.GetCityStatisticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeTrends(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCityStatisticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeTrends();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string city_id = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.getCityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.setCityId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_trends = 2;
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.getIncludeTrends = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.setIncludeTrends = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest} returns this
*/
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsRequest} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityStatisticsRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.GetCityStatisticsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
statistics: (f = msg.getStatistics()) && proto.ai_poi.city.v1.CityStatistics.toObject(includeInstance, f),
trendsList: jspb.Message.toObjectList(msg.getTrendsList(),
    proto.ai_poi.city.v1.TrendData.toObject, includeInstance),
response: (f = msg.getResponse()) && proto.ai_poi.city.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.GetCityStatisticsResponse;
  return proto.ai_poi.city.v1.GetCityStatisticsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.city.v1.CityStatistics;
      reader.readMessage(value,proto.ai_poi.city.v1.CityStatistics.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 2:
      var value = new proto.ai_poi.city.v1.TrendData;
      reader.readMessage(value,proto.ai_poi.city.v1.TrendData.deserializeBinaryFromReader);
      msg.addTrends(value);
      break;
    case 100:
      var value = new proto.ai_poi.city.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.GetCityStatisticsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai_poi.city.v1.CityStatistics.serializeBinaryToWriter
    );
  }
  f = message.getTrendsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ai_poi.city.v1.TrendData.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CityStatistics statistics = 1;
 * @return {?proto.ai_poi.city.v1.CityStatistics}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.getStatistics = function() {
  return /** @type{?proto.ai_poi.city.v1.CityStatistics} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.CityStatistics, 1));
};


/**
 * @param {?proto.ai_poi.city.v1.CityStatistics|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
*/
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TrendData trends = 2;
 * @return {!Array<!proto.ai_poi.city.v1.TrendData>}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.getTrendsList = function() {
  return /** @type{!Array<!proto.ai_poi.city.v1.TrendData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.city.v1.TrendData, 2));
};


/**
 * @param {!Array<!proto.ai_poi.city.v1.TrendData>} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
*/
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.setTrendsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ai_poi.city.v1.TrendData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.TrendData}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.addTrends = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ai_poi.city.v1.TrendData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.clearTrendsList = function() {
  return this.setTrendsList([]);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.city.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.city.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.city.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
*/
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.GetCityStatisticsResponse} returns this
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.GetCityStatisticsResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.city.v1.TrendData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.TrendData.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.TrendData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.TrendData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.TrendData.toObject = function(includeInstance, msg) {
  var f, obj = {
metric: jspb.Message.getFieldWithDefault(msg, 1, ""),
dataPointsList: jspb.Message.toObjectList(msg.getDataPointsList(),
    proto.ai_poi.city.v1.DataPoint.toObject, includeInstance),
period: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.TrendData}
 */
proto.ai_poi.city.v1.TrendData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.TrendData;
  return proto.ai_poi.city.v1.TrendData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.TrendData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.TrendData}
 */
proto.ai_poi.city.v1.TrendData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetric(value);
      break;
    case 2:
      var value = new proto.ai_poi.city.v1.DataPoint;
      reader.readMessage(value,proto.ai_poi.city.v1.DataPoint.deserializeBinaryFromReader);
      msg.addDataPoints(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.TrendData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.TrendData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.TrendData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.TrendData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetric();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ai_poi.city.v1.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getPeriod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string metric = 1;
 * @return {string}
 */
proto.ai_poi.city.v1.TrendData.prototype.getMetric = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.TrendData} returns this
 */
proto.ai_poi.city.v1.TrendData.prototype.setMetric = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated DataPoint data_points = 2;
 * @return {!Array<!proto.ai_poi.city.v1.DataPoint>}
 */
proto.ai_poi.city.v1.TrendData.prototype.getDataPointsList = function() {
  return /** @type{!Array<!proto.ai_poi.city.v1.DataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.city.v1.DataPoint, 2));
};


/**
 * @param {!Array<!proto.ai_poi.city.v1.DataPoint>} value
 * @return {!proto.ai_poi.city.v1.TrendData} returns this
*/
proto.ai_poi.city.v1.TrendData.prototype.setDataPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ai_poi.city.v1.DataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.city.v1.DataPoint}
 */
proto.ai_poi.city.v1.TrendData.prototype.addDataPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ai_poi.city.v1.DataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.city.v1.TrendData} returns this
 */
proto.ai_poi.city.v1.TrendData.prototype.clearDataPointsList = function() {
  return this.setDataPointsList([]);
};


/**
 * optional string period = 3;
 * @return {string}
 */
proto.ai_poi.city.v1.TrendData.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.TrendData} returns this
 */
proto.ai_poi.city.v1.TrendData.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.DataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.DataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.DataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.DataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.DataPoint}
 */
proto.ai_poi.city.v1.DataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.DataPoint;
  return proto.ai_poi.city.v1.DataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.DataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.DataPoint}
 */
proto.ai_poi.city.v1.DataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.DataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.DataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.DataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.DataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.city.v1.DataPoint.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.city.v1.DataPoint} returns this
*/
proto.ai_poi.city.v1.DataPoint.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.city.v1.DataPoint} returns this
 */
proto.ai_poi.city.v1.DataPoint.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.city.v1.DataPoint.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.ai_poi.city.v1.DataPoint.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.city.v1.DataPoint} returns this
 */
proto.ai_poi.city.v1.DataPoint.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.BaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.BaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.BaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.BaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
downstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.BaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.BaseRequest;
  return proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.BaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.BaseRequest}
 */
proto.ai_poi.city.v1.BaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.BaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.BaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.BaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDownstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
};


/**
 * optional string downstream = 998;
 * @return {string}
 */
proto.ai_poi.city.v1.BaseRequest.prototype.getDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.BaseRequest} returns this
 */
proto.ai_poi.city.v1.BaseRequest.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.city.v1.BaseRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.BaseRequest} returns this
 */
proto.ai_poi.city.v1.BaseRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.city.v1.BaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.city.v1.BaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.city.v1.BaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.BaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
upstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, ""),
status: jspb.Message.getFieldWithDefault(msg, 1000, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.BaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.city.v1.BaseResponse;
  return proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.city.v1.BaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.city.v1.BaseResponse}
 */
proto.ai_poi.city.v1.BaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.city.v1.BaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.city.v1.BaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.city.v1.BaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
};


/**
 * optional string upstream = 998;
 * @return {string}
 */
proto.ai_poi.city.v1.BaseResponse.prototype.getUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.BaseResponse} returns this
 */
proto.ai_poi.city.v1.BaseResponse.prototype.setUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.city.v1.BaseResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.BaseResponse} returns this
 */
proto.ai_poi.city.v1.BaseResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};


/**
 * optional string status = 1000;
 * @return {string}
 */
proto.ai_poi.city.v1.BaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.city.v1.BaseResponse} returns this
 */
proto.ai_poi.city.v1.BaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


goog.object.extend(exports, proto.ai_poi.city.v1);
