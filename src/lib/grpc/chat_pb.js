// source: chat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.ai_poi.chat.v1.BaseRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.BaseResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ChatContextType', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ChatEvent', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ChatEvent.PayloadCase', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ChatMessage', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ChatSession', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.CityResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.CompleteEvent', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ContinueChatRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.CostBreakdown', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.CulturalInfo', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ErrorEvent', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.EstimatedCosts', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.FreeChatRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetChatSessionsRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetChatSessionsResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetPOIDetailsRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetPOIDetailsResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetSavedItinerariesRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.GetSavedItinerariesResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ItineraryActivity', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ItineraryDay', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ItineraryResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.POIDetailedInfo', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.POIReference', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.RemoveItineraryRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.RemoveItineraryResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.SaveItineraryRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.SaveItineraryResponse', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.StartChatRequest', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.ThinkingEvent', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.UserSavedItinerary', null, global);
goog.exportSymbol('proto.ai_poi.chat.v1.WeatherInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ChatEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_);
};
goog.inherits(proto.ai_poi.chat.v1.ChatEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ChatEvent.displayName = 'proto.ai_poi.chat.v1.ChatEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ChatMessage.displayName = 'proto.ai_poi.chat.v1.ChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ThinkingEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ThinkingEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ThinkingEvent.displayName = 'proto.ai_poi.chat.v1.ThinkingEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ErrorEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ErrorEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ErrorEvent.displayName = 'proto.ai_poi.chat.v1.ErrorEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.CompleteEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.CompleteEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.CompleteEvent.displayName = 'proto.ai_poi.chat.v1.CompleteEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.CityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.CityResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.CityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.CityResponse.displayName = 'proto.ai_poi.chat.v1.CityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ItineraryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.ItineraryResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.ItineraryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ItineraryResponse.displayName = 'proto.ai_poi.chat.v1.ItineraryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ItineraryDay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.ItineraryDay.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.ItineraryDay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ItineraryDay.displayName = 'proto.ai_poi.chat.v1.ItineraryDay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ItineraryActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ItineraryActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ItineraryActivity.displayName = 'proto.ai_poi.chat.v1.ItineraryActivity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.POIReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.POIReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.POIReference.displayName = 'proto.ai_poi.chat.v1.POIReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.WeatherInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.WeatherInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.WeatherInfo.displayName = 'proto.ai_poi.chat.v1.WeatherInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.CulturalInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.CulturalInfo.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.CulturalInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.CulturalInfo.displayName = 'proto.ai_poi.chat.v1.CulturalInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.EstimatedCosts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.EstimatedCosts.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.EstimatedCosts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.EstimatedCosts.displayName = 'proto.ai_poi.chat.v1.EstimatedCosts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.CostBreakdown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.CostBreakdown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.CostBreakdown.displayName = 'proto.ai_poi.chat.v1.CostBreakdown';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.StartChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.StartChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.StartChatRequest.displayName = 'proto.ai_poi.chat.v1.StartChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ContinueChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ContinueChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ContinueChatRequest.displayName = 'proto.ai_poi.chat.v1.ContinueChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.FreeChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.FreeChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.FreeChatRequest.displayName = 'proto.ai_poi.chat.v1.FreeChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetChatSessionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetChatSessionsRequest.displayName = 'proto.ai_poi.chat.v1.GetChatSessionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.GetChatSessionsResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetChatSessionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetChatSessionsResponse.displayName = 'proto.ai_poi.chat.v1.GetChatSessionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.ChatSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.ChatSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.ChatSession.displayName = 'proto.ai_poi.chat.v1.ChatSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.SaveItineraryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.SaveItineraryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.SaveItineraryRequest.displayName = 'proto.ai_poi.chat.v1.SaveItineraryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.SaveItineraryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.SaveItineraryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.SaveItineraryResponse.displayName = 'proto.ai_poi.chat.v1.SaveItineraryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetSavedItinerariesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetSavedItinerariesRequest.displayName = 'proto.ai_poi.chat.v1.GetSavedItinerariesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.GetSavedItinerariesResponse.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetSavedItinerariesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetSavedItinerariesResponse.displayName = 'proto.ai_poi.chat.v1.GetSavedItinerariesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.UserSavedItinerary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.UserSavedItinerary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.UserSavedItinerary.displayName = 'proto.ai_poi.chat.v1.UserSavedItinerary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.RemoveItineraryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.RemoveItineraryRequest.displayName = 'proto.ai_poi.chat.v1.RemoveItineraryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.RemoveItineraryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.RemoveItineraryResponse.displayName = 'proto.ai_poi.chat.v1.RemoveItineraryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetPOIDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetPOIDetailsRequest.displayName = 'proto.ai_poi.chat.v1.GetPOIDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.GetPOIDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.GetPOIDetailsResponse.displayName = 'proto.ai_poi.chat.v1.GetPOIDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.POIDetailedInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai_poi.chat.v1.POIDetailedInfo.repeatedFields_, null);
};
goog.inherits(proto.ai_poi.chat.v1.POIDetailedInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.POIDetailedInfo.displayName = 'proto.ai_poi.chat.v1.POIDetailedInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.BaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.BaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.BaseRequest.displayName = 'proto.ai_poi.chat.v1.BaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai_poi.chat.v1.BaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.ai_poi.chat.v1.BaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai_poi.chat.v1.BaseResponse.displayName = 'proto.ai_poi.chat.v1.BaseResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai_poi.chat.v1.ChatEvent.oneofGroups_ = [[5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.ai_poi.chat.v1.ChatEvent.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MESSAGE: 5,
  THINKING: 6,
  ERROR: 7,
  COMPLETE: 8,
  CITY_RESPONSE: 9,
  ITINERARY_RESPONSE: 10
};

/**
 * @return {proto.ai_poi.chat.v1.ChatEvent.PayloadCase}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getPayloadCase = function() {
  return /** @type {proto.ai_poi.chat.v1.ChatEvent.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ChatEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ChatEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
data: jspb.Message.getFieldWithDefault(msg, 2, ""),
sessionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
message: (f = msg.getMessage()) && proto.ai_poi.chat.v1.ChatMessage.toObject(includeInstance, f),
thinking: (f = msg.getThinking()) && proto.ai_poi.chat.v1.ThinkingEvent.toObject(includeInstance, f),
error: (f = msg.getError()) && proto.ai_poi.chat.v1.ErrorEvent.toObject(includeInstance, f),
complete: (f = msg.getComplete()) && proto.ai_poi.chat.v1.CompleteEvent.toObject(includeInstance, f),
cityResponse: (f = msg.getCityResponse()) && proto.ai_poi.chat.v1.CityResponse.toObject(includeInstance, f),
itineraryResponse: (f = msg.getItineraryResponse()) && proto.ai_poi.chat.v1.ItineraryResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ChatEvent}
 */
proto.ai_poi.chat.v1.ChatEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ChatEvent;
  return proto.ai_poi.chat.v1.ChatEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ChatEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ChatEvent}
 */
proto.ai_poi.chat.v1.ChatEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 5:
      var value = new proto.ai_poi.chat.v1.ChatMessage;
      reader.readMessage(value,proto.ai_poi.chat.v1.ChatMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 6:
      var value = new proto.ai_poi.chat.v1.ThinkingEvent;
      reader.readMessage(value,proto.ai_poi.chat.v1.ThinkingEvent.deserializeBinaryFromReader);
      msg.setThinking(value);
      break;
    case 7:
      var value = new proto.ai_poi.chat.v1.ErrorEvent;
      reader.readMessage(value,proto.ai_poi.chat.v1.ErrorEvent.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 8:
      var value = new proto.ai_poi.chat.v1.CompleteEvent;
      reader.readMessage(value,proto.ai_poi.chat.v1.CompleteEvent.deserializeBinaryFromReader);
      msg.setComplete(value);
      break;
    case 9:
      var value = new proto.ai_poi.chat.v1.CityResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.CityResponse.deserializeBinaryFromReader);
      msg.setCityResponse(value);
      break;
    case 10:
      var value = new proto.ai_poi.chat.v1.ItineraryResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.ItineraryResponse.deserializeBinaryFromReader);
      msg.setItineraryResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ChatEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ChatEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ai_poi.chat.v1.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getThinking();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ai_poi.chat.v1.ThinkingEvent.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ai_poi.chat.v1.ErrorEvent.serializeBinaryToWriter
    );
  }
  f = message.getComplete();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ai_poi.chat.v1.CompleteEvent.serializeBinaryToWriter
    );
  }
  f = message.getCityResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ai_poi.chat.v1.CityResponse.serializeBinaryToWriter
    );
  }
  f = message.getItineraryResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ai_poi.chat.v1.ItineraryResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string session_id = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChatMessage message = 5;
 * @return {?proto.ai_poi.chat.v1.ChatMessage}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getMessage = function() {
  return /** @type{?proto.ai_poi.chat.v1.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.ChatMessage, 5));
};


/**
 * @param {?proto.ai_poi.chat.v1.ChatMessage|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ThinkingEvent thinking = 6;
 * @return {?proto.ai_poi.chat.v1.ThinkingEvent}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getThinking = function() {
  return /** @type{?proto.ai_poi.chat.v1.ThinkingEvent} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.ThinkingEvent, 6));
};


/**
 * @param {?proto.ai_poi.chat.v1.ThinkingEvent|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setThinking = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearThinking = function() {
  return this.setThinking(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasThinking = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ErrorEvent error = 7;
 * @return {?proto.ai_poi.chat.v1.ErrorEvent}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getError = function() {
  return /** @type{?proto.ai_poi.chat.v1.ErrorEvent} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.ErrorEvent, 7));
};


/**
 * @param {?proto.ai_poi.chat.v1.ErrorEvent|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CompleteEvent complete = 8;
 * @return {?proto.ai_poi.chat.v1.CompleteEvent}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getComplete = function() {
  return /** @type{?proto.ai_poi.chat.v1.CompleteEvent} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.CompleteEvent, 8));
};


/**
 * @param {?proto.ai_poi.chat.v1.CompleteEvent|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearComplete = function() {
  return this.setComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasComplete = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CityResponse city_response = 9;
 * @return {?proto.ai_poi.chat.v1.CityResponse}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getCityResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.CityResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.CityResponse, 9));
};


/**
 * @param {?proto.ai_poi.chat.v1.CityResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setCityResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearCityResponse = function() {
  return this.setCityResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasCityResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ItineraryResponse itinerary_response = 10;
 * @return {?proto.ai_poi.chat.v1.ItineraryResponse}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.getItineraryResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.ItineraryResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.ItineraryResponse, 10));
};


/**
 * @param {?proto.ai_poi.chat.v1.ItineraryResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
*/
proto.ai_poi.chat.v1.ChatEvent.prototype.setItineraryResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.ai_poi.chat.v1.ChatEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatEvent} returns this
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.clearItineraryResponse = function() {
  return this.setItineraryResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatEvent.prototype.hasItineraryResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
sessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
content: jspb.Message.getFieldWithDefault(msg, 3, ""),
role: jspb.Message.getFieldWithDefault(msg, 4, ""),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
contextType: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ChatMessage}
 */
proto.ai_poi.chat.v1.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ChatMessage;
  return proto.ai_poi.chat.v1.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ChatMessage}
 */
proto.ai_poi.chat.v1.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (reader.readEnum());
      msg.setContextType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getContextType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string role = 4;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
*/
proto.ai_poi.chat.v1.ChatMessage.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ChatContextType context_type = 6;
 * @return {!proto.ai_poi.chat.v1.ChatContextType}
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.getContextType = function() {
  return /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatContextType} value
 * @return {!proto.ai_poi.chat.v1.ChatMessage} returns this
 */
proto.ai_poi.chat.v1.ChatMessage.prototype.setContextType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ThinkingEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ThinkingEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ThinkingEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
message: jspb.Message.getFieldWithDefault(msg, 1, ""),
progress: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ThinkingEvent}
 */
proto.ai_poi.chat.v1.ThinkingEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ThinkingEvent;
  return proto.ai_poi.chat.v1.ThinkingEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ThinkingEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ThinkingEvent}
 */
proto.ai_poi.chat.v1.ThinkingEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ThinkingEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ThinkingEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ThinkingEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ThinkingEvent} returns this
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 progress = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.ThinkingEvent} returns this
 */
proto.ai_poi.chat.v1.ThinkingEvent.prototype.setProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ErrorEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ErrorEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ErrorEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
code: jspb.Message.getFieldWithDefault(msg, 1, ""),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
detailsMap: (f = msg.getDetailsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ErrorEvent}
 */
proto.ai_poi.chat.v1.ErrorEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ErrorEvent;
  return proto.ai_poi.chat.v1.ErrorEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ErrorEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ErrorEvent}
 */
proto.ai_poi.chat.v1.ErrorEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = msg.getDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ErrorEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ErrorEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ErrorEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ErrorEvent} returns this
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ErrorEvent} returns this
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> details = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.getDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ai_poi.chat.v1.ErrorEvent} returns this
 */
proto.ai_poi.chat.v1.ErrorEvent.prototype.clearDetailsMap = function() {
  this.getDetailsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.CompleteEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.CompleteEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CompleteEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
totalMessages: jspb.Message.getFieldWithDefault(msg, 2, 0),
completedAt: (f = msg.getCompletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.CompleteEvent}
 */
proto.ai_poi.chat.v1.CompleteEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.CompleteEvent;
  return proto.ai_poi.chat.v1.CompleteEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.CompleteEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.CompleteEvent}
 */
proto.ai_poi.chat.v1.CompleteEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalMessages(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.CompleteEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.CompleteEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CompleteEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalMessages();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCompletedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CompleteEvent} returns this
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 total_messages = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.getTotalMessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.CompleteEvent} returns this
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.setTotalMessages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp completed_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.getCompletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.CompleteEvent} returns this
*/
proto.ai_poi.chat.v1.CompleteEvent.prototype.setCompletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.CompleteEvent} returns this
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.clearCompletedAt = function() {
  return this.setCompletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.CompleteEvent.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.CityResponse.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.CityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.CityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
country: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
highlightsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
poisList: jspb.Message.toObjectList(msg.getPoisList(),
    proto.ai_poi.chat.v1.POIReference.toObject, includeInstance),
weather: (f = msg.getWeather()) && proto.ai_poi.chat.v1.WeatherInfo.toObject(includeInstance, f),
culturalInfo: (f = msg.getCulturalInfo()) && proto.ai_poi.chat.v1.CulturalInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.CityResponse}
 */
proto.ai_poi.chat.v1.CityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.CityResponse;
  return proto.ai_poi.chat.v1.CityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.CityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.CityResponse}
 */
proto.ai_poi.chat.v1.CityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addHighlights(value);
      break;
    case 5:
      var value = new proto.ai_poi.chat.v1.POIReference;
      reader.readMessage(value,proto.ai_poi.chat.v1.POIReference.deserializeBinaryFromReader);
      msg.addPois(value);
      break;
    case 6:
      var value = new proto.ai_poi.chat.v1.WeatherInfo;
      reader.readMessage(value,proto.ai_poi.chat.v1.WeatherInfo.deserializeBinaryFromReader);
      msg.setWeather(value);
      break;
    case 7:
      var value = new proto.ai_poi.chat.v1.CulturalInfo;
      reader.readMessage(value,proto.ai_poi.chat.v1.CulturalInfo.deserializeBinaryFromReader);
      msg.setCulturalInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.CityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.CityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHighlightsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getPoisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ai_poi.chat.v1.POIReference.serializeBinaryToWriter
    );
  }
  f = message.getWeather();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ai_poi.chat.v1.WeatherInfo.serializeBinaryToWriter
    );
  }
  f = message.getCulturalInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ai_poi.chat.v1.CulturalInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string highlights = 4;
 * @return {!Array<string>}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getHighlightsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.setHighlightsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.addHighlights = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.clearHighlightsList = function() {
  return this.setHighlightsList([]);
};


/**
 * repeated POIReference pois = 5;
 * @return {!Array<!proto.ai_poi.chat.v1.POIReference>}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getPoisList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.POIReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.POIReference, 5));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.POIReference>} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
*/
proto.ai_poi.chat.v1.CityResponse.prototype.setPoisList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.POIReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.POIReference}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.addPois = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ai_poi.chat.v1.POIReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.clearPoisList = function() {
  return this.setPoisList([]);
};


/**
 * optional WeatherInfo weather = 6;
 * @return {?proto.ai_poi.chat.v1.WeatherInfo}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getWeather = function() {
  return /** @type{?proto.ai_poi.chat.v1.WeatherInfo} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.WeatherInfo, 6));
};


/**
 * @param {?proto.ai_poi.chat.v1.WeatherInfo|undefined} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
*/
proto.ai_poi.chat.v1.CityResponse.prototype.setWeather = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.clearWeather = function() {
  return this.setWeather(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.hasWeather = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CulturalInfo cultural_info = 7;
 * @return {?proto.ai_poi.chat.v1.CulturalInfo}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.getCulturalInfo = function() {
  return /** @type{?proto.ai_poi.chat.v1.CulturalInfo} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.CulturalInfo, 7));
};


/**
 * @param {?proto.ai_poi.chat.v1.CulturalInfo|undefined} value
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
*/
proto.ai_poi.chat.v1.CityResponse.prototype.setCulturalInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.CityResponse} returns this
 */
proto.ai_poi.chat.v1.CityResponse.prototype.clearCulturalInfo = function() {
  return this.setCulturalInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.CityResponse.prototype.hasCulturalInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.ItineraryResponse.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ItineraryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ItineraryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
title: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
durationDays: jspb.Message.getFieldWithDefault(msg, 3, 0),
daysList: jspb.Message.toObjectList(msg.getDaysList(),
    proto.ai_poi.chat.v1.ItineraryDay.toObject, includeInstance),
featuredPoisList: jspb.Message.toObjectList(msg.getFeaturedPoisList(),
    proto.ai_poi.chat.v1.POIReference.toObject, includeInstance),
estimatedCosts: (f = msg.getEstimatedCosts()) && proto.ai_poi.chat.v1.EstimatedCosts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse}
 */
proto.ai_poi.chat.v1.ItineraryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ItineraryResponse;
  return proto.ai_poi.chat.v1.ItineraryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ItineraryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse}
 */
proto.ai_poi.chat.v1.ItineraryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 4:
      var value = new proto.ai_poi.chat.v1.ItineraryDay;
      reader.readMessage(value,proto.ai_poi.chat.v1.ItineraryDay.deserializeBinaryFromReader);
      msg.addDays(value);
      break;
    case 5:
      var value = new proto.ai_poi.chat.v1.POIReference;
      reader.readMessage(value,proto.ai_poi.chat.v1.POIReference.deserializeBinaryFromReader);
      msg.addFeaturedPois(value);
      break;
    case 6:
      var value = new proto.ai_poi.chat.v1.EstimatedCosts;
      reader.readMessage(value,proto.ai_poi.chat.v1.EstimatedCosts.deserializeBinaryFromReader);
      msg.setEstimatedCosts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ItineraryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ItineraryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ai_poi.chat.v1.ItineraryDay.serializeBinaryToWriter
    );
  }
  f = message.getFeaturedPoisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ai_poi.chat.v1.POIReference.serializeBinaryToWriter
    );
  }
  f = message.getEstimatedCosts();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ai_poi.chat.v1.EstimatedCosts.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 duration_days = 3;
 * @return {number}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ItineraryDay days = 4;
 * @return {!Array<!proto.ai_poi.chat.v1.ItineraryDay>}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getDaysList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.ItineraryDay>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.ItineraryDay, 4));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.ItineraryDay>} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
*/
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setDaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.ItineraryDay=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.ItineraryDay}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.addDays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ai_poi.chat.v1.ItineraryDay, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.clearDaysList = function() {
  return this.setDaysList([]);
};


/**
 * repeated POIReference featured_pois = 5;
 * @return {!Array<!proto.ai_poi.chat.v1.POIReference>}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getFeaturedPoisList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.POIReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.POIReference, 5));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.POIReference>} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
*/
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setFeaturedPoisList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.POIReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.POIReference}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.addFeaturedPois = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ai_poi.chat.v1.POIReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.clearFeaturedPoisList = function() {
  return this.setFeaturedPoisList([]);
};


/**
 * optional EstimatedCosts estimated_costs = 6;
 * @return {?proto.ai_poi.chat.v1.EstimatedCosts}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.getEstimatedCosts = function() {
  return /** @type{?proto.ai_poi.chat.v1.EstimatedCosts} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.EstimatedCosts, 6));
};


/**
 * @param {?proto.ai_poi.chat.v1.EstimatedCosts|undefined} value
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
*/
proto.ai_poi.chat.v1.ItineraryResponse.prototype.setEstimatedCosts = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.clearEstimatedCosts = function() {
  return this.setEstimatedCosts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ItineraryResponse.prototype.hasEstimatedCosts = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.ItineraryDay.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ItineraryDay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ItineraryDay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryDay.toObject = function(includeInstance, msg) {
  var f, obj = {
dayNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
activitiesList: jspb.Message.toObjectList(msg.getActivitiesList(),
    proto.ai_poi.chat.v1.ItineraryActivity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ItineraryDay}
 */
proto.ai_poi.chat.v1.ItineraryDay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ItineraryDay;
  return proto.ai_poi.chat.v1.ItineraryDay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ItineraryDay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ItineraryDay}
 */
proto.ai_poi.chat.v1.ItineraryDay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDayNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.ai_poi.chat.v1.ItineraryActivity;
      reader.readMessage(value,proto.ai_poi.chat.v1.ItineraryActivity.deserializeBinaryFromReader);
      msg.addActivities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ItineraryDay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ItineraryDay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryDay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDayNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ai_poi.chat.v1.ItineraryActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 day_number = 1;
 * @return {number}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.getDayNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.ItineraryDay} returns this
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.setDayNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryDay} returns this
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryDay} returns this
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ItineraryActivity activities = 4;
 * @return {!Array<!proto.ai_poi.chat.v1.ItineraryActivity>}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.getActivitiesList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.ItineraryActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.ItineraryActivity, 4));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.ItineraryActivity>} value
 * @return {!proto.ai_poi.chat.v1.ItineraryDay} returns this
*/
proto.ai_poi.chat.v1.ItineraryDay.prototype.setActivitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.ItineraryActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity}
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.addActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ai_poi.chat.v1.ItineraryActivity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.ItineraryDay} returns this
 */
proto.ai_poi.chat.v1.ItineraryDay.prototype.clearActivitiesList = function() {
  return this.setActivitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ItineraryActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ItineraryActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
timeSlot: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
location: jspb.Message.getFieldWithDefault(msg, 4, ""),
durationMinutes: jspb.Message.getFieldWithDefault(msg, 5, 0),
category: jspb.Message.getFieldWithDefault(msg, 6, ""),
poiReference: (f = msg.getPoiReference()) && proto.ai_poi.chat.v1.POIReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity}
 */
proto.ai_poi.chat.v1.ItineraryActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ItineraryActivity;
  return proto.ai_poi.chat.v1.ItineraryActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ItineraryActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity}
 */
proto.ai_poi.chat.v1.ItineraryActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeSlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationMinutes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 7:
      var value = new proto.ai_poi.chat.v1.POIReference;
      reader.readMessage(value,proto.ai_poi.chat.v1.POIReference.deserializeBinaryFromReader);
      msg.setPoiReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ItineraryActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ItineraryActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ItineraryActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeSlot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDurationMinutes();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPoiReference();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ai_poi.chat.v1.POIReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string time_slot = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getTimeSlot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setTimeSlot = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string location = 4;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 duration_minutes = 5;
 * @return {number}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string category = 6;
 * @return {string}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional POIReference poi_reference = 7;
 * @return {?proto.ai_poi.chat.v1.POIReference}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.getPoiReference = function() {
  return /** @type{?proto.ai_poi.chat.v1.POIReference} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.POIReference, 7));
};


/**
 * @param {?proto.ai_poi.chat.v1.POIReference|undefined} value
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
*/
proto.ai_poi.chat.v1.ItineraryActivity.prototype.setPoiReference = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ItineraryActivity} returns this
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.clearPoiReference = function() {
  return this.setPoiReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ItineraryActivity.prototype.hasPoiReference = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.POIReference.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.POIReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.POIReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.POIReference.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
category: jspb.Message.getFieldWithDefault(msg, 3, ""),
latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.POIReference}
 */
proto.ai_poi.chat.v1.POIReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.POIReference;
  return proto.ai_poi.chat.v1.POIReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.POIReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.POIReference}
 */
proto.ai_poi.chat.v1.POIReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.POIReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.POIReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.POIReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.POIReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string category = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double latitude = 4;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double longitude = 5;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIReference.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIReference} returns this
 */
proto.ai_poi.chat.v1.POIReference.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.WeatherInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.WeatherInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.WeatherInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
currentCondition: jspb.Message.getFieldWithDefault(msg, 1, ""),
temperatureCelsius: jspb.Message.getFieldWithDefault(msg, 2, 0),
description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.WeatherInfo}
 */
proto.ai_poi.chat.v1.WeatherInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.WeatherInfo;
  return proto.ai_poi.chat.v1.WeatherInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.WeatherInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.WeatherInfo}
 */
proto.ai_poi.chat.v1.WeatherInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentCondition(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemperatureCelsius(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.WeatherInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.WeatherInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.WeatherInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentCondition();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTemperatureCelsius();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string current_condition = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.getCurrentCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.WeatherInfo} returns this
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.setCurrentCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 temperature_celsius = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.getTemperatureCelsius = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.WeatherInfo} returns this
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.setTemperatureCelsius = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.WeatherInfo} returns this
 */
proto.ai_poi.chat.v1.WeatherInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.CulturalInfo.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.CulturalInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.CulturalInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CulturalInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
language: jspb.Message.getFieldWithDefault(msg, 1, ""),
currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
customsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
festivalsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.CulturalInfo}
 */
proto.ai_poi.chat.v1.CulturalInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.CulturalInfo;
  return proto.ai_poi.chat.v1.CulturalInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.CulturalInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.CulturalInfo}
 */
proto.ai_poi.chat.v1.CulturalInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustoms(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addFestivals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.CulturalInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.CulturalInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CulturalInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFestivalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string currency = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string customs = 3;
 * @return {!Array<string>}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.getCustomsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.setCustomsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.addCustoms = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.clearCustomsList = function() {
  return this.setCustomsList([]);
};


/**
 * repeated string festivals = 4;
 * @return {!Array<string>}
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.getFestivalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.setFestivalsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.addFestivals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.CulturalInfo} returns this
 */
proto.ai_poi.chat.v1.CulturalInfo.prototype.clearFestivalsList = function() {
  return this.setFestivalsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.EstimatedCosts.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.EstimatedCosts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.EstimatedCosts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.EstimatedCosts.toObject = function(includeInstance, msg) {
  var f, obj = {
currency: jspb.Message.getFieldWithDefault(msg, 1, ""),
budgetLow: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
budgetMedium: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
budgetHigh: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
breakdownList: jspb.Message.toObjectList(msg.getBreakdownList(),
    proto.ai_poi.chat.v1.CostBreakdown.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts}
 */
proto.ai_poi.chat.v1.EstimatedCosts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.EstimatedCosts;
  return proto.ai_poi.chat.v1.EstimatedCosts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.EstimatedCosts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts}
 */
proto.ai_poi.chat.v1.EstimatedCosts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBudgetLow(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBudgetMedium(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBudgetHigh(value);
      break;
    case 5:
      var value = new proto.ai_poi.chat.v1.CostBreakdown;
      reader.readMessage(value,proto.ai_poi.chat.v1.CostBreakdown.deserializeBinaryFromReader);
      msg.addBreakdown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.EstimatedCosts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.EstimatedCosts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.EstimatedCosts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBudgetLow();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getBudgetMedium();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getBudgetHigh();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getBreakdownList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ai_poi.chat.v1.CostBreakdown.serializeBinaryToWriter
    );
  }
};


/**
 * optional string currency = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double budget_low = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.getBudgetLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.setBudgetLow = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double budget_medium = 3;
 * @return {number}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.getBudgetMedium = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.setBudgetMedium = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double budget_high = 4;
 * @return {number}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.getBudgetHigh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.setBudgetHigh = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * repeated CostBreakdown breakdown = 5;
 * @return {!Array<!proto.ai_poi.chat.v1.CostBreakdown>}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.getBreakdownList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.CostBreakdown>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.CostBreakdown, 5));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.CostBreakdown>} value
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
*/
proto.ai_poi.chat.v1.EstimatedCosts.prototype.setBreakdownList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.CostBreakdown=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.CostBreakdown}
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.addBreakdown = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ai_poi.chat.v1.CostBreakdown, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.EstimatedCosts} returns this
 */
proto.ai_poi.chat.v1.EstimatedCosts.prototype.clearBreakdownList = function() {
  return this.setBreakdownList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.CostBreakdown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.CostBreakdown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CostBreakdown.toObject = function(includeInstance, msg) {
  var f, obj = {
category: jspb.Message.getFieldWithDefault(msg, 1, ""),
amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.CostBreakdown}
 */
proto.ai_poi.chat.v1.CostBreakdown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.CostBreakdown;
  return proto.ai_poi.chat.v1.CostBreakdown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.CostBreakdown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.CostBreakdown}
 */
proto.ai_poi.chat.v1.CostBreakdown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.CostBreakdown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.CostBreakdown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.CostBreakdown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string category = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CostBreakdown} returns this
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.CostBreakdown} returns this
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.CostBreakdown} returns this
 */
proto.ai_poi.chat.v1.CostBreakdown.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.StartChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.StartChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.StartChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
profileId: jspb.Message.getFieldWithDefault(msg, 2, ""),
initialMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
contextType: jspb.Message.getFieldWithDefault(msg, 4, 0),
metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.StartChatRequest}
 */
proto.ai_poi.chat.v1.StartChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.StartChatRequest;
  return proto.ai_poi.chat.v1.StartChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.StartChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.StartChatRequest}
 */
proto.ai_poi.chat.v1.StartChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMessage(value);
      break;
    case 4:
      var value = /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (reader.readEnum());
      msg.setContextType(value);
      break;
    case 5:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.StartChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.StartChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.StartChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProfileId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInitialMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string profile_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.setProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string initial_message = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getInitialMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.setInitialMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ChatContextType context_type = 4;
 * @return {!proto.ai_poi.chat.v1.ChatContextType}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getContextType = function() {
  return /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatContextType} value
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.setContextType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, string> metadata = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
*/
proto.ai_poi.chat.v1.StartChatRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.StartChatRequest} returns this
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.StartChatRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ContinueChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ContinueChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
message: jspb.Message.getFieldWithDefault(msg, 3, ""),
contextType: jspb.Message.getFieldWithDefault(msg, 4, 0),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ContinueChatRequest;
  return proto.ai_poi.chat.v1.ContinueChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (reader.readEnum());
      msg.setContextType(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ContinueChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ContinueChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ContinueChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ChatContextType context_type = 4;
 * @return {!proto.ai_poi.chat.v1.ChatContextType}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.getContextType = function() {
  return /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatContextType} value
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.setContextType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
*/
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ContinueChatRequest} returns this
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ContinueChatRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.FreeChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.FreeChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.FreeChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
message: jspb.Message.getFieldWithDefault(msg, 1, ""),
sessionToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
contextType: jspb.Message.getFieldWithDefault(msg, 3, 0),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest}
 */
proto.ai_poi.chat.v1.FreeChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.FreeChatRequest;
  return proto.ai_poi.chat.v1.FreeChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.FreeChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest}
 */
proto.ai_poi.chat.v1.FreeChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionToken(value);
      break;
    case 3:
      var value = /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (reader.readEnum());
      msg.setContextType(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.FreeChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.FreeChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.FreeChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContextType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest} returns this
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session_token = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.getSessionToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest} returns this
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.setSessionToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ChatContextType context_type = 3;
 * @return {!proto.ai_poi.chat.v1.ChatContextType}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.getContextType = function() {
  return /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatContextType} value
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest} returns this
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.setContextType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest} returns this
*/
proto.ai_poi.chat.v1.FreeChatRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.FreeChatRequest} returns this
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.FreeChatRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetChatSessionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
profileId: jspb.Message.getFieldWithDefault(msg, 2, ""),
limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetChatSessionsRequest;
  return proto.ai_poi.chat.v1.GetChatSessionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetChatSessionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProfileId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string profile_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.getProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.setProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
*/
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsRequest} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetChatSessionsRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetChatSessionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionsList: jspb.Message.toObjectList(msg.getSessionsList(),
    proto.ai_poi.chat.v1.ChatSession.toObject, includeInstance),
totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
response: (f = msg.getResponse()) && proto.ai_poi.chat.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetChatSessionsResponse;
  return proto.ai_poi.chat.v1.GetChatSessionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.chat.v1.ChatSession;
      reader.readMessage(value,proto.ai_poi.chat.v1.ChatSession.deserializeBinaryFromReader);
      msg.addSessions(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetChatSessionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetChatSessionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ai_poi.chat.v1.ChatSession.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChatSession sessions = 1;
 * @return {!Array<!proto.ai_poi.chat.v1.ChatSession>}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.getSessionsList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.ChatSession>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.ChatSession, 1));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.ChatSession>} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse} returns this
*/
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.setSessionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatSession=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.ChatSession}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.addSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ai_poi.chat.v1.ChatSession, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.clearSessionsList = function() {
  return this.setSessionsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse} returns this
*/
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetChatSessionsResponse} returns this
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetChatSessionsResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.ChatSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.ChatSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatSession.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
profileId: jspb.Message.getFieldWithDefault(msg, 3, ""),
title: jspb.Message.getFieldWithDefault(msg, 4, ""),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
messageCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
contextType: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.ChatSession}
 */
proto.ai_poi.chat.v1.ChatSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.ChatSession;
  return proto.ai_poi.chat.v1.ChatSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.ChatSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.ChatSession}
 */
proto.ai_poi.chat.v1.ChatSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageCount(value);
      break;
    case 8:
      var value = /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (reader.readEnum());
      msg.setContextType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.ChatSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.ChatSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.ChatSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProfileId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMessageCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getContextType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string profile_id = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
*/
proto.ai_poi.chat.v1.ChatSession.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
*/
proto.ai_poi.chat.v1.ChatSession.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 message_count = 7;
 * @return {number}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getMessageCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setMessageCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional ChatContextType context_type = 8;
 * @return {!proto.ai_poi.chat.v1.ChatContextType}
 */
proto.ai_poi.chat.v1.ChatSession.prototype.getContextType = function() {
  return /** @type {!proto.ai_poi.chat.v1.ChatContextType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.ai_poi.chat.v1.ChatContextType} value
 * @return {!proto.ai_poi.chat.v1.ChatSession} returns this
 */
proto.ai_poi.chat.v1.ChatSession.prototype.setContextType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.SaveItineraryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
sessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
title: jspb.Message.getFieldWithDefault(msg, 3, ""),
description: jspb.Message.getFieldWithDefault(msg, 4, ""),
itineraryData: (f = msg.getItineraryData()) && proto.ai_poi.chat.v1.ItineraryResponse.toObject(includeInstance, f),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.SaveItineraryRequest;
  return proto.ai_poi.chat.v1.SaveItineraryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.ai_poi.chat.v1.ItineraryResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.ItineraryResponse.deserializeBinaryFromReader);
      msg.setItineraryData(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.SaveItineraryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.SaveItineraryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getItineraryData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ai_poi.chat.v1.ItineraryResponse.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ItineraryResponse itinerary_data = 5;
 * @return {?proto.ai_poi.chat.v1.ItineraryResponse}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getItineraryData = function() {
  return /** @type{?proto.ai_poi.chat.v1.ItineraryResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.ItineraryResponse, 5));
};


/**
 * @param {?proto.ai_poi.chat.v1.ItineraryResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
*/
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setItineraryData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.clearItineraryData = function() {
  return this.setItineraryData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.hasItineraryData = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
*/
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.SaveItineraryRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.SaveItineraryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.SaveItineraryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itineraryId: jspb.Message.getFieldWithDefault(msg, 1, ""),
success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
message: jspb.Message.getFieldWithDefault(msg, 3, ""),
response: (f = msg.getResponse()) && proto.ai_poi.chat.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.SaveItineraryResponse;
  return proto.ai_poi.chat.v1.SaveItineraryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.SaveItineraryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItineraryId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.SaveItineraryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.SaveItineraryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItineraryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string itinerary_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.getItineraryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.setItineraryId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse} returns this
*/
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.SaveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.SaveItineraryResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetSavedItinerariesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetSavedItinerariesRequest;
  return proto.ai_poi.chat.v1.GetSavedItinerariesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetSavedItinerariesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} returns this
*/
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesRequest} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetSavedItinerariesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itinerariesList: jspb.Message.toObjectList(msg.getItinerariesList(),
    proto.ai_poi.chat.v1.UserSavedItinerary.toObject, includeInstance),
totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
response: (f = msg.getResponse()) && proto.ai_poi.chat.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetSavedItinerariesResponse;
  return proto.ai_poi.chat.v1.GetSavedItinerariesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.chat.v1.UserSavedItinerary;
      reader.readMessage(value,proto.ai_poi.chat.v1.UserSavedItinerary.deserializeBinaryFromReader);
      msg.addItineraries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetSavedItinerariesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItinerariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ai_poi.chat.v1.UserSavedItinerary.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserSavedItinerary itineraries = 1;
 * @return {!Array<!proto.ai_poi.chat.v1.UserSavedItinerary>}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.getItinerariesList = function() {
  return /** @type{!Array<!proto.ai_poi.chat.v1.UserSavedItinerary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai_poi.chat.v1.UserSavedItinerary, 1));
};


/**
 * @param {!Array<!proto.ai_poi.chat.v1.UserSavedItinerary>} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} returns this
*/
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.setItinerariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ai_poi.chat.v1.UserSavedItinerary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.addItineraries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ai_poi.chat.v1.UserSavedItinerary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.clearItinerariesList = function() {
  return this.setItinerariesList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} returns this
*/
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetSavedItinerariesResponse} returns this
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetSavedItinerariesResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.UserSavedItinerary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.UserSavedItinerary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.UserSavedItinerary.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
sessionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
title: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
itineraryData: jspb.Message.getFieldWithDefault(msg, 6, ""),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.UserSavedItinerary;
  return proto.ai_poi.chat.v1.UserSavedItinerary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.UserSavedItinerary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setItineraryData(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.UserSavedItinerary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.UserSavedItinerary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.UserSavedItinerary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItineraryData();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string session_id = 3;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string itinerary_data = 6;
 * @return {string}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getItineraryData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setItineraryData = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
*/
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
*/
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.UserSavedItinerary} returns this
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.UserSavedItinerary.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.RemoveItineraryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
itineraryId: jspb.Message.getFieldWithDefault(msg, 2, ""),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.RemoveItineraryRequest;
  return proto.ai_poi.chat.v1.RemoveItineraryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setItineraryId(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.RemoveItineraryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItineraryId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string itinerary_id = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.getItineraryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.setItineraryId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest} returns this
*/
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryRequest} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.RemoveItineraryRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.RemoveItineraryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
response: (f = msg.getResponse()) && proto.ai_poi.chat.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.RemoveItineraryResponse;
  return proto.ai_poi.chat.v1.RemoveItineraryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.RemoveItineraryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.RemoveItineraryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse} returns this
*/
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.RemoveItineraryResponse} returns this
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.RemoveItineraryResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetPOIDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
poiId: jspb.Message.getFieldWithDefault(msg, 1, ""),
includeReviews: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
includePhotos: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
request: (f = msg.getRequest()) && proto.ai_poi.chat.v1.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetPOIDetailsRequest;
  return proto.ai_poi.chat.v1.GetPOIDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoiId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeReviews(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePhotos(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseRequest;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetPOIDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoiId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeReviews();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludePhotos();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string poi_id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.getPoiId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.setPoiId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_reviews = 2;
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.getIncludeReviews = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.setIncludeReviews = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool include_photos = 3;
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.getIncludePhotos = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.setIncludePhotos = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.getRequest = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseRequest, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseRequest|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} returns this
*/
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsRequest} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetPOIDetailsRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.GetPOIDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
poi: (f = msg.getPoi()) && proto.ai_poi.chat.v1.POIDetailedInfo.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.ai_poi.chat.v1.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.GetPOIDetailsResponse;
  return proto.ai_poi.chat.v1.GetPOIDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai_poi.chat.v1.POIDetailedInfo;
      reader.readMessage(value,proto.ai_poi.chat.v1.POIDetailedInfo.deserializeBinaryFromReader);
      msg.setPoi(value);
      break;
    case 100:
      var value = new proto.ai_poi.chat.v1.BaseResponse;
      reader.readMessage(value,proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.GetPOIDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai_poi.chat.v1.POIDetailedInfo.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional POIDetailedInfo poi = 1;
 * @return {?proto.ai_poi.chat.v1.POIDetailedInfo}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.getPoi = function() {
  return /** @type{?proto.ai_poi.chat.v1.POIDetailedInfo} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.POIDetailedInfo, 1));
};


/**
 * @param {?proto.ai_poi.chat.v1.POIDetailedInfo|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} returns this
*/
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.setPoi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.clearPoi = function() {
  return this.setPoi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.hasPoi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.getResponse = function() {
  return /** @type{?proto.ai_poi.chat.v1.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai_poi.chat.v1.BaseResponse, 100));
};


/**
 * @param {?proto.ai_poi.chat.v1.BaseResponse|undefined} value
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} returns this
*/
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai_poi.chat.v1.GetPOIDetailsResponse} returns this
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai_poi.chat.v1.GetPOIDetailsResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai_poi.chat.v1.POIDetailedInfo.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.POIDetailedInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.POIDetailedInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.POIDetailedInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
category: jspb.Message.getFieldWithDefault(msg, 5, ""),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
rating: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
reviewCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
priceRange: jspb.Message.getFieldWithDefault(msg, 9, ""),
address: jspb.Message.getFieldWithDefault(msg, 10, ""),
phone: jspb.Message.getFieldWithDefault(msg, 11, ""),
website: jspb.Message.getFieldWithDefault(msg, 12, ""),
photosList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.POIDetailedInfo;
  return proto.ai_poi.chat.v1.POIDetailedInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.POIDetailedInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRating(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReviewCount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceRange(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotos(value);
      break;
    case 14:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.POIDetailedInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.POIDetailedInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.POIDetailedInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRating();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getReviewCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPriceRange();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string category = 5;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double rating = 7;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setRating = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 review_count = 8;
 * @return {number}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getReviewCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setReviewCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string price_range = 9;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getPriceRange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setPriceRange = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string address = 10;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string phone = 11;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string website = 12;
 * @return {string}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string photos = 13;
 * @return {!Array<string>}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getPhotosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * map<string, string> metadata = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ai_poi.chat.v1.POIDetailedInfo} returns this
 */
proto.ai_poi.chat.v1.POIDetailedInfo.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.BaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.BaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.BaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
downstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.BaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.BaseRequest;
  return proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.BaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.BaseRequest}
 */
proto.ai_poi.chat.v1.BaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.BaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.BaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDownstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
};


/**
 * optional string downstream = 998;
 * @return {string}
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.getDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.BaseRequest} returns this
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.BaseRequest} returns this
 */
proto.ai_poi.chat.v1.BaseRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai_poi.chat.v1.BaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai_poi.chat.v1.BaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.BaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
upstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, ""),
status: jspb.Message.getFieldWithDefault(msg, 1000, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.BaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai_poi.chat.v1.BaseResponse;
  return proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai_poi.chat.v1.BaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai_poi.chat.v1.BaseResponse}
 */
proto.ai_poi.chat.v1.BaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai_poi.chat.v1.BaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai_poi.chat.v1.BaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
};


/**
 * optional string upstream = 998;
 * @return {string}
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.getUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.BaseResponse} returns this
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.setUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.BaseResponse} returns this
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};


/**
 * optional string status = 1000;
 * @return {string}
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai_poi.chat.v1.BaseResponse} returns this
 */
proto.ai_poi.chat.v1.BaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


/**
 * @enum {number}
 */
proto.ai_poi.chat.v1.ChatContextType = {
  CHAT_CONTEXT_TYPE_UNSPECIFIED: 0,
  CHAT_CONTEXT_TYPE_GENERAL: 1,
  CHAT_CONTEXT_TYPE_CITY_EXPLORATION: 2,
  CHAT_CONTEXT_TYPE_ITINERARY_PLANNING: 3,
  CHAT_CONTEXT_TYPE_RESTAURANT_RECOMMENDATION: 4,
  CHAT_CONTEXT_TYPE_ACTIVITY_SUGGESTION: 5
};

goog.object.extend(exports, proto.ai_poi.chat.v1);
