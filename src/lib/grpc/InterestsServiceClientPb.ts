/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.interests.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: interests.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as interests_pb from './interests_pb'; // proto import: "interests.proto"


export class InterestsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAllInterests = new grpcWeb.MethodDescriptor(
    '/ai_poi.interests.v1.InterestsService/GetAllInterests',
    grpcWeb.MethodType.UNARY,
    interests_pb.GetAllInterestsRequest,
    interests_pb.GetAllInterestsResponse,
    (request: interests_pb.GetAllInterestsRequest) => {
      return request.serializeBinary();
    },
    interests_pb.GetAllInterestsResponse.deserializeBinary
  );

  getAllInterests(
    request: interests_pb.GetAllInterestsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<interests_pb.GetAllInterestsResponse>;

  getAllInterests(
    request: interests_pb.GetAllInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interests_pb.GetAllInterestsResponse) => void): grpcWeb.ClientReadableStream<interests_pb.GetAllInterestsResponse>;

  getAllInterests(
    request: interests_pb.GetAllInterestsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interests_pb.GetAllInterestsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.interests.v1.InterestsService/GetAllInterests',
        request,
        metadata || {},
        this.methodDescriptorGetAllInterests,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.interests.v1.InterestsService/GetAllInterests',
    request,
    metadata || {},
    this.methodDescriptorGetAllInterests);
  }

  methodDescriptorCreateInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.interests.v1.InterestsService/CreateInterest',
    grpcWeb.MethodType.UNARY,
    interests_pb.CreateInterestRequest,
    interests_pb.CreateInterestResponse,
    (request: interests_pb.CreateInterestRequest) => {
      return request.serializeBinary();
    },
    interests_pb.CreateInterestResponse.deserializeBinary
  );

  createInterest(
    request: interests_pb.CreateInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<interests_pb.CreateInterestResponse>;

  createInterest(
    request: interests_pb.CreateInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interests_pb.CreateInterestResponse) => void): grpcWeb.ClientReadableStream<interests_pb.CreateInterestResponse>;

  createInterest(
    request: interests_pb.CreateInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interests_pb.CreateInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.interests.v1.InterestsService/CreateInterest',
        request,
        metadata || {},
        this.methodDescriptorCreateInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.interests.v1.InterestsService/CreateInterest',
    request,
    metadata || {},
    this.methodDescriptorCreateInterest);
  }

  methodDescriptorUpdateInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.interests.v1.InterestsService/UpdateInterest',
    grpcWeb.MethodType.UNARY,
    interests_pb.UpdateInterestRequest,
    interests_pb.UpdateInterestResponse,
    (request: interests_pb.UpdateInterestRequest) => {
      return request.serializeBinary();
    },
    interests_pb.UpdateInterestResponse.deserializeBinary
  );

  updateInterest(
    request: interests_pb.UpdateInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<interests_pb.UpdateInterestResponse>;

  updateInterest(
    request: interests_pb.UpdateInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interests_pb.UpdateInterestResponse) => void): grpcWeb.ClientReadableStream<interests_pb.UpdateInterestResponse>;

  updateInterest(
    request: interests_pb.UpdateInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interests_pb.UpdateInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.interests.v1.InterestsService/UpdateInterest',
        request,
        metadata || {},
        this.methodDescriptorUpdateInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.interests.v1.InterestsService/UpdateInterest',
    request,
    metadata || {},
    this.methodDescriptorUpdateInterest);
  }

  methodDescriptorRemoveInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.interests.v1.InterestsService/RemoveInterest',
    grpcWeb.MethodType.UNARY,
    interests_pb.RemoveInterestRequest,
    interests_pb.RemoveInterestResponse,
    (request: interests_pb.RemoveInterestRequest) => {
      return request.serializeBinary();
    },
    interests_pb.RemoveInterestResponse.deserializeBinary
  );

  removeInterest(
    request: interests_pb.RemoveInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<interests_pb.RemoveInterestResponse>;

  removeInterest(
    request: interests_pb.RemoveInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interests_pb.RemoveInterestResponse) => void): grpcWeb.ClientReadableStream<interests_pb.RemoveInterestResponse>;

  removeInterest(
    request: interests_pb.RemoveInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interests_pb.RemoveInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.interests.v1.InterestsService/RemoveInterest',
        request,
        metadata || {},
        this.methodDescriptorRemoveInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.interests.v1.InterestsService/RemoveInterest',
    request,
    metadata || {},
    this.methodDescriptorRemoveInterest);
  }

}

