/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: ai_poi_service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var common_pb = require('./common_pb.js')
const proto = {};
proto.ai_poi = {};
proto.ai_poi.v1 = require('./ai_poi_service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.v1.AiPoiServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.v1.AiPoiServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.common.v1.HealthCheckRequest,
 *   !proto.ai_poi.common.v1.HealthCheckResponse>}
 */
const methodDescriptor_AiPoiService_HealthCheck = new grpc.web.MethodDescriptor(
  '/ai_poi.v1.AiPoiService/HealthCheck',
  grpc.web.MethodType.UNARY,
  common_pb.HealthCheckRequest,
  common_pb.HealthCheckResponse,
  /**
   * @param {!proto.ai_poi.common.v1.HealthCheckRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_pb.HealthCheckResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.common.v1.HealthCheckRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.common.v1.HealthCheckResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.common.v1.HealthCheckResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.v1.AiPoiServiceClient.prototype.healthCheck =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/HealthCheck',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_HealthCheck,
      callback);
};


/**
 * @param {!proto.ai_poi.common.v1.HealthCheckRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.common.v1.HealthCheckResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.v1.AiPoiServicePromiseClient.prototype.healthCheck =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/HealthCheck',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_HealthCheck);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.v1.GetServiceInfoRequest,
 *   !proto.ai_poi.v1.GetServiceInfoResponse>}
 */
const methodDescriptor_AiPoiService_GetServiceInfo = new grpc.web.MethodDescriptor(
  '/ai_poi.v1.AiPoiService/GetServiceInfo',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.v1.GetServiceInfoRequest,
  proto.ai_poi.v1.GetServiceInfoResponse,
  /**
   * @param {!proto.ai_poi.v1.GetServiceInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.v1.GetServiceInfoResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.v1.GetServiceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.v1.GetServiceInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.v1.GetServiceInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.v1.AiPoiServiceClient.prototype.getServiceInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/GetServiceInfo',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_GetServiceInfo,
      callback);
};


/**
 * @param {!proto.ai_poi.v1.GetServiceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.v1.GetServiceInfoResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.v1.AiPoiServicePromiseClient.prototype.getServiceInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/GetServiceInfo',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_GetServiceInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.v1.GetFeatureFlagsRequest,
 *   !proto.ai_poi.v1.GetFeatureFlagsResponse>}
 */
const methodDescriptor_AiPoiService_GetFeatureFlags = new grpc.web.MethodDescriptor(
  '/ai_poi.v1.AiPoiService/GetFeatureFlags',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.v1.GetFeatureFlagsRequest,
  proto.ai_poi.v1.GetFeatureFlagsResponse,
  /**
   * @param {!proto.ai_poi.v1.GetFeatureFlagsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.v1.GetFeatureFlagsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.v1.GetFeatureFlagsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.v1.GetFeatureFlagsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.v1.GetFeatureFlagsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.v1.AiPoiServiceClient.prototype.getFeatureFlags =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/GetFeatureFlags',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_GetFeatureFlags,
      callback);
};


/**
 * @param {!proto.ai_poi.v1.GetFeatureFlagsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.v1.GetFeatureFlagsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.v1.AiPoiServicePromiseClient.prototype.getFeatureFlags =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.v1.AiPoiService/GetFeatureFlags',
      request,
      metadata || {},
      methodDescriptor_AiPoiService_GetFeatureFlags);
};


module.exports = proto.ai_poi.v1;

