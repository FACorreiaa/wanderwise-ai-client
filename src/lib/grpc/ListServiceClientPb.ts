/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.list.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: list.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as list_pb from './list_pb'; // proto import: "list.proto"


export class ListServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/CreateList',
    grpcWeb.MethodType.UNARY,
    list_pb.CreateListRequest,
    list_pb.CreateListResponse,
    (request: list_pb.CreateListRequest) => {
      return request.serializeBinary();
    },
    list_pb.CreateListResponse.deserializeBinary
  );

  createList(
    request: list_pb.CreateListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.CreateListResponse>;

  createList(
    request: list_pb.CreateListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.CreateListResponse) => void): grpcWeb.ClientReadableStream<list_pb.CreateListResponse>;

  createList(
    request: list_pb.CreateListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.CreateListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/CreateList',
        request,
        metadata || {},
        this.methodDescriptorCreateList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/CreateList',
    request,
    metadata || {},
    this.methodDescriptorCreateList);
  }

  methodDescriptorGetLists = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetLists',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListsRequest,
    list_pb.GetListsResponse,
    (request: list_pb.GetListsRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListsResponse.deserializeBinary
  );

  getLists(
    request: list_pb.GetListsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListsResponse>;

  getLists(
    request: list_pb.GetListsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListsResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListsResponse>;

  getLists(
    request: list_pb.GetListsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetLists',
        request,
        metadata || {},
        this.methodDescriptorGetLists,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetLists',
    request,
    metadata || {},
    this.methodDescriptorGetLists);
  }

  methodDescriptorGetList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetList',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListRequest,
    list_pb.GetListResponse,
    (request: list_pb.GetListRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListResponse.deserializeBinary
  );

  getList(
    request: list_pb.GetListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListResponse>;

  getList(
    request: list_pb.GetListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListResponse>;

  getList(
    request: list_pb.GetListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetList',
        request,
        metadata || {},
        this.methodDescriptorGetList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetList',
    request,
    metadata || {},
    this.methodDescriptorGetList);
  }

  methodDescriptorUpdateList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/UpdateList',
    grpcWeb.MethodType.UNARY,
    list_pb.UpdateListRequest,
    list_pb.UpdateListResponse,
    (request: list_pb.UpdateListRequest) => {
      return request.serializeBinary();
    },
    list_pb.UpdateListResponse.deserializeBinary
  );

  updateList(
    request: list_pb.UpdateListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.UpdateListResponse>;

  updateList(
    request: list_pb.UpdateListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.UpdateListResponse) => void): grpcWeb.ClientReadableStream<list_pb.UpdateListResponse>;

  updateList(
    request: list_pb.UpdateListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.UpdateListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/UpdateList',
        request,
        metadata || {},
        this.methodDescriptorUpdateList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/UpdateList',
    request,
    metadata || {},
    this.methodDescriptorUpdateList);
  }

  methodDescriptorDeleteList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/DeleteList',
    grpcWeb.MethodType.UNARY,
    list_pb.DeleteListRequest,
    list_pb.DeleteListResponse,
    (request: list_pb.DeleteListRequest) => {
      return request.serializeBinary();
    },
    list_pb.DeleteListResponse.deserializeBinary
  );

  deleteList(
    request: list_pb.DeleteListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.DeleteListResponse>;

  deleteList(
    request: list_pb.DeleteListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.DeleteListResponse) => void): grpcWeb.ClientReadableStream<list_pb.DeleteListResponse>;

  deleteList(
    request: list_pb.DeleteListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.DeleteListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/DeleteList',
        request,
        metadata || {},
        this.methodDescriptorDeleteList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/DeleteList',
    request,
    metadata || {},
    this.methodDescriptorDeleteList);
  }

  methodDescriptorCreateItinerary = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/CreateItinerary',
    grpcWeb.MethodType.UNARY,
    list_pb.CreateItineraryRequest,
    list_pb.CreateItineraryResponse,
    (request: list_pb.CreateItineraryRequest) => {
      return request.serializeBinary();
    },
    list_pb.CreateItineraryResponse.deserializeBinary
  );

  createItinerary(
    request: list_pb.CreateItineraryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.CreateItineraryResponse>;

  createItinerary(
    request: list_pb.CreateItineraryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.CreateItineraryResponse) => void): grpcWeb.ClientReadableStream<list_pb.CreateItineraryResponse>;

  createItinerary(
    request: list_pb.CreateItineraryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.CreateItineraryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/CreateItinerary',
        request,
        metadata || {},
        this.methodDescriptorCreateItinerary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/CreateItinerary',
    request,
    metadata || {},
    this.methodDescriptorCreateItinerary);
  }

  methodDescriptorAddListItem = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/AddListItem',
    grpcWeb.MethodType.UNARY,
    list_pb.AddListItemRequest,
    list_pb.AddListItemResponse,
    (request: list_pb.AddListItemRequest) => {
      return request.serializeBinary();
    },
    list_pb.AddListItemResponse.deserializeBinary
  );

  addListItem(
    request: list_pb.AddListItemRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.AddListItemResponse>;

  addListItem(
    request: list_pb.AddListItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.AddListItemResponse) => void): grpcWeb.ClientReadableStream<list_pb.AddListItemResponse>;

  addListItem(
    request: list_pb.AddListItemRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.AddListItemResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/AddListItem',
        request,
        metadata || {},
        this.methodDescriptorAddListItem,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/AddListItem',
    request,
    metadata || {},
    this.methodDescriptorAddListItem);
  }

  methodDescriptorUpdateListItem = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/UpdateListItem',
    grpcWeb.MethodType.UNARY,
    list_pb.UpdateListItemRequest,
    list_pb.UpdateListItemResponse,
    (request: list_pb.UpdateListItemRequest) => {
      return request.serializeBinary();
    },
    list_pb.UpdateListItemResponse.deserializeBinary
  );

  updateListItem(
    request: list_pb.UpdateListItemRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.UpdateListItemResponse>;

  updateListItem(
    request: list_pb.UpdateListItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.UpdateListItemResponse) => void): grpcWeb.ClientReadableStream<list_pb.UpdateListItemResponse>;

  updateListItem(
    request: list_pb.UpdateListItemRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.UpdateListItemResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/UpdateListItem',
        request,
        metadata || {},
        this.methodDescriptorUpdateListItem,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/UpdateListItem',
    request,
    metadata || {},
    this.methodDescriptorUpdateListItem);
  }

  methodDescriptorRemoveListItem = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/RemoveListItem',
    grpcWeb.MethodType.UNARY,
    list_pb.RemoveListItemRequest,
    list_pb.RemoveListItemResponse,
    (request: list_pb.RemoveListItemRequest) => {
      return request.serializeBinary();
    },
    list_pb.RemoveListItemResponse.deserializeBinary
  );

  removeListItem(
    request: list_pb.RemoveListItemRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.RemoveListItemResponse>;

  removeListItem(
    request: list_pb.RemoveListItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.RemoveListItemResponse) => void): grpcWeb.ClientReadableStream<list_pb.RemoveListItemResponse>;

  removeListItem(
    request: list_pb.RemoveListItemRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.RemoveListItemResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/RemoveListItem',
        request,
        metadata || {},
        this.methodDescriptorRemoveListItem,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/RemoveListItem',
    request,
    metadata || {},
    this.methodDescriptorRemoveListItem);
  }

  methodDescriptorGetListItems = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetListItems',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListItemsRequest,
    list_pb.GetListItemsResponse,
    (request: list_pb.GetListItemsRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListItemsResponse.deserializeBinary
  );

  getListItems(
    request: list_pb.GetListItemsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListItemsResponse>;

  getListItems(
    request: list_pb.GetListItemsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListItemsResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListItemsResponse>;

  getListItems(
    request: list_pb.GetListItemsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListItemsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetListItems',
        request,
        metadata || {},
        this.methodDescriptorGetListItems,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetListItems',
    request,
    metadata || {},
    this.methodDescriptorGetListItems);
  }

  methodDescriptorGetListRestaurants = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetListRestaurants',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListRestaurantsRequest,
    list_pb.GetListRestaurantsResponse,
    (request: list_pb.GetListRestaurantsRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListRestaurantsResponse.deserializeBinary
  );

  getListRestaurants(
    request: list_pb.GetListRestaurantsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListRestaurantsResponse>;

  getListRestaurants(
    request: list_pb.GetListRestaurantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListRestaurantsResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListRestaurantsResponse>;

  getListRestaurants(
    request: list_pb.GetListRestaurantsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListRestaurantsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetListRestaurants',
        request,
        metadata || {},
        this.methodDescriptorGetListRestaurants,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetListRestaurants',
    request,
    metadata || {},
    this.methodDescriptorGetListRestaurants);
  }

  methodDescriptorGetListHotels = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetListHotels',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListHotelsRequest,
    list_pb.GetListHotelsResponse,
    (request: list_pb.GetListHotelsRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListHotelsResponse.deserializeBinary
  );

  getListHotels(
    request: list_pb.GetListHotelsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListHotelsResponse>;

  getListHotels(
    request: list_pb.GetListHotelsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListHotelsResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListHotelsResponse>;

  getListHotels(
    request: list_pb.GetListHotelsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListHotelsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetListHotels',
        request,
        metadata || {},
        this.methodDescriptorGetListHotels,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetListHotels',
    request,
    metadata || {},
    this.methodDescriptorGetListHotels);
  }

  methodDescriptorGetListItineraries = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetListItineraries',
    grpcWeb.MethodType.UNARY,
    list_pb.GetListItinerariesRequest,
    list_pb.GetListItinerariesResponse,
    (request: list_pb.GetListItinerariesRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetListItinerariesResponse.deserializeBinary
  );

  getListItineraries(
    request: list_pb.GetListItinerariesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetListItinerariesResponse>;

  getListItineraries(
    request: list_pb.GetListItinerariesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetListItinerariesResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetListItinerariesResponse>;

  getListItineraries(
    request: list_pb.GetListItinerariesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetListItinerariesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetListItineraries',
        request,
        metadata || {},
        this.methodDescriptorGetListItineraries,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetListItineraries',
    request,
    metadata || {},
    this.methodDescriptorGetListItineraries);
  }

  methodDescriptorSavePublicList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/SavePublicList',
    grpcWeb.MethodType.UNARY,
    list_pb.SavePublicListRequest,
    list_pb.SavePublicListResponse,
    (request: list_pb.SavePublicListRequest) => {
      return request.serializeBinary();
    },
    list_pb.SavePublicListResponse.deserializeBinary
  );

  savePublicList(
    request: list_pb.SavePublicListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.SavePublicListResponse>;

  savePublicList(
    request: list_pb.SavePublicListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.SavePublicListResponse) => void): grpcWeb.ClientReadableStream<list_pb.SavePublicListResponse>;

  savePublicList(
    request: list_pb.SavePublicListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.SavePublicListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/SavePublicList',
        request,
        metadata || {},
        this.methodDescriptorSavePublicList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/SavePublicList',
    request,
    metadata || {},
    this.methodDescriptorSavePublicList);
  }

  methodDescriptorUnsaveList = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/UnsaveList',
    grpcWeb.MethodType.UNARY,
    list_pb.UnsaveListRequest,
    list_pb.UnsaveListResponse,
    (request: list_pb.UnsaveListRequest) => {
      return request.serializeBinary();
    },
    list_pb.UnsaveListResponse.deserializeBinary
  );

  unsaveList(
    request: list_pb.UnsaveListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.UnsaveListResponse>;

  unsaveList(
    request: list_pb.UnsaveListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.UnsaveListResponse) => void): grpcWeb.ClientReadableStream<list_pb.UnsaveListResponse>;

  unsaveList(
    request: list_pb.UnsaveListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.UnsaveListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/UnsaveList',
        request,
        metadata || {},
        this.methodDescriptorUnsaveList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/UnsaveList',
    request,
    metadata || {},
    this.methodDescriptorUnsaveList);
  }

  methodDescriptorGetSavedLists = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/GetSavedLists',
    grpcWeb.MethodType.UNARY,
    list_pb.GetSavedListsRequest,
    list_pb.GetSavedListsResponse,
    (request: list_pb.GetSavedListsRequest) => {
      return request.serializeBinary();
    },
    list_pb.GetSavedListsResponse.deserializeBinary
  );

  getSavedLists(
    request: list_pb.GetSavedListsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.GetSavedListsResponse>;

  getSavedLists(
    request: list_pb.GetSavedListsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.GetSavedListsResponse) => void): grpcWeb.ClientReadableStream<list_pb.GetSavedListsResponse>;

  getSavedLists(
    request: list_pb.GetSavedListsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.GetSavedListsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/GetSavedLists',
        request,
        metadata || {},
        this.methodDescriptorGetSavedLists,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/GetSavedLists',
    request,
    metadata || {},
    this.methodDescriptorGetSavedLists);
  }

  methodDescriptorSearchPublicLists = new grpcWeb.MethodDescriptor(
    '/ai_poi.list.v1.ListService/SearchPublicLists',
    grpcWeb.MethodType.UNARY,
    list_pb.SearchPublicListsRequest,
    list_pb.SearchPublicListsResponse,
    (request: list_pb.SearchPublicListsRequest) => {
      return request.serializeBinary();
    },
    list_pb.SearchPublicListsResponse.deserializeBinary
  );

  searchPublicLists(
    request: list_pb.SearchPublicListsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<list_pb.SearchPublicListsResponse>;

  searchPublicLists(
    request: list_pb.SearchPublicListsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: list_pb.SearchPublicListsResponse) => void): grpcWeb.ClientReadableStream<list_pb.SearchPublicListsResponse>;

  searchPublicLists(
    request: list_pb.SearchPublicListsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: list_pb.SearchPublicListsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.list.v1.ListService/SearchPublicLists',
        request,
        metadata || {},
        this.methodDescriptorSearchPublicLists,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.list.v1.ListService/SearchPublicLists',
    request,
    metadata || {},
    this.methodDescriptorSearchPublicLists);
  }

}

