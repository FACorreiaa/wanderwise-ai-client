/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.chat.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: chat.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as chat_pb from './chat_pb'; // proto import: "chat.proto"


export class ChatServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorStartChatStream = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/StartChatStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    chat_pb.StartChatRequest,
    chat_pb.ChatEvent,
    (request: chat_pb.StartChatRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatEvent.deserializeBinary
  );

  startChatStream(
    request: chat_pb.StartChatRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<chat_pb.ChatEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/ai_poi.chat.v1.ChatService/StartChatStream',
      request,
      metadata || {},
      this.methodDescriptorStartChatStream);
  }

  methodDescriptorContinueChatStream = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/ContinueChatStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    chat_pb.ContinueChatRequest,
    chat_pb.ChatEvent,
    (request: chat_pb.ContinueChatRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatEvent.deserializeBinary
  );

  continueChatStream(
    request: chat_pb.ContinueChatRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<chat_pb.ChatEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/ai_poi.chat.v1.ChatService/ContinueChatStream',
      request,
      metadata || {},
      this.methodDescriptorContinueChatStream);
  }

  methodDescriptorFreeChatStream = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/FreeChatStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    chat_pb.FreeChatRequest,
    chat_pb.ChatEvent,
    (request: chat_pb.FreeChatRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatEvent.deserializeBinary
  );

  freeChatStream(
    request: chat_pb.FreeChatRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<chat_pb.ChatEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/ai_poi.chat.v1.ChatService/FreeChatStream',
      request,
      metadata || {},
      this.methodDescriptorFreeChatStream);
  }

  methodDescriptorGetChatSessions = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/GetChatSessions',
    grpcWeb.MethodType.UNARY,
    chat_pb.GetChatSessionsRequest,
    chat_pb.GetChatSessionsResponse,
    (request: chat_pb.GetChatSessionsRequest) => {
      return request.serializeBinary();
    },
    chat_pb.GetChatSessionsResponse.deserializeBinary
  );

  getChatSessions(
    request: chat_pb.GetChatSessionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<chat_pb.GetChatSessionsResponse>;

  getChatSessions(
    request: chat_pb.GetChatSessionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.GetChatSessionsResponse) => void): grpcWeb.ClientReadableStream<chat_pb.GetChatSessionsResponse>;

  getChatSessions(
    request: chat_pb.GetChatSessionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.GetChatSessionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.chat.v1.ChatService/GetChatSessions',
        request,
        metadata || {},
        this.methodDescriptorGetChatSessions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetChatSessions',
    request,
    metadata || {},
    this.methodDescriptorGetChatSessions);
  }

  methodDescriptorSaveItinerary = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/SaveItinerary',
    grpcWeb.MethodType.UNARY,
    chat_pb.SaveItineraryRequest,
    chat_pb.SaveItineraryResponse,
    (request: chat_pb.SaveItineraryRequest) => {
      return request.serializeBinary();
    },
    chat_pb.SaveItineraryResponse.deserializeBinary
  );

  saveItinerary(
    request: chat_pb.SaveItineraryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<chat_pb.SaveItineraryResponse>;

  saveItinerary(
    request: chat_pb.SaveItineraryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.SaveItineraryResponse) => void): grpcWeb.ClientReadableStream<chat_pb.SaveItineraryResponse>;

  saveItinerary(
    request: chat_pb.SaveItineraryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.SaveItineraryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.chat.v1.ChatService/SaveItinerary',
        request,
        metadata || {},
        this.methodDescriptorSaveItinerary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.chat.v1.ChatService/SaveItinerary',
    request,
    metadata || {},
    this.methodDescriptorSaveItinerary);
  }

  methodDescriptorGetSavedItineraries = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
    grpcWeb.MethodType.UNARY,
    chat_pb.GetSavedItinerariesRequest,
    chat_pb.GetSavedItinerariesResponse,
    (request: chat_pb.GetSavedItinerariesRequest) => {
      return request.serializeBinary();
    },
    chat_pb.GetSavedItinerariesResponse.deserializeBinary
  );

  getSavedItineraries(
    request: chat_pb.GetSavedItinerariesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<chat_pb.GetSavedItinerariesResponse>;

  getSavedItineraries(
    request: chat_pb.GetSavedItinerariesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.GetSavedItinerariesResponse) => void): grpcWeb.ClientReadableStream<chat_pb.GetSavedItinerariesResponse>;

  getSavedItineraries(
    request: chat_pb.GetSavedItinerariesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.GetSavedItinerariesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
        request,
        metadata || {},
        this.methodDescriptorGetSavedItineraries,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetSavedItineraries',
    request,
    metadata || {},
    this.methodDescriptorGetSavedItineraries);
  }

  methodDescriptorRemoveItinerary = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/RemoveItinerary',
    grpcWeb.MethodType.UNARY,
    chat_pb.RemoveItineraryRequest,
    chat_pb.RemoveItineraryResponse,
    (request: chat_pb.RemoveItineraryRequest) => {
      return request.serializeBinary();
    },
    chat_pb.RemoveItineraryResponse.deserializeBinary
  );

  removeItinerary(
    request: chat_pb.RemoveItineraryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<chat_pb.RemoveItineraryResponse>;

  removeItinerary(
    request: chat_pb.RemoveItineraryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.RemoveItineraryResponse) => void): grpcWeb.ClientReadableStream<chat_pb.RemoveItineraryResponse>;

  removeItinerary(
    request: chat_pb.RemoveItineraryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.RemoveItineraryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.chat.v1.ChatService/RemoveItinerary',
        request,
        metadata || {},
        this.methodDescriptorRemoveItinerary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.chat.v1.ChatService/RemoveItinerary',
    request,
    metadata || {},
    this.methodDescriptorRemoveItinerary);
  }

  methodDescriptorGetPOIDetails = new grpcWeb.MethodDescriptor(
    '/ai_poi.chat.v1.ChatService/GetPOIDetails',
    grpcWeb.MethodType.UNARY,
    chat_pb.GetPOIDetailsRequest,
    chat_pb.GetPOIDetailsResponse,
    (request: chat_pb.GetPOIDetailsRequest) => {
      return request.serializeBinary();
    },
    chat_pb.GetPOIDetailsResponse.deserializeBinary
  );

  getPOIDetails(
    request: chat_pb.GetPOIDetailsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<chat_pb.GetPOIDetailsResponse>;

  getPOIDetails(
    request: chat_pb.GetPOIDetailsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.GetPOIDetailsResponse) => void): grpcWeb.ClientReadableStream<chat_pb.GetPOIDetailsResponse>;

  getPOIDetails(
    request: chat_pb.GetPOIDetailsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.GetPOIDetailsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.chat.v1.ChatService/GetPOIDetails',
        request,
        metadata || {},
        this.methodDescriptorGetPOIDetails,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.chat.v1.ChatService/GetPOIDetails',
    request,
    metadata || {},
    this.methodDescriptorGetPOIDetails);
  }

}

