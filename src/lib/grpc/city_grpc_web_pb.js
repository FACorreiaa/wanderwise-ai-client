/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.city.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: city.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.ai_poi = {};
proto.ai_poi.city = {};
proto.ai_poi.city.v1 = require('./city_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.city.v1.CityServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai_poi.city.v1.CityServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.city.v1.GetCitiesRequest,
 *   !proto.ai_poi.city.v1.GetCitiesResponse>}
 */
const methodDescriptor_CityService_GetCities = new grpc.web.MethodDescriptor(
  '/ai_poi.city.v1.CityService/GetCities',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.city.v1.GetCitiesRequest,
  proto.ai_poi.city.v1.GetCitiesResponse,
  /**
   * @param {!proto.ai_poi.city.v1.GetCitiesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.city.v1.GetCitiesResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.city.v1.GetCitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.city.v1.GetCitiesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.city.v1.GetCitiesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.city.v1.CityServiceClient.prototype.getCities =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCities',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCities,
      callback);
};


/**
 * @param {!proto.ai_poi.city.v1.GetCitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.city.v1.GetCitiesResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.city.v1.CityServicePromiseClient.prototype.getCities =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCities',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCities);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.city.v1.GetCityRequest,
 *   !proto.ai_poi.city.v1.GetCityResponse>}
 */
const methodDescriptor_CityService_GetCity = new grpc.web.MethodDescriptor(
  '/ai_poi.city.v1.CityService/GetCity',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.city.v1.GetCityRequest,
  proto.ai_poi.city.v1.GetCityResponse,
  /**
   * @param {!proto.ai_poi.city.v1.GetCityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.city.v1.GetCityResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.city.v1.GetCityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.city.v1.GetCityResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.city.v1.GetCityResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.city.v1.CityServiceClient.prototype.getCity =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCity',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCity,
      callback);
};


/**
 * @param {!proto.ai_poi.city.v1.GetCityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.city.v1.GetCityResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.city.v1.CityServicePromiseClient.prototype.getCity =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCity',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCity);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.city.v1.SearchCitiesRequest,
 *   !proto.ai_poi.city.v1.SearchCitiesResponse>}
 */
const methodDescriptor_CityService_SearchCities = new grpc.web.MethodDescriptor(
  '/ai_poi.city.v1.CityService/SearchCities',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.city.v1.SearchCitiesRequest,
  proto.ai_poi.city.v1.SearchCitiesResponse,
  /**
   * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.city.v1.SearchCitiesResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.city.v1.SearchCitiesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.city.v1.SearchCitiesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.city.v1.CityServiceClient.prototype.searchCities =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/SearchCities',
      request,
      metadata || {},
      methodDescriptor_CityService_SearchCities,
      callback);
};


/**
 * @param {!proto.ai_poi.city.v1.SearchCitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.city.v1.SearchCitiesResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.city.v1.CityServicePromiseClient.prototype.searchCities =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/SearchCities',
      request,
      metadata || {},
      methodDescriptor_CityService_SearchCities);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai_poi.city.v1.GetCityStatisticsRequest,
 *   !proto.ai_poi.city.v1.GetCityStatisticsResponse>}
 */
const methodDescriptor_CityService_GetCityStatistics = new grpc.web.MethodDescriptor(
  '/ai_poi.city.v1.CityService/GetCityStatistics',
  grpc.web.MethodType.UNARY,
  proto.ai_poi.city.v1.GetCityStatisticsRequest,
  proto.ai_poi.city.v1.GetCityStatisticsResponse,
  /**
   * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ai_poi.city.v1.GetCityStatisticsResponse.deserializeBinary
);


/**
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai_poi.city.v1.GetCityStatisticsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai_poi.city.v1.GetCityStatisticsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai_poi.city.v1.CityServiceClient.prototype.getCityStatistics =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCityStatistics',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCityStatistics,
      callback);
};


/**
 * @param {!proto.ai_poi.city.v1.GetCityStatisticsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai_poi.city.v1.GetCityStatisticsResponse>}
 *     Promise that resolves to the response
 */
proto.ai_poi.city.v1.CityServicePromiseClient.prototype.getCityStatistics =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCityStatistics',
      request,
      metadata || {},
      methodDescriptor_CityService_GetCityStatistics);
};


module.exports = proto.ai_poi.city.v1;

