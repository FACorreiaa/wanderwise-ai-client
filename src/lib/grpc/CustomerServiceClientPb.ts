/**
 * @fileoverview gRPC-Web generated client stub for highlyregarded.customer
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: customer.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as customer_pb from './customer_pb'; // proto import: "customer.proto"


export class CustomerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetCustomer = new grpcWeb.MethodDescriptor(
    '/highlyregarded.customer.Customer/GetCustomer',
    grpcWeb.MethodType.UNARY,
    customer_pb.GetCustomerReq,
    customer_pb.GetCustomerRes,
    (request: customer_pb.GetCustomerReq) => {
      return request.serializeBinary();
    },
    customer_pb.GetCustomerRes.deserializeBinary
  );

  getCustomer(
    request: customer_pb.GetCustomerReq,
    metadata?: grpcWeb.Metadata | null): Promise<customer_pb.GetCustomerRes>;

  getCustomer(
    request: customer_pb.GetCustomerReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: customer_pb.GetCustomerRes) => void): grpcWeb.ClientReadableStream<customer_pb.GetCustomerRes>;

  getCustomer(
    request: customer_pb.GetCustomerReq,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: customer_pb.GetCustomerRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/highlyregarded.customer.Customer/GetCustomer',
        request,
        metadata || {},
        this.methodDescriptorGetCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/highlyregarded.customer.Customer/GetCustomer',
    request,
    metadata || {},
    this.methodDescriptorGetCustomer);
  }

  methodDescriptorCreateCustomer = new grpcWeb.MethodDescriptor(
    '/highlyregarded.customer.Customer/CreateCustomer',
    grpcWeb.MethodType.UNARY,
    customer_pb.CreateCustomerReq,
    customer_pb.CreateCustomerRes,
    (request: customer_pb.CreateCustomerReq) => {
      return request.serializeBinary();
    },
    customer_pb.CreateCustomerRes.deserializeBinary
  );

  createCustomer(
    request: customer_pb.CreateCustomerReq,
    metadata?: grpcWeb.Metadata | null): Promise<customer_pb.CreateCustomerRes>;

  createCustomer(
    request: customer_pb.CreateCustomerReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: customer_pb.CreateCustomerRes) => void): grpcWeb.ClientReadableStream<customer_pb.CreateCustomerRes>;

  createCustomer(
    request: customer_pb.CreateCustomerReq,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: customer_pb.CreateCustomerRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/highlyregarded.customer.Customer/CreateCustomer',
        request,
        metadata || {},
        this.methodDescriptorCreateCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/highlyregarded.customer.Customer/CreateCustomer',
    request,
    metadata || {},
    this.methodDescriptorCreateCustomer);
  }

  methodDescriptorUpdateCustomer = new grpcWeb.MethodDescriptor(
    '/highlyregarded.customer.Customer/UpdateCustomer',
    grpcWeb.MethodType.UNARY,
    customer_pb.UpdateCustomerReq,
    customer_pb.UpdateCustomerRes,
    (request: customer_pb.UpdateCustomerReq) => {
      return request.serializeBinary();
    },
    customer_pb.UpdateCustomerRes.deserializeBinary
  );

  updateCustomer(
    request: customer_pb.UpdateCustomerReq,
    metadata?: grpcWeb.Metadata | null): Promise<customer_pb.UpdateCustomerRes>;

  updateCustomer(
    request: customer_pb.UpdateCustomerReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: customer_pb.UpdateCustomerRes) => void): grpcWeb.ClientReadableStream<customer_pb.UpdateCustomerRes>;

  updateCustomer(
    request: customer_pb.UpdateCustomerReq,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: customer_pb.UpdateCustomerRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/highlyregarded.customer.Customer/UpdateCustomer',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/highlyregarded.customer.Customer/UpdateCustomer',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomer);
  }

  methodDescriptorDeleteCustomer = new grpcWeb.MethodDescriptor(
    '/highlyregarded.customer.Customer/DeleteCustomer',
    grpcWeb.MethodType.UNARY,
    customer_pb.DeleteCustomerReq,
    customer_pb.NilRes,
    (request: customer_pb.DeleteCustomerReq) => {
      return request.serializeBinary();
    },
    customer_pb.NilRes.deserializeBinary
  );

  deleteCustomer(
    request: customer_pb.DeleteCustomerReq,
    metadata?: grpcWeb.Metadata | null): Promise<customer_pb.NilRes>;

  deleteCustomer(
    request: customer_pb.DeleteCustomerReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: customer_pb.NilRes) => void): grpcWeb.ClientReadableStream<customer_pb.NilRes>;

  deleteCustomer(
    request: customer_pb.DeleteCustomerReq,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: customer_pb.NilRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/highlyregarded.customer.Customer/DeleteCustomer',
        request,
        metadata || {},
        this.methodDescriptorDeleteCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/highlyregarded.customer.Customer/DeleteCustomer',
    request,
    metadata || {},
    this.methodDescriptorDeleteCustomer);
  }

}

