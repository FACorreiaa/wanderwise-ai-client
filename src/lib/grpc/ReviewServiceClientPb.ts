/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.review.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: review.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as review_pb from './review_pb'; // proto import: "review.proto"


export class ReviewServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/CreateReview',
    grpcWeb.MethodType.UNARY,
    review_pb.CreateReviewRequest,
    review_pb.CreateReviewResponse,
    (request: review_pb.CreateReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.CreateReviewResponse.deserializeBinary
  );

  createReview(
    request: review_pb.CreateReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.CreateReviewResponse>;

  createReview(
    request: review_pb.CreateReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.CreateReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.CreateReviewResponse>;

  createReview(
    request: review_pb.CreateReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.CreateReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/CreateReview',
        request,
        metadata || {},
        this.methodDescriptorCreateReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/CreateReview',
    request,
    metadata || {},
    this.methodDescriptorCreateReview);
  }

  methodDescriptorGetPOIReviews = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/GetPOIReviews',
    grpcWeb.MethodType.UNARY,
    review_pb.GetPOIReviewsRequest,
    review_pb.GetPOIReviewsResponse,
    (request: review_pb.GetPOIReviewsRequest) => {
      return request.serializeBinary();
    },
    review_pb.GetPOIReviewsResponse.deserializeBinary
  );

  getPOIReviews(
    request: review_pb.GetPOIReviewsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.GetPOIReviewsResponse>;

  getPOIReviews(
    request: review_pb.GetPOIReviewsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.GetPOIReviewsResponse) => void): grpcWeb.ClientReadableStream<review_pb.GetPOIReviewsResponse>;

  getPOIReviews(
    request: review_pb.GetPOIReviewsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.GetPOIReviewsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/GetPOIReviews',
        request,
        metadata || {},
        this.methodDescriptorGetPOIReviews,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/GetPOIReviews',
    request,
    metadata || {},
    this.methodDescriptorGetPOIReviews);
  }

  methodDescriptorGetReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/GetReview',
    grpcWeb.MethodType.UNARY,
    review_pb.GetReviewRequest,
    review_pb.GetReviewResponse,
    (request: review_pb.GetReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.GetReviewResponse.deserializeBinary
  );

  getReview(
    request: review_pb.GetReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.GetReviewResponse>;

  getReview(
    request: review_pb.GetReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.GetReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.GetReviewResponse>;

  getReview(
    request: review_pb.GetReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.GetReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/GetReview',
        request,
        metadata || {},
        this.methodDescriptorGetReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/GetReview',
    request,
    metadata || {},
    this.methodDescriptorGetReview);
  }

  methodDescriptorUpdateReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/UpdateReview',
    grpcWeb.MethodType.UNARY,
    review_pb.UpdateReviewRequest,
    review_pb.UpdateReviewResponse,
    (request: review_pb.UpdateReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.UpdateReviewResponse.deserializeBinary
  );

  updateReview(
    request: review_pb.UpdateReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.UpdateReviewResponse>;

  updateReview(
    request: review_pb.UpdateReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.UpdateReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.UpdateReviewResponse>;

  updateReview(
    request: review_pb.UpdateReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.UpdateReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/UpdateReview',
        request,
        metadata || {},
        this.methodDescriptorUpdateReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/UpdateReview',
    request,
    metadata || {},
    this.methodDescriptorUpdateReview);
  }

  methodDescriptorDeleteReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/DeleteReview',
    grpcWeb.MethodType.UNARY,
    review_pb.DeleteReviewRequest,
    review_pb.DeleteReviewResponse,
    (request: review_pb.DeleteReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.DeleteReviewResponse.deserializeBinary
  );

  deleteReview(
    request: review_pb.DeleteReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.DeleteReviewResponse>;

  deleteReview(
    request: review_pb.DeleteReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.DeleteReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.DeleteReviewResponse>;

  deleteReview(
    request: review_pb.DeleteReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.DeleteReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/DeleteReview',
        request,
        metadata || {},
        this.methodDescriptorDeleteReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/DeleteReview',
    request,
    metadata || {},
    this.methodDescriptorDeleteReview);
  }

  methodDescriptorGetUserReviews = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/GetUserReviews',
    grpcWeb.MethodType.UNARY,
    review_pb.GetUserReviewsRequest,
    review_pb.GetUserReviewsResponse,
    (request: review_pb.GetUserReviewsRequest) => {
      return request.serializeBinary();
    },
    review_pb.GetUserReviewsResponse.deserializeBinary
  );

  getUserReviews(
    request: review_pb.GetUserReviewsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.GetUserReviewsResponse>;

  getUserReviews(
    request: review_pb.GetUserReviewsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.GetUserReviewsResponse) => void): grpcWeb.ClientReadableStream<review_pb.GetUserReviewsResponse>;

  getUserReviews(
    request: review_pb.GetUserReviewsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.GetUserReviewsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/GetUserReviews',
        request,
        metadata || {},
        this.methodDescriptorGetUserReviews,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/GetUserReviews',
    request,
    metadata || {},
    this.methodDescriptorGetUserReviews);
  }

  methodDescriptorLikeReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/LikeReview',
    grpcWeb.MethodType.UNARY,
    review_pb.LikeReviewRequest,
    review_pb.LikeReviewResponse,
    (request: review_pb.LikeReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.LikeReviewResponse.deserializeBinary
  );

  likeReview(
    request: review_pb.LikeReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.LikeReviewResponse>;

  likeReview(
    request: review_pb.LikeReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.LikeReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.LikeReviewResponse>;

  likeReview(
    request: review_pb.LikeReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.LikeReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/LikeReview',
        request,
        metadata || {},
        this.methodDescriptorLikeReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/LikeReview',
    request,
    metadata || {},
    this.methodDescriptorLikeReview);
  }

  methodDescriptorReportReview = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/ReportReview',
    grpcWeb.MethodType.UNARY,
    review_pb.ReportReviewRequest,
    review_pb.ReportReviewResponse,
    (request: review_pb.ReportReviewRequest) => {
      return request.serializeBinary();
    },
    review_pb.ReportReviewResponse.deserializeBinary
  );

  reportReview(
    request: review_pb.ReportReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.ReportReviewResponse>;

  reportReview(
    request: review_pb.ReportReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReportReviewResponse) => void): grpcWeb.ClientReadableStream<review_pb.ReportReviewResponse>;

  reportReview(
    request: review_pb.ReportReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReportReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/ReportReview',
        request,
        metadata || {},
        this.methodDescriptorReportReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/ReportReview',
    request,
    metadata || {},
    this.methodDescriptorReportReview);
  }

  methodDescriptorGetReviewStatistics = new grpcWeb.MethodDescriptor(
    '/ai_poi.review.v1.ReviewService/GetReviewStatistics',
    grpcWeb.MethodType.UNARY,
    review_pb.GetReviewStatisticsRequest,
    review_pb.GetReviewStatisticsResponse,
    (request: review_pb.GetReviewStatisticsRequest) => {
      return request.serializeBinary();
    },
    review_pb.GetReviewStatisticsResponse.deserializeBinary
  );

  getReviewStatistics(
    request: review_pb.GetReviewStatisticsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<review_pb.GetReviewStatisticsResponse>;

  getReviewStatistics(
    request: review_pb.GetReviewStatisticsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.GetReviewStatisticsResponse) => void): grpcWeb.ClientReadableStream<review_pb.GetReviewStatisticsResponse>;

  getReviewStatistics(
    request: review_pb.GetReviewStatisticsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.GetReviewStatisticsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.review.v1.ReviewService/GetReviewStatistics',
        request,
        metadata || {},
        this.methodDescriptorGetReviewStatistics,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.review.v1.ReviewService/GetReviewStatistics',
    request,
    metadata || {},
    this.methodDescriptorGetReviewStatistics);
  }

}

