// source: customer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.highlyregarded.customer.BaseRequest', null, global);
goog.exportSymbol('proto.highlyregarded.customer.BaseResponse', null, global);
goog.exportSymbol('proto.highlyregarded.customer.CreateCustomerReq', null, global);
goog.exportSymbol('proto.highlyregarded.customer.CreateCustomerRes', null, global);
goog.exportSymbol('proto.highlyregarded.customer.DeleteCustomerReq', null, global);
goog.exportSymbol('proto.highlyregarded.customer.GetCustomerReq', null, global);
goog.exportSymbol('proto.highlyregarded.customer.GetCustomerRes', null, global);
goog.exportSymbol('proto.highlyregarded.customer.NilRes', null, global);
goog.exportSymbol('proto.highlyregarded.customer.UpdateCustomerReq', null, global);
goog.exportSymbol('proto.highlyregarded.customer.UpdateCustomerRes', null, global);
goog.exportSymbol('proto.highlyregarded.customer.XCustomer', null, global);
goog.exportSymbol('proto.highlyregarded.customer.XDiff', null, global);
goog.exportSymbol('proto.highlyregarded.customer.XName', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.GetCustomerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.GetCustomerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.GetCustomerReq.displayName = 'proto.highlyregarded.customer.GetCustomerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.GetCustomerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.GetCustomerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.GetCustomerRes.displayName = 'proto.highlyregarded.customer.GetCustomerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.CreateCustomerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.CreateCustomerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.CreateCustomerReq.displayName = 'proto.highlyregarded.customer.CreateCustomerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.CreateCustomerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.CreateCustomerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.CreateCustomerRes.displayName = 'proto.highlyregarded.customer.CreateCustomerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.UpdateCustomerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.highlyregarded.customer.UpdateCustomerReq.repeatedFields_, null);
};
goog.inherits(proto.highlyregarded.customer.UpdateCustomerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.UpdateCustomerReq.displayName = 'proto.highlyregarded.customer.UpdateCustomerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.UpdateCustomerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.UpdateCustomerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.UpdateCustomerRes.displayName = 'proto.highlyregarded.customer.UpdateCustomerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.DeleteCustomerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.DeleteCustomerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.DeleteCustomerReq.displayName = 'proto.highlyregarded.customer.DeleteCustomerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.NilRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.NilRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.NilRes.displayName = 'proto.highlyregarded.customer.NilRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.XCustomer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.XCustomer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.XCustomer.displayName = 'proto.highlyregarded.customer.XCustomer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.XName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.XName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.XName.displayName = 'proto.highlyregarded.customer.XName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.XDiff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.highlyregarded.customer.XDiff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.XDiff.displayName = 'proto.highlyregarded.customer.XDiff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.BaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.highlyregarded.customer.BaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.BaseRequest.displayName = 'proto.highlyregarded.customer.BaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.highlyregarded.customer.BaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.highlyregarded.customer.BaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.highlyregarded.customer.BaseResponse.displayName = 'proto.highlyregarded.customer.BaseResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.GetCustomerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.GetCustomerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.GetCustomerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
publicId: jspb.Message.getFieldWithDefault(msg, 1, ""),
request: (f = msg.getRequest()) && proto.highlyregarded.customer.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.GetCustomerReq}
 */
proto.highlyregarded.customer.GetCustomerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.GetCustomerReq;
  return proto.highlyregarded.customer.GetCustomerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.GetCustomerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.GetCustomerReq}
 */
proto.highlyregarded.customer.GetCustomerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicId(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseRequest;
      reader.readMessage(value,proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.GetCustomerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.GetCustomerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.GetCustomerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string public_id = 1;
 * @return {string}
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.getPublicId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.GetCustomerReq} returns this
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.setPublicId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.getRequest = function() {
  return /** @type{?proto.highlyregarded.customer.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseRequest, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseRequest|undefined} value
 * @return {!proto.highlyregarded.customer.GetCustomerReq} returns this
*/
proto.highlyregarded.customer.GetCustomerReq.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.GetCustomerReq} returns this
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.GetCustomerReq.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.GetCustomerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.GetCustomerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.GetCustomerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
customer: (f = msg.getCustomer()) && proto.highlyregarded.customer.XCustomer.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.highlyregarded.customer.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.GetCustomerRes}
 */
proto.highlyregarded.customer.GetCustomerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.GetCustomerRes;
  return proto.highlyregarded.customer.GetCustomerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.GetCustomerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.GetCustomerRes}
 */
proto.highlyregarded.customer.GetCustomerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.highlyregarded.customer.XCustomer;
      reader.readMessage(value,proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseResponse;
      reader.readMessage(value,proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.GetCustomerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.GetCustomerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.GetCustomerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional XCustomer customer = 3;
 * @return {?proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.getCustomer = function() {
  return /** @type{?proto.highlyregarded.customer.XCustomer} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.XCustomer, 3));
};


/**
 * @param {?proto.highlyregarded.customer.XCustomer|undefined} value
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
*/
proto.highlyregarded.customer.GetCustomerRes.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.getResponse = function() {
  return /** @type{?proto.highlyregarded.customer.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseResponse, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseResponse|undefined} value
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
*/
proto.highlyregarded.customer.GetCustomerRes.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.GetCustomerRes} returns this
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.GetCustomerRes.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.CreateCustomerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.CreateCustomerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.CreateCustomerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
customer: (f = msg.getCustomer()) && proto.highlyregarded.customer.XCustomer.toObject(includeInstance, f),
request: (f = msg.getRequest()) && proto.highlyregarded.customer.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.CreateCustomerReq}
 */
proto.highlyregarded.customer.CreateCustomerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.CreateCustomerReq;
  return proto.highlyregarded.customer.CreateCustomerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.CreateCustomerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.CreateCustomerReq}
 */
proto.highlyregarded.customer.CreateCustomerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.highlyregarded.customer.XCustomer;
      reader.readMessage(value,proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseRequest;
      reader.readMessage(value,proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.CreateCustomerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.CreateCustomerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.CreateCustomerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional XCustomer customer = 1;
 * @return {?proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.getCustomer = function() {
  return /** @type{?proto.highlyregarded.customer.XCustomer} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.XCustomer, 1));
};


/**
 * @param {?proto.highlyregarded.customer.XCustomer|undefined} value
 * @return {!proto.highlyregarded.customer.CreateCustomerReq} returns this
*/
proto.highlyregarded.customer.CreateCustomerReq.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.CreateCustomerReq} returns this
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.getRequest = function() {
  return /** @type{?proto.highlyregarded.customer.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseRequest, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseRequest|undefined} value
 * @return {!proto.highlyregarded.customer.CreateCustomerReq} returns this
*/
proto.highlyregarded.customer.CreateCustomerReq.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.CreateCustomerReq} returns this
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.CreateCustomerReq.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.CreateCustomerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.CreateCustomerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.CreateCustomerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
customer: (f = msg.getCustomer()) && proto.highlyregarded.customer.XCustomer.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.highlyregarded.customer.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.CreateCustomerRes}
 */
proto.highlyregarded.customer.CreateCustomerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.CreateCustomerRes;
  return proto.highlyregarded.customer.CreateCustomerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.CreateCustomerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.CreateCustomerRes}
 */
proto.highlyregarded.customer.CreateCustomerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.highlyregarded.customer.XCustomer;
      reader.readMessage(value,proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseResponse;
      reader.readMessage(value,proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.CreateCustomerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.CreateCustomerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.CreateCustomerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional XCustomer customer = 3;
 * @return {?proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.getCustomer = function() {
  return /** @type{?proto.highlyregarded.customer.XCustomer} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.XCustomer, 3));
};


/**
 * @param {?proto.highlyregarded.customer.XCustomer|undefined} value
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
*/
proto.highlyregarded.customer.CreateCustomerRes.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.getResponse = function() {
  return /** @type{?proto.highlyregarded.customer.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseResponse, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseResponse|undefined} value
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
*/
proto.highlyregarded.customer.CreateCustomerRes.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.CreateCustomerRes} returns this
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.CreateCustomerRes.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.highlyregarded.customer.UpdateCustomerReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.UpdateCustomerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.UpdateCustomerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.UpdateCustomerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
customerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.highlyregarded.customer.XDiff.toObject, includeInstance),
request: (f = msg.getRequest()) && proto.highlyregarded.customer.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq}
 */
proto.highlyregarded.customer.UpdateCustomerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.UpdateCustomerReq;
  return proto.highlyregarded.customer.UpdateCustomerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.UpdateCustomerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq}
 */
proto.highlyregarded.customer.UpdateCustomerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 2:
      var value = new proto.highlyregarded.customer.XDiff;
      reader.readMessage(value,proto.highlyregarded.customer.XDiff.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseRequest;
      reader.readMessage(value,proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.UpdateCustomerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.UpdateCustomerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.UpdateCustomerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.highlyregarded.customer.XDiff.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq} returns this
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated XDiff updates = 2;
 * @return {!Array<!proto.highlyregarded.customer.XDiff>}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.highlyregarded.customer.XDiff>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.highlyregarded.customer.XDiff, 2));
};


/**
 * @param {!Array<!proto.highlyregarded.customer.XDiff>} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq} returns this
*/
proto.highlyregarded.customer.UpdateCustomerReq.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.highlyregarded.customer.XDiff=} opt_value
 * @param {number=} opt_index
 * @return {!proto.highlyregarded.customer.XDiff}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.highlyregarded.customer.XDiff, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq} returns this
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.getRequest = function() {
  return /** @type{?proto.highlyregarded.customer.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseRequest, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseRequest|undefined} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq} returns this
*/
proto.highlyregarded.customer.UpdateCustomerReq.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.UpdateCustomerReq} returns this
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.UpdateCustomerReq.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.UpdateCustomerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.UpdateCustomerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.UpdateCustomerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
customer: (f = msg.getCustomer()) && proto.highlyregarded.customer.XCustomer.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.highlyregarded.customer.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes}
 */
proto.highlyregarded.customer.UpdateCustomerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.UpdateCustomerRes;
  return proto.highlyregarded.customer.UpdateCustomerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.UpdateCustomerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes}
 */
proto.highlyregarded.customer.UpdateCustomerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.highlyregarded.customer.XCustomer;
      reader.readMessage(value,proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseResponse;
      reader.readMessage(value,proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.UpdateCustomerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.UpdateCustomerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.UpdateCustomerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional XCustomer customer = 3;
 * @return {?proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.getCustomer = function() {
  return /** @type{?proto.highlyregarded.customer.XCustomer} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.XCustomer, 3));
};


/**
 * @param {?proto.highlyregarded.customer.XCustomer|undefined} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
*/
proto.highlyregarded.customer.UpdateCustomerRes.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.getResponse = function() {
  return /** @type{?proto.highlyregarded.customer.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseResponse, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseResponse|undefined} value
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
*/
proto.highlyregarded.customer.UpdateCustomerRes.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.UpdateCustomerRes} returns this
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.UpdateCustomerRes.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.DeleteCustomerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.DeleteCustomerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.DeleteCustomerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
customerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
hardDelete: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
request: (f = msg.getRequest()) && proto.highlyregarded.customer.BaseRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq}
 */
proto.highlyregarded.customer.DeleteCustomerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.DeleteCustomerReq;
  return proto.highlyregarded.customer.DeleteCustomerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.DeleteCustomerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq}
 */
proto.highlyregarded.customer.DeleteCustomerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHardDelete(value);
      break;
    case 100:
      var value = new proto.highlyregarded.customer.BaseRequest;
      reader.readMessage(value,proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.DeleteCustomerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.DeleteCustomerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.DeleteCustomerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHardDelete();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq} returns this
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool hard_delete = 2;
 * @return {boolean}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.getHardDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq} returns this
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.setHardDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional BaseRequest request = 100;
 * @return {?proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.getRequest = function() {
  return /** @type{?proto.highlyregarded.customer.BaseRequest} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseRequest, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseRequest|undefined} value
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq} returns this
*/
proto.highlyregarded.customer.DeleteCustomerReq.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.DeleteCustomerReq} returns this
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.DeleteCustomerReq.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.NilRes.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.NilRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.NilRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.NilRes.toObject = function(includeInstance, msg) {
  var f, obj = {
response: (f = msg.getResponse()) && proto.highlyregarded.customer.BaseResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.NilRes}
 */
proto.highlyregarded.customer.NilRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.NilRes;
  return proto.highlyregarded.customer.NilRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.NilRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.NilRes}
 */
proto.highlyregarded.customer.NilRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.highlyregarded.customer.BaseResponse;
      reader.readMessage(value,proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.NilRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.NilRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.NilRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.NilRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResponse response = 100;
 * @return {?proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.NilRes.prototype.getResponse = function() {
  return /** @type{?proto.highlyregarded.customer.BaseResponse} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.BaseResponse, 100));
};


/**
 * @param {?proto.highlyregarded.customer.BaseResponse|undefined} value
 * @return {!proto.highlyregarded.customer.NilRes} returns this
*/
proto.highlyregarded.customer.NilRes.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.NilRes} returns this
 */
proto.highlyregarded.customer.NilRes.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.NilRes.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.XCustomer.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.XCustomer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.XCustomer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XCustomer.toObject = function(includeInstance, msg) {
  var f, obj = {
publicId: jspb.Message.getFieldWithDefault(msg, 1, ""),
privateId: jspb.Message.getFieldWithDefault(msg, 2, ""),
name: (f = msg.getName()) && proto.highlyregarded.customer.XName.toObject(includeInstance, f),
email: jspb.Message.getFieldWithDefault(msg, 4, ""),
phone: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.XCustomer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.XCustomer;
  return proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.XCustomer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.XCustomer}
 */
proto.highlyregarded.customer.XCustomer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivateId(value);
      break;
    case 3:
      var value = new proto.highlyregarded.customer.XName;
      reader.readMessage(value,proto.highlyregarded.customer.XName.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.XCustomer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.XCustomer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XCustomer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrivateId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.highlyregarded.customer.XName.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string public_id = 1;
 * @return {string}
 */
proto.highlyregarded.customer.XCustomer.prototype.getPublicId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
 */
proto.highlyregarded.customer.XCustomer.prototype.setPublicId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string private_id = 2;
 * @return {string}
 */
proto.highlyregarded.customer.XCustomer.prototype.getPrivateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
 */
proto.highlyregarded.customer.XCustomer.prototype.setPrivateId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional XName name = 3;
 * @return {?proto.highlyregarded.customer.XName}
 */
proto.highlyregarded.customer.XCustomer.prototype.getName = function() {
  return /** @type{?proto.highlyregarded.customer.XName} */ (
    jspb.Message.getWrapperField(this, proto.highlyregarded.customer.XName, 3));
};


/**
 * @param {?proto.highlyregarded.customer.XName|undefined} value
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
*/
proto.highlyregarded.customer.XCustomer.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
 */
proto.highlyregarded.customer.XCustomer.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.highlyregarded.customer.XCustomer.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.highlyregarded.customer.XCustomer.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
 */
proto.highlyregarded.customer.XCustomer.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.highlyregarded.customer.XCustomer.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XCustomer} returns this
 */
proto.highlyregarded.customer.XCustomer.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.XName.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.XName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.XName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XName.toObject = function(includeInstance, msg) {
  var f, obj = {
title: jspb.Message.getFieldWithDefault(msg, 1, ""),
first: jspb.Message.getFieldWithDefault(msg, 2, ""),
middle: jspb.Message.getFieldWithDefault(msg, 3, ""),
last: jspb.Message.getFieldWithDefault(msg, 4, ""),
suffix: jspb.Message.getFieldWithDefault(msg, 5, ""),
nickname: jspb.Message.getFieldWithDefault(msg, 6, ""),
full: jspb.Message.getFieldWithDefault(msg, 7, ""),
friendly: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.XName}
 */
proto.highlyregarded.customer.XName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.XName;
  return proto.highlyregarded.customer.XName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.XName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.XName}
 */
proto.highlyregarded.customer.XName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirst(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLast(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuffix(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFull(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFriendly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.XName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.XName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.XName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirst();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMiddle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLast();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSuffix();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFull();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFriendly();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string first = 2;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getFirst = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setFirst = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string middle = 3;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getMiddle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setMiddle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last = 4;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getLast = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setLast = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string suffix = 5;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getSuffix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setSuffix = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string nickname = 6;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setNickname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string full = 7;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getFull = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setFull = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string friendly = 8;
 * @return {string}
 */
proto.highlyregarded.customer.XName.prototype.getFriendly = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XName} returns this
 */
proto.highlyregarded.customer.XName.prototype.setFriendly = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.XDiff.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.XDiff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.XDiff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XDiff.toObject = function(includeInstance, msg) {
  var f, obj = {
field: jspb.Message.getFieldWithDefault(msg, 1, ""),
oldValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
newValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.XDiff}
 */
proto.highlyregarded.customer.XDiff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.XDiff;
  return proto.highlyregarded.customer.XDiff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.XDiff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.XDiff}
 */
proto.highlyregarded.customer.XDiff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.XDiff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.XDiff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.XDiff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.XDiff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOldValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.highlyregarded.customer.XDiff.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XDiff} returns this
 */
proto.highlyregarded.customer.XDiff.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string old_value = 2;
 * @return {string}
 */
proto.highlyregarded.customer.XDiff.prototype.getOldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XDiff} returns this
 */
proto.highlyregarded.customer.XDiff.prototype.setOldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string new_value = 3;
 * @return {string}
 */
proto.highlyregarded.customer.XDiff.prototype.getNewValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.XDiff} returns this
 */
proto.highlyregarded.customer.XDiff.prototype.setNewValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.BaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.BaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.BaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.BaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
downstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.BaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.BaseRequest;
  return proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.BaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.BaseRequest}
 */
proto.highlyregarded.customer.BaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.BaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.BaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.BaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDownstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
};


/**
 * optional string downstream = 998;
 * @return {string}
 */
proto.highlyregarded.customer.BaseRequest.prototype.getDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.BaseRequest} returns this
 */
proto.highlyregarded.customer.BaseRequest.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.highlyregarded.customer.BaseRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.BaseRequest} returns this
 */
proto.highlyregarded.customer.BaseRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.highlyregarded.customer.BaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.highlyregarded.customer.BaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.highlyregarded.customer.BaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.BaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
upstream: jspb.Message.getFieldWithDefault(msg, 998, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 999, ""),
status: jspb.Message.getFieldWithDefault(msg, 1000, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.BaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.highlyregarded.customer.BaseResponse;
  return proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.highlyregarded.customer.BaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.highlyregarded.customer.BaseResponse}
 */
proto.highlyregarded.customer.BaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 998:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstream(value);
      break;
    case 999:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.highlyregarded.customer.BaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.highlyregarded.customer.BaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.highlyregarded.customer.BaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f.length > 0) {
    writer.writeString(
      998,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      999,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
};


/**
 * optional string upstream = 998;
 * @return {string}
 */
proto.highlyregarded.customer.BaseResponse.prototype.getUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 998, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.BaseResponse} returns this
 */
proto.highlyregarded.customer.BaseResponse.prototype.setUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 998, value);
};


/**
 * optional string request_id = 999;
 * @return {string}
 */
proto.highlyregarded.customer.BaseResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 999, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.BaseResponse} returns this
 */
proto.highlyregarded.customer.BaseResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 999, value);
};


/**
 * optional string status = 1000;
 * @return {string}
 */
proto.highlyregarded.customer.BaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.highlyregarded.customer.BaseResponse} returns this
 */
proto.highlyregarded.customer.BaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


goog.object.extend(exports, proto.highlyregarded.customer);
