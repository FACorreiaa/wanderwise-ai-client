/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.user.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: user.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as user_pb from './user_pb'; // proto import: "user.proto"


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetUserProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetUserProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.GetUserProfileRequest,
    user_pb.GetUserProfileResponse,
    (request: user_pb.GetUserProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetUserProfileResponse.deserializeBinary
  );

  getUserProfile(
    request: user_pb.GetUserProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetUserProfileResponse>;

  getUserProfile(
    request: user_pb.GetUserProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetUserProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetUserProfileResponse>;

  getUserProfile(
    request: user_pb.GetUserProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetUserProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetUserProfile',
        request,
        metadata || {},
        this.methodDescriptorGetUserProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetUserProfile',
    request,
    metadata || {},
    this.methodDescriptorGetUserProfile);
  }

  methodDescriptorUpdateUserProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/UpdateUserProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.UpdateUserProfileRequest,
    user_pb.UpdateUserProfileResponse,
    (request: user_pb.UpdateUserProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.UpdateUserProfileResponse.deserializeBinary
  );

  updateUserProfile(
    request: user_pb.UpdateUserProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.UpdateUserProfileResponse>;

  updateUserProfile(
    request: user_pb.UpdateUserProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.UpdateUserProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.UpdateUserProfileResponse>;

  updateUserProfile(
    request: user_pb.UpdateUserProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.UpdateUserProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/UpdateUserProfile',
        request,
        metadata || {},
        this.methodDescriptorUpdateUserProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateUserProfile',
    request,
    metadata || {},
    this.methodDescriptorUpdateUserProfile);
  }

  methodDescriptorGetSearchProfiles = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetSearchProfiles',
    grpcWeb.MethodType.UNARY,
    user_pb.GetSearchProfilesRequest,
    user_pb.GetSearchProfilesResponse,
    (request: user_pb.GetSearchProfilesRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetSearchProfilesResponse.deserializeBinary
  );

  getSearchProfiles(
    request: user_pb.GetSearchProfilesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetSearchProfilesResponse>;

  getSearchProfiles(
    request: user_pb.GetSearchProfilesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetSearchProfilesResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetSearchProfilesResponse>;

  getSearchProfiles(
    request: user_pb.GetSearchProfilesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetSearchProfilesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetSearchProfiles',
        request,
        metadata || {},
        this.methodDescriptorGetSearchProfiles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfiles',
    request,
    metadata || {},
    this.methodDescriptorGetSearchProfiles);
  }

  methodDescriptorGetSearchProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetSearchProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.GetSearchProfileRequest,
    user_pb.GetSearchProfileResponse,
    (request: user_pb.GetSearchProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetSearchProfileResponse.deserializeBinary
  );

  getSearchProfile(
    request: user_pb.GetSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetSearchProfileResponse>;

  getSearchProfile(
    request: user_pb.GetSearchProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetSearchProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetSearchProfileResponse>;

  getSearchProfile(
    request: user_pb.GetSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetSearchProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetSearchProfile',
        request,
        metadata || {},
        this.methodDescriptorGetSearchProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetSearchProfile',
    request,
    metadata || {},
    this.methodDescriptorGetSearchProfile);
  }

  methodDescriptorCreateSearchProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/CreateSearchProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.CreateSearchProfileRequest,
    user_pb.CreateSearchProfileResponse,
    (request: user_pb.CreateSearchProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.CreateSearchProfileResponse.deserializeBinary
  );

  createSearchProfile(
    request: user_pb.CreateSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.CreateSearchProfileResponse>;

  createSearchProfile(
    request: user_pb.CreateSearchProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.CreateSearchProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.CreateSearchProfileResponse>;

  createSearchProfile(
    request: user_pb.CreateSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.CreateSearchProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/CreateSearchProfile',
        request,
        metadata || {},
        this.methodDescriptorCreateSearchProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateSearchProfile',
    request,
    metadata || {},
    this.methodDescriptorCreateSearchProfile);
  }

  methodDescriptorUpdateSearchProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/UpdateSearchProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.UpdateSearchProfileRequest,
    user_pb.UpdateSearchProfileResponse,
    (request: user_pb.UpdateSearchProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.UpdateSearchProfileResponse.deserializeBinary
  );

  updateSearchProfile(
    request: user_pb.UpdateSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.UpdateSearchProfileResponse>;

  updateSearchProfile(
    request: user_pb.UpdateSearchProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.UpdateSearchProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.UpdateSearchProfileResponse>;

  updateSearchProfile(
    request: user_pb.UpdateSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.UpdateSearchProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/UpdateSearchProfile',
        request,
        metadata || {},
        this.methodDescriptorUpdateSearchProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateSearchProfile',
    request,
    metadata || {},
    this.methodDescriptorUpdateSearchProfile);
  }

  methodDescriptorDeleteSearchProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/DeleteSearchProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.DeleteSearchProfileRequest,
    user_pb.DeleteSearchProfileResponse,
    (request: user_pb.DeleteSearchProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.DeleteSearchProfileResponse.deserializeBinary
  );

  deleteSearchProfile(
    request: user_pb.DeleteSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.DeleteSearchProfileResponse>;

  deleteSearchProfile(
    request: user_pb.DeleteSearchProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.DeleteSearchProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.DeleteSearchProfileResponse>;

  deleteSearchProfile(
    request: user_pb.DeleteSearchProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.DeleteSearchProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/DeleteSearchProfile',
        request,
        metadata || {},
        this.methodDescriptorDeleteSearchProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteSearchProfile',
    request,
    metadata || {},
    this.methodDescriptorDeleteSearchProfile);
  }

  methodDescriptorGetDefaultProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetDefaultProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.GetDefaultProfileRequest,
    user_pb.GetDefaultProfileResponse,
    (request: user_pb.GetDefaultProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetDefaultProfileResponse.deserializeBinary
  );

  getDefaultProfile(
    request: user_pb.GetDefaultProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetDefaultProfileResponse>;

  getDefaultProfile(
    request: user_pb.GetDefaultProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetDefaultProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetDefaultProfileResponse>;

  getDefaultProfile(
    request: user_pb.GetDefaultProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetDefaultProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetDefaultProfile',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetDefaultProfile',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultProfile);
  }

  methodDescriptorSetDefaultProfile = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/SetDefaultProfile',
    grpcWeb.MethodType.UNARY,
    user_pb.SetDefaultProfileRequest,
    user_pb.SetDefaultProfileResponse,
    (request: user_pb.SetDefaultProfileRequest) => {
      return request.serializeBinary();
    },
    user_pb.SetDefaultProfileResponse.deserializeBinary
  );

  setDefaultProfile(
    request: user_pb.SetDefaultProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.SetDefaultProfileResponse>;

  setDefaultProfile(
    request: user_pb.SetDefaultProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.SetDefaultProfileResponse) => void): grpcWeb.ClientReadableStream<user_pb.SetDefaultProfileResponse>;

  setDefaultProfile(
    request: user_pb.SetDefaultProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.SetDefaultProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/SetDefaultProfile',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/SetDefaultProfile',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultProfile);
  }

  methodDescriptorGetInterests = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetInterests',
    grpcWeb.MethodType.UNARY,
    user_pb.GetInterestsRequest,
    user_pb.GetInterestsResponse,
    (request: user_pb.GetInterestsRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetInterestsResponse.deserializeBinary
  );

  getInterests(
    request: user_pb.GetInterestsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetInterestsResponse>;

  getInterests(
    request: user_pb.GetInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetInterestsResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetInterestsResponse>;

  getInterests(
    request: user_pb.GetInterestsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetInterestsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetInterests',
        request,
        metadata || {},
        this.methodDescriptorGetInterests,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetInterests',
    request,
    metadata || {},
    this.methodDescriptorGetInterests);
  }

  methodDescriptorCreateInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/CreateInterest',
    grpcWeb.MethodType.UNARY,
    user_pb.CreateInterestRequest,
    user_pb.CreateInterestResponse,
    (request: user_pb.CreateInterestRequest) => {
      return request.serializeBinary();
    },
    user_pb.CreateInterestResponse.deserializeBinary
  );

  createInterest(
    request: user_pb.CreateInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.CreateInterestResponse>;

  createInterest(
    request: user_pb.CreateInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.CreateInterestResponse) => void): grpcWeb.ClientReadableStream<user_pb.CreateInterestResponse>;

  createInterest(
    request: user_pb.CreateInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.CreateInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/CreateInterest',
        request,
        metadata || {},
        this.methodDescriptorCreateInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateInterest',
    request,
    metadata || {},
    this.methodDescriptorCreateInterest);
  }

  methodDescriptorUpdateInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/UpdateInterest',
    grpcWeb.MethodType.UNARY,
    user_pb.UpdateInterestRequest,
    user_pb.UpdateInterestResponse,
    (request: user_pb.UpdateInterestRequest) => {
      return request.serializeBinary();
    },
    user_pb.UpdateInterestResponse.deserializeBinary
  );

  updateInterest(
    request: user_pb.UpdateInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.UpdateInterestResponse>;

  updateInterest(
    request: user_pb.UpdateInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.UpdateInterestResponse) => void): grpcWeb.ClientReadableStream<user_pb.UpdateInterestResponse>;

  updateInterest(
    request: user_pb.UpdateInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.UpdateInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/UpdateInterest',
        request,
        metadata || {},
        this.methodDescriptorUpdateInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateInterest',
    request,
    metadata || {},
    this.methodDescriptorUpdateInterest);
  }

  methodDescriptorDeleteInterest = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/DeleteInterest',
    grpcWeb.MethodType.UNARY,
    user_pb.DeleteInterestRequest,
    user_pb.DeleteInterestResponse,
    (request: user_pb.DeleteInterestRequest) => {
      return request.serializeBinary();
    },
    user_pb.DeleteInterestResponse.deserializeBinary
  );

  deleteInterest(
    request: user_pb.DeleteInterestRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.DeleteInterestResponse>;

  deleteInterest(
    request: user_pb.DeleteInterestRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.DeleteInterestResponse) => void): grpcWeb.ClientReadableStream<user_pb.DeleteInterestResponse>;

  deleteInterest(
    request: user_pb.DeleteInterestRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.DeleteInterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/DeleteInterest',
        request,
        metadata || {},
        this.methodDescriptorDeleteInterest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteInterest',
    request,
    metadata || {},
    this.methodDescriptorDeleteInterest);
  }

  methodDescriptorGetTags = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetTags',
    grpcWeb.MethodType.UNARY,
    user_pb.GetTagsRequest,
    user_pb.GetTagsResponse,
    (request: user_pb.GetTagsRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetTagsResponse.deserializeBinary
  );

  getTags(
    request: user_pb.GetTagsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetTagsResponse>;

  getTags(
    request: user_pb.GetTagsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetTagsResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetTagsResponse>;

  getTags(
    request: user_pb.GetTagsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetTagsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetTags',
        request,
        metadata || {},
        this.methodDescriptorGetTags,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTags',
    request,
    metadata || {},
    this.methodDescriptorGetTags);
  }

  methodDescriptorGetTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/GetTag',
    grpcWeb.MethodType.UNARY,
    user_pb.GetTagRequest,
    user_pb.GetTagResponse,
    (request: user_pb.GetTagRequest) => {
      return request.serializeBinary();
    },
    user_pb.GetTagResponse.deserializeBinary
  );

  getTag(
    request: user_pb.GetTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.GetTagResponse>;

  getTag(
    request: user_pb.GetTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.GetTagResponse) => void): grpcWeb.ClientReadableStream<user_pb.GetTagResponse>;

  getTag(
    request: user_pb.GetTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.GetTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/GetTag',
        request,
        metadata || {},
        this.methodDescriptorGetTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/GetTag',
    request,
    metadata || {},
    this.methodDescriptorGetTag);
  }

  methodDescriptorCreateTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/CreateTag',
    grpcWeb.MethodType.UNARY,
    user_pb.CreateTagRequest,
    user_pb.CreateTagResponse,
    (request: user_pb.CreateTagRequest) => {
      return request.serializeBinary();
    },
    user_pb.CreateTagResponse.deserializeBinary
  );

  createTag(
    request: user_pb.CreateTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.CreateTagResponse>;

  createTag(
    request: user_pb.CreateTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.CreateTagResponse) => void): grpcWeb.ClientReadableStream<user_pb.CreateTagResponse>;

  createTag(
    request: user_pb.CreateTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.CreateTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/CreateTag',
        request,
        metadata || {},
        this.methodDescriptorCreateTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/CreateTag',
    request,
    metadata || {},
    this.methodDescriptorCreateTag);
  }

  methodDescriptorUpdateTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/UpdateTag',
    grpcWeb.MethodType.UNARY,
    user_pb.UpdateTagRequest,
    user_pb.UpdateTagResponse,
    (request: user_pb.UpdateTagRequest) => {
      return request.serializeBinary();
    },
    user_pb.UpdateTagResponse.deserializeBinary
  );

  updateTag(
    request: user_pb.UpdateTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.UpdateTagResponse>;

  updateTag(
    request: user_pb.UpdateTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.UpdateTagResponse) => void): grpcWeb.ClientReadableStream<user_pb.UpdateTagResponse>;

  updateTag(
    request: user_pb.UpdateTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.UpdateTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/UpdateTag',
        request,
        metadata || {},
        this.methodDescriptorUpdateTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/UpdateTag',
    request,
    metadata || {},
    this.methodDescriptorUpdateTag);
  }

  methodDescriptorDeleteTag = new grpcWeb.MethodDescriptor(
    '/ai_poi.user.v1.UserService/DeleteTag',
    grpcWeb.MethodType.UNARY,
    user_pb.DeleteTagRequest,
    user_pb.DeleteTagResponse,
    (request: user_pb.DeleteTagRequest) => {
      return request.serializeBinary();
    },
    user_pb.DeleteTagResponse.deserializeBinary
  );

  deleteTag(
    request: user_pb.DeleteTagRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_pb.DeleteTagResponse>;

  deleteTag(
    request: user_pb.DeleteTagRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_pb.DeleteTagResponse) => void): grpcWeb.ClientReadableStream<user_pb.DeleteTagResponse>;

  deleteTag(
    request: user_pb.DeleteTagRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_pb.DeleteTagResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.user.v1.UserService/DeleteTag',
        request,
        metadata || {},
        this.methodDescriptorDeleteTag,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.user.v1.UserService/DeleteTag',
    request,
    metadata || {},
    this.methodDescriptorDeleteTag);
  }

}

