/**
 * @fileoverview gRPC-Web generated client stub for ai_poi.city.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: city.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as city_pb from './city_pb'; // proto import: "city.proto"


export class CityServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetCities = new grpcWeb.MethodDescriptor(
    '/ai_poi.city.v1.CityService/GetCities',
    grpcWeb.MethodType.UNARY,
    city_pb.GetCitiesRequest,
    city_pb.GetCitiesResponse,
    (request: city_pb.GetCitiesRequest) => {
      return request.serializeBinary();
    },
    city_pb.GetCitiesResponse.deserializeBinary
  );

  getCities(
    request: city_pb.GetCitiesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<city_pb.GetCitiesResponse>;

  getCities(
    request: city_pb.GetCitiesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: city_pb.GetCitiesResponse) => void): grpcWeb.ClientReadableStream<city_pb.GetCitiesResponse>;

  getCities(
    request: city_pb.GetCitiesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: city_pb.GetCitiesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.city.v1.CityService/GetCities',
        request,
        metadata || {},
        this.methodDescriptorGetCities,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCities',
    request,
    metadata || {},
    this.methodDescriptorGetCities);
  }

  methodDescriptorGetCity = new grpcWeb.MethodDescriptor(
    '/ai_poi.city.v1.CityService/GetCity',
    grpcWeb.MethodType.UNARY,
    city_pb.GetCityRequest,
    city_pb.GetCityResponse,
    (request: city_pb.GetCityRequest) => {
      return request.serializeBinary();
    },
    city_pb.GetCityResponse.deserializeBinary
  );

  getCity(
    request: city_pb.GetCityRequest,
    metadata?: grpcWeb.Metadata | null): Promise<city_pb.GetCityResponse>;

  getCity(
    request: city_pb.GetCityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: city_pb.GetCityResponse) => void): grpcWeb.ClientReadableStream<city_pb.GetCityResponse>;

  getCity(
    request: city_pb.GetCityRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: city_pb.GetCityResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.city.v1.CityService/GetCity',
        request,
        metadata || {},
        this.methodDescriptorGetCity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCity',
    request,
    metadata || {},
    this.methodDescriptorGetCity);
  }

  methodDescriptorSearchCities = new grpcWeb.MethodDescriptor(
    '/ai_poi.city.v1.CityService/SearchCities',
    grpcWeb.MethodType.UNARY,
    city_pb.SearchCitiesRequest,
    city_pb.SearchCitiesResponse,
    (request: city_pb.SearchCitiesRequest) => {
      return request.serializeBinary();
    },
    city_pb.SearchCitiesResponse.deserializeBinary
  );

  searchCities(
    request: city_pb.SearchCitiesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<city_pb.SearchCitiesResponse>;

  searchCities(
    request: city_pb.SearchCitiesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: city_pb.SearchCitiesResponse) => void): grpcWeb.ClientReadableStream<city_pb.SearchCitiesResponse>;

  searchCities(
    request: city_pb.SearchCitiesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: city_pb.SearchCitiesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.city.v1.CityService/SearchCities',
        request,
        metadata || {},
        this.methodDescriptorSearchCities,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.city.v1.CityService/SearchCities',
    request,
    metadata || {},
    this.methodDescriptorSearchCities);
  }

  methodDescriptorGetCityStatistics = new grpcWeb.MethodDescriptor(
    '/ai_poi.city.v1.CityService/GetCityStatistics',
    grpcWeb.MethodType.UNARY,
    city_pb.GetCityStatisticsRequest,
    city_pb.GetCityStatisticsResponse,
    (request: city_pb.GetCityStatisticsRequest) => {
      return request.serializeBinary();
    },
    city_pb.GetCityStatisticsResponse.deserializeBinary
  );

  getCityStatistics(
    request: city_pb.GetCityStatisticsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<city_pb.GetCityStatisticsResponse>;

  getCityStatistics(
    request: city_pb.GetCityStatisticsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: city_pb.GetCityStatisticsResponse) => void): grpcWeb.ClientReadableStream<city_pb.GetCityStatisticsResponse>;

  getCityStatistics(
    request: city_pb.GetCityStatisticsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: city_pb.GetCityStatisticsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ai_poi.city.v1.CityService/GetCityStatistics',
        request,
        metadata || {},
        this.methodDescriptorGetCityStatistics,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ai_poi.city.v1.CityService/GetCityStatistics',
    request,
    metadata || {},
    this.methodDescriptorGetCityStatistics);
  }

}

